<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MR MiniApp</title>
    <link>http://tonniz.github.io/docs/%E7%BB%84%E4%BB%B6/%E8%A7%86%E5%9B%BE%E5%AE%B9%E5%99%A8/</link>
    <description>Recent content on MR MiniApp</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="http://tonniz.github.io/docs/%E7%BB%84%E4%BB%B6/%E8%A7%86%E5%9B%BE%E5%AE%B9%E5%99%A8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>http://tonniz.github.io/docs/%E7%BB%84%E4%BB%B6/%E8%A7%86%E5%9B%BE%E5%AE%B9%E5%99%A8/cover-image/cover-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://tonniz.github.io/docs/%E7%BB%84%E4%BB%B6/%E8%A7%86%E5%9B%BE%E5%AE%B9%E5%99%A8/cover-image/cover-view/</guid>
      <description>cover-image#The image view overlaid on the native component. Native components that can be overridden are the same cover-view, and nesting is supported cover-view.
Property description
   Attribute name Types of Defaults Description Platform difference description     src String  Icon path. Support local path and network path. The base64 format is not supported.    @load eventhandle  Triggered when the image is loaded successfully    @error eventhandle  Triggered when the image fails to load     may cover the native app-vue components: &amp;lt;video&amp;gt;,&amp;lt;map&amp;gt;</description>
    </item>
    
    <item>
      <title></title>
      <link>http://tonniz.github.io/docs/%E7%BB%84%E4%BB%B6/%E8%A7%86%E5%9B%BE%E5%AE%B9%E5%99%A8/match-media/match-media/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://tonniz.github.io/docs/%E7%BB%84%E4%BB%B6/%E8%A7%86%E5%9B%BE%E5%AE%B9%E5%99%A8/match-media/match-media/</guid>
      <description>match-media#The media query matches the detection node.
Similar to the use of media queries to adapt to large and small screens in web development, match-media is a basic view component that can adapt to different screens. You can specify a set of media query media query rules, and this component will only be displayed when the query conditions are met.
For example, placing a sidebar in the match-media component and setting the media query rule to display on widescreen can achieve the effect of displaying the sidebar on the widescreen of the PC, but not displaying the sidebar on the narrow screen of the mobile phone.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://tonniz.github.io/docs/%E7%BB%84%E4%BB%B6/%E8%A7%86%E5%9B%BE%E5%AE%B9%E5%99%A8/movable-view/movable-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://tonniz.github.io/docs/%E7%BB%84%E4%BB%B6/%E8%A7%86%E5%9B%BE%E5%AE%B9%E5%99%A8/movable-view/movable-view/</guid>
      <description>movable-view#Movable view container, you can drag and slide or pinch to zoom on the page.
movable-viewIt must be in the movable-areacomponent and must be a direct child node, otherwise it cannot be moved.
Property description
   Attribute name Types of Defaults Description Platform difference description     direction String none The moving direction of movable-view, the attribute values are all, vertical, horizontal, none    inertia Boolean false Whether movable-view has inertia    out-of-bounds Boolean false After exceeding the movable area, can the movable-view still move?</description>
    </item>
    
    <item>
      <title></title>
      <link>http://tonniz.github.io/docs/%E7%BB%84%E4%BB%B6/%E8%A7%86%E5%9B%BE%E5%AE%B9%E5%99%A8/movavle-area/movable-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://tonniz.github.io/docs/%E7%BB%84%E4%BB%B6/%E8%A7%86%E5%9B%BE%E5%AE%B9%E5%99%A8/movavle-area/movable-view/</guid>
      <description>movable-area#Draggable area components.
Since the architecture of app and applet is separated from the logic layer and the view layer, using js to monitor the drag will cause frequent communication between the logic layer and the view layer and affect performance. In order to facilitate high-performance dragging, the platform specially encapsulates movable-areacomponents.
movable-areaRefers to the draggable range, in which embedded movable-viewcomponents are used to indicate the draggable area.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://tonniz.github.io/docs/%E7%BB%84%E4%BB%B6/%E8%A7%86%E5%9B%BE%E5%AE%B9%E5%99%A8/scroll-view/scroll-view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://tonniz.github.io/docs/%E7%BB%84%E4%BB%B6/%E8%A7%86%E5%9B%BE%E5%AE%B9%E5%99%A8/scroll-view/scroll-view/</guid>
      <description>scroll-view#Scrollable view area. Used for area scrolling.
It should be noted that in the page rendered by webview, the performance of area scrolling is not as good as page scrolling.
Property description
   Attribute name Types of Defaults Description Platform difference description     scroll-x Boolean false Allow horizontal scrolling    scroll-y Boolean false Allow vertical scrolling    upper-threshold Number 50 How far from the top/left (in px), the scrolltoupper event is triggered    lower-threshold Number 50 How far from the bottom/right side (in px), the scrolltolower event is triggered    scroll-top Number  Set the vertical scroll bar position    scroll-left Number  Set the horizontal scroll bar position    scroll-into-view String  The value should be a child element id (id cannot start with a number).</description>
    </item>
    
    <item>
      <title></title>
      <link>http://tonniz.github.io/docs/%E7%BB%84%E4%BB%B6/%E8%A7%86%E5%9B%BE%E5%AE%B9%E5%99%A8/swiper/swiper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://tonniz.github.io/docs/%E7%BB%84%E4%BB%B6/%E8%A7%86%E5%9B%BE%E5%AE%B9%E5%99%A8/swiper/swiper/</guid>
      <description>swiper#Slider view container.
Generally used for sliding left and right or up and down, such as banner carousel.
Pay attention to the difference between sliding switch and scrolling, sliding switch is one screen one screen switch. Each swiper-item under swiper is a sliding switching area and cannot stay between 2 sliding areas.
Property description
   Attribute name Types of Defaults Description Platform difference description     indicator-dots Boolean false Whether to display the panel indicator    indicator-color Color rgba(0, 0, 0, .</description>
    </item>
    
    <item>
      <title></title>
      <link>http://tonniz.github.io/docs/%E7%BB%84%E4%BB%B6/%E8%A7%86%E5%9B%BE%E5%AE%B9%E5%99%A8/view/view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://tonniz.github.io/docs/%E7%BB%84%E4%BB%B6/%E8%A7%86%E5%9B%BE%E5%AE%B9%E5%99%A8/view/view/</guid>
      <description>view#View container.
It is similar to the div in traditional html and is used to wrap the content of various elements.
Property description
   Attribute name Types of Defaults Description     hover-class String none Specifies the style class to be pressed. When hover-class=&amp;ldquo;none&amp;rdquo;, there is no click state effect   hover-stop-propagation Boolean false Specify whether to prevent the click state of the ancestor node of this node   hover-start-time Number 50 How long does the click state appear after pressing, in milliseconds   hover-stay-time Number 400 Retention time of the click state after releasing the finger, in milliseconds    Example</description>
    </item>
    
  </channel>
</rss>
