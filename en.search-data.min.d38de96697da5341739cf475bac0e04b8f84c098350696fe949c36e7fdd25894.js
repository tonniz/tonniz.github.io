'use strict';(function(){const b={cache:!0};b.doc={id:'id',field:['title','content'],store:['title','href','section']};const a=FlexSearch.create('balance',b);window.bookSearchIndex=a,a.add({id:0,href:'/docs/api/%E4%BD%8D%E7%BD%AE/%E5%9C%B0%E5%9B%BE%E7%BB%84%E4%BB%B6%E6%8E%A7%E5%88%B6/map/',title:"Map",section:"位置",content:"uni.createMapContext(mapId,this)\r#\r\rCreates and returns a map context mapContextobject. In the custom component, the second component parameters into the this example, the operation to the component \u0026lt;map\u0026gt;assembly.\nList of methods of the mapContext object\n   method parameter Description     getCenterLocation OBJECT Get the latitude and longitude of the current map center, the return is the gcj02 coordinate system   moveToLocation OBJECT To move the center of the map to the current location, it needs to be used with the show-location of the map component   getRegion OBJECT Get the field of view of the current map   getScale OBJECT Get the zoom level of the current map    $getAppMap() Precautions:\n In a page, you must onReadycall. In the assembly, you must mountedcall. nvue does not $getAppMap(), please usecreateMapContext  OBJECT parameter list of getCenterLocation\n   parameter Types Required Description     success Function no Callback function for successful interface call, res = {longitude: \u0026ldquo;longitude\u0026rdquo;, latitude: \u0026ldquo;latitude\u0026rdquo;}   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    OBJECT parameter list of moveToLocation\n   parameter Types Required Description     longitude Number no Longitude, App 2.6.8, H5, only WeChat applet 2.8.0+ support   latitude Number no Latitude, App 2.6.8, H5, only WeChat applet 2.8.0+ support   success Function no Callback function for successful interface call, res = {longitude: \u0026ldquo;longitude\u0026rdquo;, latitude: \u0026ldquo;latitude\u0026rdquo;}   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    OBJECT parameter list of translateMarker\n   parameter Types Required Description     markerId Number Yes Specify marker   destination Object Yes Specify the target point where the marker moves   autoRotate Boolean no Whether to automatically rotate the marker during movement   rotate Number no the rotation angle of the marker   duration Number no Animation duration, the default value is 1000ms, translation and rotation are calculated separately   animationEnd Function no Animation end callback function   fail Function no Callback function for interface call failure    OBJECT parameter list of includePoints\n   parameter Types Required Description     points Array Yes A list of coordinate points to be displayed in the visible area, [{latitude, longitude}]   padding Array no The distance from the edge of the rectangle formed by the coordinate points to the edge of the map, in unit pixels. The format is [top, right, bottom, left], only the first item of the array can be recognized on Android, and the padding of the top, bottom, left, and right is the same. The developer tool does not support the padding parameter temporarily.    OBJECT parameter list of getRegion\n   parameter Types Required Description     success Function no Callback function for successful interface call, res = {southwest, northeast}, the latitude and longitude of the southwest corner and the northeast corner   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    OBJECT parameter list of getScale\n   parameter Types Required Description     success Function no Callback function for successful interface call, res = {scale}   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    mapSearch module(module)\r#\r\rreverseGeocode(Object,callback)\r#\r\r Reverse geocoding\n Object\r#\r\r   Attributes Types Defaults Required Description     point Object  Yes {latitude: latitude, longitude: longitude}    callback returns Object parameter description\r#\r\r   Attributes Types Description     type String \u0026ldquo;success\u0026rdquo; means success, \u0026ldquo;fail\u0026rdquo; means failure   code Number Return 0 on success, and the corresponding code on failure   message String Failure description   address String Address after query (returned when successful)    poiSearchNearBy（Object,callback);\r#\r\r Peripheral search\n Object\r#\r\r   Attributes Types Defaults Required Description     point Object  Yes Retrieved center point coordinates {latitude: latitude, longitude: longitude}   key String  Yes search for the keyword   radius Number 3000 no Retrieved radius, in meters   index Number 1 no Index of the page number to get the search results    callback returns Object parameter description\r#\r\r   Attributes Types Description     type String \u0026ldquo;success\u0026rdquo; means success, \u0026ldquo;fail\u0026rdquo; means failure   code Number Return 0 on success, and the corresponding code on failure   message String Failure description   totalNumber Number Number of POIs returned   currentNumber Number Number of POIs on the current page   pageNumber Number Number of pages   pageIndex Number Current page index   poiList Array. POI information array    poiObject\r#\r\r   Attributes Types Description     location Object {latitude: latitude, longitude: longitude}   name String name   type String Types   distance Number Distance (in meters)   address String address    "}),a.add({id:1,href:'/docs/api/%E4%BD%8D%E7%BD%AE/%E6%9F%A5%E7%9C%8B%E4%BD%8D%E7%BD%AE/open-location/',title:"Open Location",section:"位置",content:"uni.openLocation(OBJECT)\r#\r\rUse the in-app map to view the location.\nOBJECT parameter description\n   parameter name Types Required Description Platform difference description     latitude Float Yes Latitude, the range is -90~90, a negative number means south latitude, using the gcj02 National Survey    longitude Float Yes Longitude, the range is -180~180, the negative number indicates the west longitude, using the gcj02 National Survey    success Function no Callback function for successful interface call    fail Function no Callback function for interface call failure    complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)     Example\nuni.getLocation({ type: \u0026#39;gcj02\u0026#39;, success: function (res) { const latitude = res.latitude; const longitude = res.longitude; uni.openLocation({ latitude: latitude, longitude: longitude, success: function () { console.log(\u0026#39;success\u0026#39;); } }); } }); Tips\n This API is a non-atomic package interface. Developers can make their own pages to achieve similar functions if they have custom requirements. \u0026lt;map\u0026gt;Component Default measure for the country office coordinates, call uni.getLocationreturn the results to \u0026lt;map\u0026gt;the component, you specify the type as gcj02. To use a third-party end iOS map navigation, the need to increase in the manifest.json file urlschemewhitelistnode, you can pack online  { \u0026#34;app-plus\u0026#34;: { \u0026#34;distribute\u0026#34;: { \u0026#34;ios\u0026#34;: { \u0026#34;urlschemewhitelist\u0026#34;: [ \u0026#34;baidumap\u0026#34;, \u0026#34;iosamap\u0026#34;, \u0026#34;qqmap\u0026#34; ] } } } }  Click to return will enter failcallback  "}),a.add({id:2,href:'/docs/api/%E4%BD%8D%E7%BD%AE/%E8%8E%B7%E5%8F%96%E4%BD%8D%E7%BD%AE/location/',title:"Location",section:"位置",content:"uni.getLocation(OBJECT)\r#\r\rGet the current geographic location and speed.\nIn the WeChat Mini Program, after the user leaves the application, this interface cannot be called unless the background continuous positioning permission is requested; when the user clicks \u0026ldquo;display at the top of the chat\u0026rdquo;, this interface can continue to be called.\nOBJECT parameter description\n   parameter name Types Required Description     type String no The default is wgs84 return gps coordinates, gcj02 return to the country office coordinate measurement can be used to uni.openLocationcoordinate, app platform high moral SDK only supports returning gcj02   success Function Yes Callback function for successful interface call. For details, see the return parameter description.   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    success return parameter description\n   parameter Description     latitude Latitude, floating point number, range -90~90, negative number means south latitude   longitude Longitude, floating point number, range -180~180, negative number means west longitude   speed Speed, floating point number, unit m/s   accuracy Position accuracy   altitude Height, unit m   verticalAccuracy Vertical accuracy, unit m (Android can’t get it, return 0)   horizontalAccuracy Horizontal accuracy, unit m    address information description\n   Attributes Types description Description     country String country Such as \u0026ldquo;China\u0026rdquo;, if this information cannot be obtained, undefined will be returned   province String Province name Such as \u0026ldquo;Beijing\u0026rdquo;, if the information cannot be obtained, undefined will be returned   city String city name Such as \u0026ldquo;Beijing\u0026rdquo;, if the information cannot be obtained, undefined will be returned   district String District (county) name Such as \u0026ldquo;Chaoyang District\u0026rdquo;, if this information cannot be obtained, undefined will be returned   street String Street information Such as \u0026ldquo;Jiuxianqiao Road\u0026rdquo;, if this information cannot be obtained, undefined will be returned   streetNum String Get street number information Such as \u0026ldquo;No. 3\u0026rdquo;, if this information cannot be obtained, undefined will be returned   poiName String POI information Such as \u0026ldquo;Electronic City. International Electronic Headquarters\u0026rdquo;, if this information cannot be obtained, undefined will be returned   postalCode String Postal code Such as \u0026ldquo;100016\u0026rdquo;, if this information cannot be obtained, undefined will be returned   cityCode String City code Such as \u0026ldquo;010\u0026rdquo;, if this information cannot be obtained, undefined will be returned    Example\nuni.getLocation({ type: \u0026#39;wgs84\u0026#39;, success: function (res) { console.log(\u0026#39;Longitude of current position:\u0026#39; + res.longitude); console.log(\u0026#39;Longitude of current position:\u0026#39; + res.latitude); } }); uni.chooseLocation(OBJECT)\r#\r\rOpen the map and select a location.\nOBJECT parameter description\n   parameter name Types of Required Description     success Function Yes Callback function for successful interface call. For details, see the return parameter description.   fail Function no Callback function for interface call failure (triggered when the location fails to obtain, the user cancels, etc.)   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    success return parameter description\n   parameter Description     name Location name   address Address   latitude Latitude, floating point number, range -90~90, negative number means south latitude, use gcj02 China National Surveying Bureau coordinate system.   longitude Longitude, floating point number, range -180~180, negative number means west longitude, use gcj02 China National Surveying Bureau coordinate system.    Example\nuni.chooseLocation({ success: function (res) { console.log(\u0026#39;Location Name:\u0026#39; + res.name); console.log(\u0026#39;Detailed address:\u0026#39; + res.address); console.log(\u0026#39;Latitude:\u0026#39; + res.latitude); console.log(\u0026#39;Longitude:\u0026#39; + res.longitude); } }); "}),a.add({id:3,href:'/docs/api/%E5%9F%BA%E7%A1%80/%E5%AE%9A%E6%97%B6%E5%99%A8/timer/',title:"Timer",section:"基础",content:"setTimeout(callback, delay, rest)\r#\r\rSet a timer. Execute the registered callback function after the time expires\nParameter Description\n   parameter Types of Required Description     callback Function Yes Callback   delay Number no Delay time, the function call will occur after the delay, the unit is ms   rest Any no Additional parameters such as param1, param2, \u0026hellip;, paramN will be passed as parameters to the callback function    return value\n   return value Types of Description     timeoutID Number The number of the timer, this value can be passed to clearTimeout to cancel the timing    clearTimeout(timeoutID)\r#\r\rCancel the timer set by setTimeout.\nParameter Description\n   parameter Types of Required Description     timeoutID Number Yes ID of the timer to be cancelled    setInterval(callback, delay, rest)\r#\r\rSet a timer. Execute the registered callback function according to the specified period (in milliseconds)\nParameter Description\n   parameter Types of Required Description     callback Function Yes Callback   delay Number no Delay time, the function call will occur after the delay, the unit is ms   rest Any no Additional parameters such as param1, param2, \u0026hellip;, paramN will be passed as parameters to the callback function    return value\n   return value Types of Description     intervalID Number The number of the timer, this value can be passed to clearInterval to cancel the timer    clearInterval(intervalID)\r#\r\rCancel the timer set by setInterval.\nParameter Description\n   parameter Types of Required Description     intervalID Number Yes ID of the timer to be cancelled    "}),a.add({id:4,href:'/docs/api/%E5%9F%BA%E7%A1%80/%E5%BA%94%E7%94%A8%E7%BA%A7%E4%BA%8B%E4%BB%B6/application/',title:"Application",section:"基础",content:"uni.onPageNotFound(funciton callback)\r#\r\rThere is no event for the page to be opened by the listening application. The event with the App.onPageNotFoundcallback time to coincide\nparameter\r#\r\rfunction callback\nThe callback function for the event that the page to be opened does not exist\nparameter\r#\r\r   Attributes Types of Description     path String The path of the page does not exist (code package path)   query Object Open the query parameter of a page that does not exist   isEntryPage Boolean Whether it’s the first page launched this time (for example, coming in from an entry such as sharing, the first page is the sharing page configured by the developer)    note\n Developers can redirect a page in the callback, but it must be synchronized in the callback, asynchronous processing (such as setTimeoutasynchronous execution) is invalid. If the callback is redirected to another page that does not exist, it will be pushed to the client\u0026rsquo;s native page that does not have a prompt page, and there will be no second callback.  uni.onError(funciton callback)\r#\r\rMonitor small program error events. Such as script error or APIcall the error and so on.\nparameter\r#\r\rfunction callback\nCallback function for application error event.\nparameter\r#\r\rstring error\nError message, including stack.\n"}),a.add({id:5,href:'/docs/api/%E5%9F%BA%E7%A1%80/%E6%97%A5%E5%BF%97%E6%89%93%E5%8D%B0/log/',title:"Log",section:"基础",content:"console\r#\r\rPrint log information to the console.\ndebug\r#\r\rPrint debug log to the console\nNote: In the App-side custom component mode, the debug method is equivalent to the log method.\nlog\r#\r\rPrint log to the console\ninfo\r#\r\rPrint info log to the console\nwarn\r#\r\rPrint warn log to the console\nerror\r#\r\rPrint error log to the console\n"}),a.add({id:6,href:'/docs/api/%E5%9F%BA%E7%A1%80/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/lifecycle/',title:"Lifecycle",section:"基础",content:"Application life cycle\r#\r\rSupport application life cycle functions such as onLaunch, onShow, onHide, etc.\nPage life cycle\r#\r\rSupport life cycle functions such as onLoad, onShow, onReady.\n"}),a.add({id:7,href:'/docs/api/%E5%AA%92%E4%BD%93/%E5%9B%BE%E7%89%87/image/',title:"Image",section:"媒体",content:"uni.chooseImage(OBJECT)\r#\r\rChoose a picture from a local album or take a photo with the camera.\nIf you need a richer camera API on the App side (such as directly calling the front camera)\nOBJECT parameter description\n   parameter name Types of Required Description Platform difference description     count Number no The maximum number of pictures that can be selected, the default is 9 See description below   sizeType Array\u0026lt;String\u0026gt; no original original image, compressed image, both have by default    extension Array\u0026lt;String\u0026gt; no According to the file extension filtering, each item cannot be an empty string. No filtering by default. H5(HBuilder X2.9.9+)   sourceType Array\u0026lt;String\u0026gt; no album Select pictures from the album, camera uses the camera, and both are available by default. If you need to directly turn on the camera or directly select the album, please use only one option    success Function Yes If successful, return the list of local file paths of the picture tempFilePaths    fail Function no Callback function for interface call failure Mini Program, App   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)     Tips\n The performance of the count value on the H5 platform is based on the browser\u0026rsquo;s own specifications. According to the current test results, only single selection/multiple selection can be restricted, but the number cannot be restricted. Moreover, few browsers on actual mobile phones can support multiple selection. In H5 sourceType end corresponding to inputthe captureattribute is set to ['album']invalid, you can still use the camera. You can use the user authorization API to determine whether the user grants the app the permission to access the photo album or camera If you need to select non-media files on the App side, you can search for file options in the plug-in market . Among them, Native.js can be used on the Android side without native plug-ins, while the iOS side requires native plug-ins.  success return parameter description\n   parameter Types of Description     tempFilePaths Array\u0026lt;String\u0026gt; List of local file paths for pictures   tempFiles Array\u0026lt;Object\u0026gt;、Array\u0026lt;File\u0026gt; The local file list of the picture, each item is a File object    The File object structure is as follows\n   parameter Types of Description     path String Local file path   size Number Local file size, unit: B   name String File name with extension, only H5 supports   type String File type, only supported by H5    Example\nuni.chooseImage({ count: 6, //Default 9 	sizeType: [\u0026#39;original\u0026#39;, \u0026#39;compressed\u0026#39;], //You can specify whether it is the original image or the compressed image, the default is both 	sourceType: [\u0026#39;album\u0026#39;], //Select from album 	success: function (res) { console.log(JSON.stringify(res.tempFilePaths)); } }); uni.previewImage(OBJECT) @unipreviewimageobject\r#\r\rpreview picture.\nOBJECT parameter description\n   parameter name Types of Required Description Platform difference description     current String/Number See the description below for details See the description below for details    urls Array\u0026lt;String\u0026gt; Yes List of image links to preview    indicator String no Picture indicator style, possible values: \u0026ldquo;default\u0026rdquo;-bottom dot indicator; \u0026ldquo;number\u0026rdquo;-top number indicator; \u0026ldquo;none\u0026rdquo;-no indicator displayed. App   loop Boolean no Whether to cycle preview, the default value is false App   longPressActions Object no Long press the picture to display the operation menu, if you don’t fill it, the default is to save the album App 1.9.5+   success Function no Callback function for successful interface call    fail Function no Callback function for interface call failure    complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)     current parameter description\n 1.9.5+ Support uploading the index value of pictures in urls\n current is the link/index value of the currently displayed picture. If the value is not filled or the value is invalid, it is the first picture of urls. App platform is between 1.9.5 and 1.9.8, current is required. If you don\u0026rsquo;t fill it, it will report an error\nNote that when there are duplicate image links in urls:\n After uploading a link, the preview result always shows the first position of the link in urls. Pass the index value. In the WeChat/Baidu/ByteDance applet platform, the value that is duplicated with the corresponding image link before the index value in the incoming urls will be filtered out. Other platforms will keep the original urls without de-duplication.  for example: ：\nA set of pictures [A, B1, C, B2, D], where the picture links of B1 and B2 are the same.\n Pass the link of B2, the preview result is B1, the previous one is A, and the next one is C. Pass the index value of B2 to 3, the preview result is B2, the previous one is C, and the next one is D. At this time, on the WeChat/Baidu/ByteDance applet platform, the final incoming urls are [A, C, B2, D]filtered out B1 that is duplicated with B2.  longPressActions parameter description\n   parameter Types of Required Description     itemList Array\u0026lt;String\u0026gt; Yes The text array of the button   itemColor String no The text color of the button, string format, the default is \u0026ldquo;#000000\u0026rdquo;   success Function no Callback function for successful interface call, see the return parameter description for details   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    success return parameter description\n   parameter Types of Description     index Number User long presses the index value of the picture   tapIndex Number The index value of the user clicked button list    示例\n// Select 6 pictures from the album uni.chooseImage({ count: 6, sizeType: [\u0026#39;original\u0026#39;, \u0026#39;compressed\u0026#39;], sourceType: [\u0026#39;album\u0026#39;], success: function(res) { // preview picture 	uni.previewImage({ urls: res.tempFilePaths, longPressActions: { itemList: [\u0026#39;Send to friends \u0026#39;, \u0026#39;save Picture \u0026#39;, \u0026#39;Favorites \u0026#39;], success: function(data) { console.log(\u0026#39;The\u0026#39; + (data.tapIndex + 1) + \u0026#39;button is selected,the\u0026#39; + (data.index + 1) + \u0026#39;image is selected\u0026#39;); }, fail: function(err) { console.log(err.errMsg); } } }); } }); TIPS\n On the non-H5 side, previewImage is implemented natively, and the interface customization flexibility is low. The plug-in market has a previewImage implemented on the front end, which has lower performance than the native implementation, but the interface can be defined at will; the plug-in market also has a previewImage native plug-in suitable for App, which provides more functions.  uni.getImageInfo(OBJECT)\r#\r\rGet picture information.\nTo obtain network picture information under the applet, you need to configure the download domain name whitelist to take effect.\nOBJECT parameter description\n   parameter name Types of Required Description     src String Yes The path of the picture, which can be a relative path, temporary file path, storage file path, network picture path   success Function no Callback function for successful interface call   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    success return parameter description\n   parameter name Types of Description Platform difference description     width Number Image width, unit px    height Number Image height, unit px    path String Return the local path of the picture    orientation String Return the direction of the picture, see the table below for valid values App、Mini Program   type String Return image format App、Mini Program    orientation parameter description\n   Enumerated value Description     up default   down 180 degree rotation   left Rotate 90 degrees counterclockwise   right Rotate 90 degrees clockwise   up-mirrored Same as up, but flipped horizontally   down-mirrored Same as down, but flipped horizontally   left-mirrored Same as left, but flipped vertically   right-mirrored Same as right, but flipped vertically    Example\nuni.chooseImage({ count: 1, sourceType: [\u0026#39;album\u0026#39;], success: function (res) { uni.getImageInfo({ src: res.tempFilePaths[0], success: function (image) { console.log(image.width); console.log(image.height); } }); } }); uni.saveImageToPhotosAlbum(OBJECT)\r#\r\rSave the picture to the system album.\nOBJECT parameter description\n   parameter name Types of Required Description     filePath String Yes Picture file path, it can be temporary file path or permanent file path, network picture path is not supported   success Function no Callback function for successful interface call   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    success return parameter description\n   parameter name Types of Description     path String The path of the picture saved to the album, only supported by App 3.0.5+   errMsg String Call result    note\n You can use the user authorization API to determine whether the user grants the app permission to access the album H5 has no API to trigger the save to album behavior. When downloading a picture, the browser will ask for the picture storage address.  ** Example code ：**\nuni.chooseImage({ count: 1, sourceType: [\u0026#39;camera\u0026#39;], success: function (res) { uni.saveImageToPhotosAlbum({ filePath: res.tempFilePaths[0], success: function () { console.log(\u0026#39;save success\u0026#39;); } }); } }); uni.compressImage(OBJECT)\r#\r\rCompressed picture interface, optional compression quality\nOBJECT parameter description\n   Attributes Types of Defaults Required Description Platform difference description     src String  Yes Picture path, picture path, can be relative path, temporary file path, storage file path    quality Number 80 no Compression quality, range from 0 to 100, the smaller the value, the lower the quality, and the higher the compression rate (only valid for jpg)    width String auto no Scale the width of the image, support pixel value (such as \u0026ldquo;100px\u0026rdquo;), percentage (such as \u0026ldquo;50%\u0026quot;), automatic calculation (such as \u0026ldquo;auto\u0026rdquo;, which is calculated according to the zoom ratio of the height and the height of the source image, if the height is not set, use Source image height) App 3.0.0+   height String auto no The height of the zoomed picture, support pixel value (such as \u0026ldquo;100px\u0026rdquo;), percentage (such as \u0026ldquo;50%\u0026quot;), automatic calculation (such as \u0026ldquo;auto\u0026rdquo;, which is calculated according to the zoom ratio of height and source image height, if height is not set, use Source image height) App 3.0.0+   success Function  no Callback function for successful interface call    fail Function  no Callback function for interface call failure    complete Function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)     success return parameter description\n   Attributes Types of Description     tempFilePath String Temporary file path of compressed image    Sample code:\nuni.compressImage({ src: \u0026#39;/static/logo.jpg\u0026#39;, quality: 80, success: res =\u0026gt; { console.log(res.tempFilePath) } }) "}),a.add({id:8,href:'/docs/api/%E5%AA%92%E4%BD%93/%E5%AF%8C%E6%96%87%E6%9C%AC/editor-context/',title:"Editor Context",section:"媒体",content:"editorContext\r#\r\rThe editorContext instance corresponding to the editor component can be obtained through uni.createSelectorQuery\nonEditorReady() { uni.createSelectorQuery().select(\u0026#39;#editor\u0026#39;).context((res) =\u0026gt; { this.editorCtx = res.context }).exec() } onEditorReady() { this.editorCtx = requireDynamicLib(\u0026#39;editorLib\u0026#39;).createEditorContext(\u0026#39;editorId\u0026#39;); }  References dynamic libraries in the project, in the manifest.jsonmiddle to add adynamicLib  \u0026#34;mp-baidu\u0026#34; : { \u0026#34;usingComponents\u0026#34; : true, \u0026#34;appid\u0026#34; : \u0026#34;\u0026#34;, \u0026#34;setting\u0026#34; : { \u0026#34;urlCheck\u0026#34; : true }, \u0026#34;dynamicLib\u0026#34;: { \u0026#34;editorLib\u0026#34;: { \u0026#34;provider\u0026#34;: \u0026#34;swan-editor\u0026#34; } } }, In each using a rich text editor component to a page, the configuration pages.jsonfile as follows:  { \u0026#34;pages\u0026#34;: [ { \u0026#34;path\u0026#34;: \u0026#34;pages/index/index\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;navigationBarTitleText\u0026#34;: \u0026#34;uni-app\u0026#34;, \u0026#34;usingSwanComponents\u0026#34;: { \u0026#34;editor\u0026#34;: \u0026#34;dynamicLib://editorLib/editor\u0026#34; } } } ] } editorContext.format(name, value)\r#\r\rModify style\n   parameter Types of Description     name String Attributes   value String value    List of supported styles\n   name value     bold    italic    underline    strike    ins    script sub / super   header H1 / H2 / h3 / H4 / h5 / H6   align left / center / right / justify   direction rtl   indent -1 / +1   list ordered / bullet / check   color hex color   backgroundColor hex color   margin/marginTop/marginBottom/marginLeft/marginRight css style   padding/paddingTop/paddingBottom/paddingLeft/paddingRight css style   font/fontSize/fontStyle/fontVariant/fontWeight/fontFamily css style   lineHeight css style   letterSpacing css style   textDecoration css style   textIndent css style    Setting the selection to the already applied style will cancel the style. css style represents the allowable value specified in css.\neditorContext.insertDivider(OBJECT)\r#\r\rInsert dividing line\nOBJECT parameter description\n   Attributes Types of Defaults Required Description     success Function  no Callback function for successful interface call   fail Function  no Callback function for interface call failure   complete Function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    editorContext.insertImage(OBJECT)\r#\r\rInsert a picture.\nWhen the micro-channel applet internet address as a temporary file, html format of the content editor acquired  tag attributes to increase data-local, delta format image content attributes attribute data-local field increases, the value of the incoming address the temporary file. Developers can choose to upload pictures to the server during the submission stage, and replace them after obtaining the network address. For html content should be replaced when replacing  the src value, should replace the content for delta insert { image: abc }values.\nOBJECT parameter description\n   Attributes Types of Defaults Required Description     src String  Yes The map\u0026rsquo;s address   alt String  no Alternative text when the image cannot be displayed   width String  no Picture width (pixels/percentage), 2.6.5+ support   height String  no Picture height (pixels/percentage), 2.6.5+ support   extClass String  no The class name added to the image img tag, 2.6.5+ support   data Object  no data is serialized as name=value; the format of name1=value2 is hung on the attribute data-custom, 2.6.5+ support   success Function  no Callback function for successful interface call   fail Function  no Callback function for interface call failure   complete Function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    editorContext.insertText(OBJECT)\r#\r\rOverwrite the current selection and set a paragraph of text\nOBJECT parameter description\n   Attributes Types of Defaults Required Description     text String  no Text content   success Function  no Callback function for successful interface call   fail Function  no Callback function for interface call failure   complete Function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    editorContext.setContents(OBJECT)\r#\r\rInitialize editor content, only delta will take effect when hmlt and delta exist at the same time\nOBJECT parameter description\n   Attributes Types of Defaults Required Description     html String  no Tagged HTML content   delta Object  no Delta object representing the content   success Function  no Callback function for successful interface call   fail Function  no Callback function for interface call failure   complete Function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    editorContext.getContents(OBJECT)\r#\r\rGet editor content\nOBJECT parameter description\n   Attributes Types of Defaults Required Description     success Function  no Callback function for successful interface call   fail Function  no Callback function for interface call failure   complete Function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    editorContext.clear(OBJECT)\r#\r\rClear editor content\nOBJECT parameter description\n   Attributes Types of Defaults Required Description     success Function  no Callback function for successful interface call   fail Function  no Callback function for interface call failure   complete Function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    editorContext.removeFormat(OBJECT)\r#\r\rClear the style of the current selection\nOBJECT parameter description\n   Attributes Types of Defaults Required Description     success Function  no Callback function for successful interface call   fail Function  no Callback function for interface call failure   complete Function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    editorContext.undo(OBJECT)\r#\r\rRevoke\nOBJECT parameter description\n   Attributes Types of Defaults Required Description     success Function  no Callback function for successful interface call   fail Function  no Callback function for interface call failure   complete Function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    editorContext.redo(OBJECT)\r#\r\rrestore\nOBJECT parameter description\n   Attributes Types of Defaults Required Description     success Function  no Callback function for successful interface call   fail Function  no Callback function for interface call failure   complete Function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    editorContext.blur(OBJECT)\r#\r\rThe editor is out of focus and the keyboard is retracted.\nOBJECT parameter description\n   Attributes Types of Defaults Required Description     success Function  no Callback function for successful interface call   fail Function  no Callback function for interface call failure   complete Function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    editorContext.scrollIntoView(OBJECT)\r#\r\rMake the editor cursor scroll to the visible area of the window.\nOBJECT parameter description\n   Attributes Types of Defaults Required Description     success Function  no Callback function for successful interface call   fail Function  no Callback function for interface call failure   complete Function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    editorContext.getSelectionText(OBJECT)\r#\r\rGet the plain text content in the selected area of the editor. When the editor is out of focus or a section is not selected, the returned content is empty.\nOBJECT parameter description\n   Attributes Types of Defaults Required Description     success Function  no Callback function for successful interface call   fail Function  no Callback function for interface call failure   complete Function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    success return parameter description:\n   parameter Types of Description     errMsg String Interface call result   text String Plain text content    "}),a.add({id:9,href:'/docs/api/%E5%AA%92%E4%BD%93/%E5%BD%95%E9%9F%B3%E7%AE%A1%E7%90%86/record-manager/',title:"Record Manager",section:"媒体",content:"uni.getRecorderManager()\r#\r\rGet the globally unique recording manager recorderManager.\nList of methods of recorderManager object\n   method parameter Description Platform difference description     start options start recording    pause  Pause recording App not currently supported   resume  Continue recording App not currently supported   stop  Stop recording    onStart callback Recording start event    onPause callback Recording pause event    onStop callback Recording stop event, will call back the file address    onFrameRecorded callback After the file with the specified frame size has been recorded, the recording fragment result data will be called back. If frameSize is set, this event will be called back App not currently supported   onError callback Recording error event, will call back error message     start(options) description\n   Attributes Types of Required Description     duration Number no Specify the duration of the recording in ms. If a legal duration is passed in, the recording will automatically stop after the specified duration is reached. The maximum value is 600000 (10 minutes), and the default value is 60000 (1 minute).   sampleRate Number no Sampling rate, effective value 8000/16000/44100   numberOfChannels Number no Number of recording channels, effective value 1/2   encodeBitRate Number no Encoding rate, see the table below for effective values   format String no Audio format, valid value aac/mp3/wav/PCM   frameSize String no Specify the frame size in KB. After frameSize is passed in, every time the content of the specified frame size is recorded, the recorded file content will be called back. If it is not specified, it will not be called back. Only mp3 format is currently supported.    Among them, the sampling rate and code rate have certain requirements, the specific effective values are as follows:\n   Sampling Rate Encoding rate     8000 16000 ~ 48000   11025 16000 ~ 48000   12000 24000 ~ 64000   16000 24000 ~ 96000   22050 32000 ~ 128000   24000 32000 ~ 128000   32000 48000 ~ 192000   44100 64000 ~ 320000   48000 64000 ~ 320000    onStop(callback) callback result description\n   Attributes Types of Description     tempFilePath String Temporary path of recording file    onFrameRecorded(callback) callback result description\n   Attributes Types of Description     frameBuffer ArrayBuffer Recording fragment result data   isLastFrame Boolean Whether the current frame is normally the last frame before the end of recording    onError(callback) callback result description\n   Attributes Types of Description     errMsg String Error message      note\n You can use the user authorization API to determine whether the user has granted the microphone access to the application    Example\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;button @tap=\u0026#34;startRecord\u0026#34;\u0026gt;start recording \u0026lt;/button\u0026gt; \u0026lt;button @tap=\u0026#34;endRecord\u0026#34;\u0026gt;Stop recording \u0026lt;/button\u0026gt; \u0026lt;button @tap=\u0026#34;playVoice\u0026#34;\u0026gt;Play recording \u0026lt;/button\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; const recorderManager = uni.getRecorderManager(); const innerAudioContext = uni.createInnerAudioContext(); innerAudioContext.autoplay = true; export default { data() { return { text: \u0026#39;uni-app\u0026#39;, voicePath: \u0026#39;\u0026#39; } }, onLoad() { let self = this; recorderManager.onStop(function (res) { console.log(\u0026#39;recorder stop\u0026#39; + JSON.stringify(res)); self.voicePath = res.tempFilePath; }); }, methods: { startRecord() { console.log(\u0026#39;start recording\u0026#39;); recorderManager.start(); }, endRecord() { console.log(\u0026#39;End of recording\u0026#39;); recorderManager.stop(); }, playVoice() { console.log(\u0026#39;Play recording\u0026#39;); if (this.voicePath) { innerAudioContext.src = this.voicePath; innerAudioContext.play(); } } } } "}),a.add({id:10,href:'/docs/api/%E5%AA%92%E4%BD%93/%E6%96%87%E4%BB%B6/file/',title:"File",section:"媒体",content:"uni.chooseFile(OBJECT)\r#\r\rSelect the file locally.\nThis API is mainly used to select non-media files. If the selected file is a media file, there are 3 dedicated APIs:\n Picture selection Video selection Multimedia file selection (including picture video)  Platform difference description\n If you need to select non-media files on the App side, you can search for file options in the plug-in market . Among them, Native.js can be used on the Android side without native plug-ins, while the iOS side requires native plug-ins. App end if you want to choose to download _doc, _downloads, _documentsfile directories, etc. plus.io control, by plus.io Api, make their own selection box.  OBJECT parameter description\n   parameter name Types of Defaults Required Description Platform difference description     count Number 100 no Maximum number of pictures that can be selected See description below   type String \u0026lsquo;all\u0026rsquo; no Type of selected file See description below   extension Array\u0026lt;String\u0026gt;  no According to the file extension filtering, each item cannot be an empty string. No filtering by default. See description below   sourceType Array\u0026lt;String\u0026gt; [\u0026lsquo;album\u0026rsquo;,\u0026lsquo;camera\u0026rsquo;] no (Only available when the type is imageor video) albumSelect pictures from the album and camerause the camera. By default, both are available. If you need to directly turn on the camera or directly select the album, please use only one option    success Function  Yes Return the list of local file paths of the picture if successful tempFilePaths    fail Function  no Callback function for interface call failure    complete Function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)     Tips\n The performance of the count value on the H5 platform is based on the browser\u0026rsquo;s own specifications. According to the current test results, only single selection/multiple selection can be restricted, but the number cannot be restricted. Moreover, few browsers on actual mobile phones can support multiple selection. In H5 sourceType end corresponding to inputthe captureattribute is set to ['album']invalid, you can still use the camera. extension only supports file extensions temporarily, for example ['.zip','.exe','.js'], it does not support application/mswordsimilar values  Legal value of OBJECT.type\n   value Description     all Select from all files   video Only video files can be selected   image Only image files can be selected    Tips\n If the type attribute and extension exist at the same time, for example {type:'image',extension:['.png','.jpg']}, the image/png,image/jpgfile will be selected If only the extension attribute is configured, for example {extension:['.doc','.xlsx','.docx']}, the .doc,.xlsx,.docxfile will be selected , see `accept Attributes In the WeChat environment, if type=\u0026quot;all\u0026quot;the extensionattribute is invalid  success return parameter description\n   parameter Types of Description     tempFilePaths Array\u0026lt;String\u0026gt; List of local file paths for pictures   tempFiles Array\u0026lt;Object\u0026gt;、Array\u0026lt;File\u0026gt; The local file list of the picture, each item is a File object    The File object structure is as follows\n   parameter Types of Description     path String Local file path   size Number Local file size, unit: B   name String File name with extension, only H5 supports   type String File type, only supported by H5    example\nuni.chooseFile({ count: 6, //Default 100  extension:[\u0026#39;.zip\u0026#39;,\u0026#39;.doc\u0026#39;], success: function (res) { console.log(JSON.stringify(res.tempFilePaths)); } }); // Select picture file uni.chooseFile({ count: 10, type: \u0026#39;image\u0026#39;, success (res) { // tempFilePath Can be used as the src attribute of the img tag to display the picture  const tempFilePaths = res.tempFiles } }) wx.chooseMessageFile(OBJECT)\r#\r\rSelect a file from the WeChat chat session.\n"}),a.add({id:11,href:'/docs/api/%E5%AA%92%E4%BD%93/%E7%9B%B4%E6%92%AD%E7%BB%84%E4%BB%B6%E6%8E%A7%E5%88%B6/live-player-context/',title:"Live Player Context",section:"媒体",content:"uni.createLivePlayerContext(livePlayerId, this)\r#\r\rCreate a live-player context livePlayerContext object. Note that it is live broadcast, not push streaming.\nParameter Description\n   parameter Description Platform difference description     livePlayerId \u0026lt;live-player\u0026gt;Component id          List of methods of livePlayerContext object:\n   method parameter Description     play Object Play   stop Object stop   mute Object Mute   pause Object time out   resume Object restore   requestFullScreen Object Enter full screen   exitFullScreen Object Exit Full Screen    Object parameter list of requestFullScreen:\n   parameter Types of Required Description     direction Number Yes Set the orientation of the full screen, valid values are 0 (normal vertical orientation), 90 (screen 90 degrees counterclockwise), -90 (screen 90 degrees clockwise).   success Function no Callback function for successful interface call.   fail Function no Callback function for interface call failure.   complete Function no The callback function for the end of the interface call (will be executed if the call succeeds or fails).    Object parameter list of other methods:\n   parameter Types of Required Description     success Function no Callback function for successful interface call   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    uni.createLivePusherContext(livePusherId, this)\r#\r\rCreate a live-pusher context livePusherContext object.\nParameter Description\nSet the push stream address and push stream video mode of the live-pusher component.\n   Attributes Types of Defaults Required Description     url string  Yes Push stream address, support RTMP protocol.   mode string  no Push streaming video mode, possible values: SD (standard definition), HD (high definition), FHD (super definition).   muted Boolean false no Whether to mute.   enable-camera Boolean true no Turn on the camera.   auto-focus Boolean true no Automatically gather.   beauty Number 0 no Beauty, the value range is 0-9 (iOS value range is 1), 0 means off.   whiteness Number 0 no Whitening, the value range is 0-9 (iOS value range is 1), 0 means off.    API\r#\r\rstart(callback)\r#\r\r Start streaming\n callback returns Object parameter description\r#\r\r   Attributes Types of Description     type String \u0026ldquo;success\u0026rdquo; means success, \u0026ldquo;fail\u0026rdquo; means failure    pause(callback)\r#\r\r Pause streaming\n callback returns Object parameter description\r#\r\r   parameter Types of Description     type String \u0026ldquo;success\u0026rdquo; means success, \u0026ldquo;fail\u0026rdquo; means failure    resume(callback)\r#\r\r Resume push\n callback returns Object parameter description\r#\r\r   parameter Types of Description     type String \u0026ldquo;success\u0026rdquo; means success, \u0026ldquo;fail\u0026rdquo; means failure    stop(callback)\r#\r\r Stop streaming\n callback returns Object parameter description\r#\r\r   parameter Types of Description     type String \u0026ldquo;success\u0026rdquo; means success, \u0026ldquo;fail\u0026rdquo; means failure    switchCamera(callback)\r#\r\r Switch between front and rear cameras\n callback returns Object parameter description\r#\r\r   parameter Types of Description     type String \u0026ldquo;success\u0026rdquo; means success, \u0026ldquo;fail\u0026rdquo; means failure    snapshot(callback)\r#\r\r Snapshot\n callback returns Object parameter description\r#\r\rCallback on success\r#\r\r   parameter Types of Description     type string \u0026ldquo;success\u0026rdquo; means success, \u0026ldquo;fail\u0026rdquo; means failure   code Number Corresponding code   message object {width:\u0026ldquo;snapshot picture width\u0026rdquo;, height:\u0026ldquo;snapshot picture height\u0026rdquo;,tempImagePath:\u0026ldquo;snapshot picture path\u0026rdquo;}.    Failed callback\r#\r\r   parameter Types of Description     type string \u0026ldquo;fail\u0026rdquo; means failure   code Number    message object     startPreview(callback)\r#\r\r Turn on camera preview\n callback returns Object parameter description\r#\r\r   parameter Types of Description     type String \u0026ldquo;success\u0026rdquo; means success, \u0026ldquo;fail\u0026rdquo; means failure    stopPreview(callback)\r#\r\r Turn off camera preview\n callback returns Object parameter description\r#\r\r   parameter Types of Description     type String \u0026ldquo;success\u0026rdquo; means success, \u0026ldquo;fail\u0026rdquo; means failure    event\r#\r\rstatechange\r#\r\r State change event\n Detailed description of the return parameter (detail)\r#\r\r   parameter Types of Description     code Number    message string     netstatus\r#\r\r Network status notification event\n Detailed description of Android return parameters (detail)\r#\r\r   Key name Description     videoBitrate The bit rate of the current video encoder/decoder output, in kbps   audioBitrate The bit rate of the current audio encoder/decoder output, in kbps   videoFPS Current video frame rate   videoGOP The current video GOP, that is, the interval duration of every two key frames (I frames), in s   netSpeed Current sending/receiving speed   netJitter Network jitter, the greater the jitter, the more unstable the network   videoWidth The width of the video screen   videoHeight The height of the video screen    Detailed description of iOS return parameters (detail)\r#\r\r   parameter Types of Description     code Number code   message string Specific network status information    error\r#\r\r Render error event\n Detailed description of the return parameter (detail)\r#\r\r   parameter Types of Description     errCode Number    errMsg string     "}),a.add({id:12,href:'/docs/api/%E5%AA%92%E4%BD%93/%E7%9B%B8%E6%9C%BA%E7%BB%84%E4%BB%B6%E6%8E%A7%E5%88%B6/camera-context/',title:"Camera Context",section:"媒体",content:"uni.createCameraContext()\r#\r\rCreate and return the context cameraContext object of the camera component.\nThis API is a js API supporting the camera component. It has the same platform compatibility as the camera component and can realize non-full-screen cameras. App can realize full-screen camera through plus.camera\nmethod list of cameraContext object\n   method parameter Description     takePhoto Object Take a picture, you can specify the quality, and return the picture path if successful.   setZoom Object Set the zoom level   startRecord Object Start recording   stopRecord Object End the video, and return to the cover and video if successful.   onCameraFrame Function Get Camera real-time frame data. OnlyWeChat Mini Program Platformsupported    cameraContext.takePhoto\r#\r\rThe Object parameter list of takePhoto:\n   parameter Types of Required Description     quality String no Image quality, the value is high (high quality), normal (normal quality), low (low quality), the default is normal   success Function no The callback function of the successful interface call, returns the temporary path of the photo file, res = {tempImagePath}   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    cameraContext.setZoom\r#\r\rObject parameter list of setZoom:\n   parameter Types of Required Description     zoom String Yes The zoom level, range [1, maxZoom]. zoom can take decimals, accurate to one decimal place. maxZoom can be obtained in the return value of @initdone.   success Function no Callback function for successful interface call   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    cameraContext.startRecord\r#\r\rObject parameter list of startRecord:\n   parameter Types of Required Description     timeoutCallback Function no The recording will end when the connection exceeds 30s or the page is onHide   success Function no Callback function for successful interface call   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    cameraContext.stopRecord\r#\r\r** Object parameter list of stopRecord: ：**\n   parameter Types of Defaults Required Description     compressed Boolean false no Start video compression, the compression effect is the same chooseVideo   success Function  no The interface successfully calls the callback function, and returns the temporary path of the cover and video, res = {tempThumbPath, tempVideoPath }.   fail Function  no Callback function for interface call failure   complete Function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    note**\n Realize OCR and other credential identification requirements under the App. Native plug-ins can be obtained in the plug-in market OCR and other documents to achieve recognition and other requirements under the micro-channel applets, plug-in package market also search ocr visible. You can use the user authorization API to determine whether the user grants the app the access to the camera  "}),a.add({id:13,href:'/docs/api/%E5%AA%92%E4%BD%93/%E8%83%8C%E6%99%AF%E9%9F%B3%E9%A2%91%E6%92%AD%E6%94%BE%E7%AE%A1%E7%90%86/background-audio-manager/',title:"Background Audio Manager",section:"媒体",content:"uni.getBackgroundAudioManager()\r#\r\rGet the globally unique background audio manager backgroundAudioManager.\nThe background audio is not the background music of the game, but similar to QQ Music. When the App is in the background, it is still playing music. If you do not need to continue playing when the App is switched to the background, then you should not use this API, but use the normal audio API uni.createInnerAudioContext instead.\nProperty list of backgroundAudioManager object\n   Attributes Types of Description Read only     duration Number The length of the current audio (unit: s), only returned when there is a valid src Yes   currentTime Number The current audio playback position (unit: s), only returned when there is a valid src Yes   paused Boolean Whether the current state is paused or stopped, true means pause or stop, false means playing Yes   src String The audio data source, the default is an empty string, when a new src is set, it will automatically start to play, currently supported formats are m4a, aac, mp3, wav no   startTime Number The position where the audio starts to play (unit: s) no   buffered Number The time of audio buffering, only to ensure that the content has been buffered from the current playback time to this time. Yes   title String Audio title, used as audio title for native audio player. The share function in the native audio player, and the shared card title will also use this value. no   epname String The album name, the sharing function in the native audio player, and the shared card profile will also use this value. no   singer String The name of the singer, the sharing function in the native audio player, and the card profile shared will also use this value. no   coverImgUrl String Cover image url, used as background image of native audio player. The sharing function in the native audio player, the card layout and background that are shared will also use this image. no   webUrl String The page link, the sharing function in the native audio player, and the shared card profile will also use this value. no   protocol String Audio protocol. The default value is\u0026rsquo;http', setting\u0026rsquo;hls' can support playing HLS protocol live audio, App platform does not currently support no    List of methods of the backgroundAudioManager object\n   method parameter Description     play  Play   pause  time out   stop  stop   seek position Jump to the specified position, unit s   onCanplay callback The background audio can be played, but there is no guarantee that it can be played smoothly.   onPlay callback Background audio playback event   onPause callback Background audio pause event   onStop callback Background audio stop event   onEnded callback Background audio natural playback end event   onTimeUpdate callback Background audio playback progress update event   onPrev callback The user clicks the last song event in the system music playback panel (iOS only)   onNext callback The user clicks the next song event in the system music playback panel (iOS only)   onError callback Background audio playback error event   onWaiting callback Audio loading event, when the audio needs to stop and load due to insufficient data, it will be triggered    errCode description\n   errCode Description     10001 system error   10002 Network Error   10003 File error   10004 wrong format   -1 unknown mistake    Example\nconst bgAudioMannager = uni.getBackgroundAudioManager(); bgAudioMannager.title = \u0026#39;To Alice\u0026#39;; bgAudioMannager.singer = \u0026#39;no\u0026#39;; bgAudioMannager.coverImgUrl = \u0026#39;https://vkceyugu.cdn.bspapp.com/VKCEYUGU-uni-app-doc/7fbf26a0-4f4a-11eb-b680-7980c8a877b8.png\u0026#39;; bgAudioMannager.src = \u0026#39;1. https://vkceyugu.cdn.bspapp.com/VKCEYUGU-hello-uniapp/2cc220e0-c27a-11ea-9dfb-6da8e309e0d8.mp3\u0026#39;; Note Because the background audio playback consumes mobile phone power, the platform is all controlled and needs to be filled out in the manifest.\n ios App platform, to be played in the background manifest.json -\u0026gt; app-plus -\u0026gt; distribute -\u0026gt; ios node is added \u0026quot;UIBackgroundModes\u0026quot;:[\u0026quot;audio\u0026quot;]to ensure that the background music can play (ipa packaged into force) For applet platform, you need to fill in \u0026ldquo;requiredBackgroundModes\u0026rdquo;: [\u0026ldquo;audio\u0026rdquo;] under the applet node corresponding to manifest.json. The platform will review when the Mini Program is released By default, the Android App will not display the volume control in the notification bar. If you need this function, you need to download the native plug-in separately from the plug-in market  "}),a.add({id:14,href:'/docs/api/%E5%AA%92%E4%BD%93/%E8%A7%86%E9%A2%91/video/',title:"Video",section:"媒体",content:"uni.chooseVideo(OBJECT)\r#\r\rTake a video or select a video from the phone album, and return to the temporary file path of the video.\nOBJECT parameter description\n   parameter name Types of Required Description Platform difference description     sourceType Array\u0026lt;String\u0026gt; no album Select a video from the album, and the camera uses the camera to shoot, the default is: [\u0026lsquo;album\u0026rsquo;,\u0026lsquo;camera\u0026rsquo;]    extension Array\u0026lt;String\u0026gt; no According to the file extension filtering, each item cannot be an empty string. No filtering by default. H5(HBuilder X2.9.9+)   compressed Boolean no Whether to compress the selected video source file, the default value is true and compression is required.    maxDuration Number no The maximum recording time of a video, in seconds. Supports up to 60 seconds. APP platform 1.9.7+ (iOS support, Android depends on whether the camera component of the ROM implements this function. If this function is not implemented, this attribute is ignored.)   camera String no \u0026lsquo;front\u0026rsquo;,\u0026lsquo;back\u0026rsquo;, default\u0026rsquo;back' APP   success Function no The interface is successfully called, and the temporary file path of the video file is returned. For details, see the return parameter description.    fail Function no Callback function for interface call failure    complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)     success return parameter description\n   parameter Types of Description Explanation of platform differences     tempFilePath String Temporary file path of selected video    tempFile File Selected video file Only H5 (2.6.15+) supported   duration Number The duration of the selected video, in s APP 2.1.0+, H5, WeChat   size Number The data size of the selected video APP 2.1.0+, H5, WeChat   height Number Returns the height of the selected video APP 2.1.0+, H5, WeChat   width Number Returns the width of the selected video APP 2.1.0+, H5, WeChat   name String File name including extension Only H5 support    note:\n The video selected by the app on the Android side only supports up to 180MB. If you want to break through this limit, please use the native plug-in The temporary path of the file can be used normally during the current startup of the application. If you need to save it for a long time, you need to call uni.saveFile actively and you can access it when the application is started next time. Camera cannot take effect under some Android phones because the system ROM is not supported. You can switch between operations after opening the shooting interface. You can use the user authorization API to determine whether the user grants the app the permission to access the photo album or camera If you need to further compress the video size under the App, you can search for video compression plugins in the plugin market If you need to upload to CDN, you can use uniCloud.uploadFile API. UniCloud provides free CDN for developers to use  Example\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;text\u0026gt;hello\u0026lt;/text\u0026gt; \u0026lt;button @tap=\u0026#34;test\u0026#34;\u0026gt;click me\u0026lt;/button\u0026gt; \u0026lt;video :src=\u0026#34;src\u0026#34;\u0026gt;\u0026lt;/video\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; export default { data() { return { src: \u0026#39;\u0026#39; } }, methods: { test: function () { var self = this; uni.chooseVideo({ count: 1, sourceType: [\u0026#39;camera\u0026#39;, \u0026#39;album\u0026#39;], success: function (res) { self.src = res.tempFilePath; } }); } } } uni.chooseMedia(OBJECT)\r#\r\rTake or select a picture or video from the phone album.\nIf you select and upload non-image and video files\nOBJECT parameter description\n   parameter name Types of Defaults Required Description     count Number 9 (note: ios cannot be greater than 9) no Maximum number of files that can be selected   mediaType Array.\u0026lt;string\u0026gt; [\u0026lsquo;image\u0026rsquo;, \u0026lsquo;video\u0026rsquo;] no file type   sourceType Array.\u0026lt;string\u0026gt; [\u0026lsquo;album\u0026rsquo;, \u0026lsquo;camera\u0026rsquo;] no Selected source of pictures and videos   maxDuration Number 10 no The maximum recording time of a video, in seconds. The time range is between 3s and 30s   sizeType Array.\u0026lt;string\u0026gt; [\u0026lsquo;original\u0026rsquo;, \u0026lsquo;compressed\u0026rsquo;] no Only valid when mediaType is image, whether to compress the selected file   camera String \u0026lsquo;back\u0026rsquo; no Only valid when sourceType is camera, use front or rear camera   success function  no Callback function for successful interface call   fail function  no Callback function for interface call failure   complete function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    OBJECT.mediaType legal value\n   value Description     image Only take pictures or select pictures from album   video Can only shoot video or select video from album    OBJECT.sourceType legal value\n   value Description     album Select from album   camera Use the camera to shoot    OBJECT.camera legal value\n   value Description     back Use the rear camera   front Use the front camera    success return parameter description\n   parameter name Types of Description     tempFiles Array.\u0026lt;string\u0026gt; Local temporary file list   type String File type, valid values are image, video    Structure of res.tempFiles\n   parameter name Types of Description     tempFilePath String Local temporary file path (local path)   size Number Local temporary file size, unit B   duration Number Video duration   height Number The height of the video   width Number Video width   thumbTempFilePath String Video thumbnail temporary file path    Example\nuni.chooseMedia({ count: 9, mediaType: [\u0026#39;image\u0026#39;,\u0026#39;video\u0026#39;], sourceType: [\u0026#39;album\u0026#39;, \u0026#39;camera\u0026#39;], maxDuration: 30, camera: \u0026#39;back\u0026#39;, success(res) { console.log(res.tempFilest) } }) Tips\n If you need to upload to CDN, you can use uniCloud.uploadFile API. UniCloud provides free CDN for developers to use The developer reminds that the number of files that can be selected for the WeChat applet ios real machine cannot be greater than 9  uni.saveVideoToPhotosAlbum(OBJECT)\r#\r\rSave the video to the system album.\nOBJECT parameter description\n   parameter name Types of Required Description     filePath String Yes Video file path, it can be a temporary file path or a permanent file path   success Function no Callback function for successful interface call   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)）    success return parameter description\n   parameter name Types of Description     errMsg String Call result    note\n You can use the user authorization API to determine whether the user grants the app write permission for the album  ** Example **\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;text\u0026gt;hello\u0026lt;/text\u0026gt; \u0026lt;button @tap=\u0026#34;test\u0026#34;\u0026gt;click me\u0026lt;/button\u0026gt; \u0026lt;video :src=\u0026#34;src\u0026#34;\u0026gt;\u0026lt;/video\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; export default { data() { return { src: \u0026#39;\u0026#39; } }, methods: { test: function () { var self = this; uni.chooseVideo({ count: 1, sourceType: [\u0026#39;camera\u0026#39;], success: function (res) { self.src = res.tempFilePath; uni.saveVideoToPhotosAlbum({ filePath: res.tempFilePath, success: function () { console.log(\u0026#39;save success\u0026#39;); } }); } }); } } } uni.getVideoInfo(OBJECT)\r#\r\rGet video details\nOBJECT parameter description\n   Attributes Types of TDefaults Required Description     src string - Yes Video file path, it can be a temporary file path or a permanent file path   success function - no Callback function for successful interface call   fail function - no Callback function for interface call failure   complete function - no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    success return parameter description\n   parameter name Types of Description     orientation string Screen orientation   type string Video format   duration number Video length   size number Video size, unit kB   height number Video length, unit px   width number The width of the video, in px   fps number Video frame rate   bitrate number Video bit rate, unit kbps    res.orientation parameter description\n   value Description     up default   down 180 degree rotation   left Rotate 90 degrees counterclockwise   right Rotate 90 degrees clockwise   up-mirrored Same as up, but flipped horizontally   down-mirrored Same as down, but flipped horizontally   left-mirrored Same as left, but flipped vertically   right-mirrored Same as right, but flipped vertically    uni.compressVideo(OBJECT)\r#\r\rCompressed video interface. Developers can specify compression quality quality for compression. When finer control is needed, bitrate, fps, and resolution can be specified. When quality is passed in, these three parameters will be ignored. The relevant information of the original video can be obtained through getVideoInfo.\nThere are many plug-ins on the App side that support video compression\nIf you need to upload to CDN after compression, you can use uniCloud.uploadFile API. UniCloud provides free CDN for developers to use\nOBJECT parameter description\n   Attributes Types of Defaults Required Description     src string  Yes Video file path, it can be a temporary file path or a permanent file path   quality string  Yes Compression quality   bitrate number  Yes Bit rate, unit kbps   fps number  Yes Frame rate   resolution number  Yes Relative to the resolution ratio of the original video, the value range is (0, 1)   success function  no Callback function for successful interface call   fail function  no Callback function for interface call failure   complete function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    quality value\n   value Description     low low   medium in   high high    success return parameter description\n   parameter name Types of Description     tempFilePath string Temporary file address after compression   size string The compressed size, in kB    uni.openVideoEditor(OBJECT)\r#\r\rOpen the video editor\nOBJECT parameter description\n   Attributes Types of Defaults Required Description     filePath string - Yes The path of the video source, only the local path is supported   success function - no Callback function for successful interface call   fail function - no Callback function for interface call failure   complete function - no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    success return parameter description\n   parameter name Types of Description     duration number The length of the video file generated after editing, in milliseconds (ms)   size number The size of the video file generated after editing, in bytes (byte)   tempFilePath string Temporary path of the video file generated after editing   tempThumbPath string Temporary path of the thumbnail file generated after editing    "}),a.add({id:15,href:'/docs/api/%E5%AA%92%E4%BD%93/%E8%A7%86%E9%A2%91%E7%BB%84%E4%BB%B6%E6%8E%A7%E5%88%B6/video-context/',title:"Video Context",section:"媒体",content:"uni.createVideoContext(videoId, this)\r#\r\rCreate and return a video context videoContext object. In the custom component, the second component parameters into the this example, the operation to the component \u0026lt;video\u0026gt; assembly.\nList of methods of the videoContext object\n   method parameter Description Platform difference description     play no Play    pause no time out    seek position Jump to the specified position, unit s    stop  Stop video WeChat Mini Program   sendDanmu danmu Send barrage, danmu contains two attributes text, color    playbackRate rate Set the double speed playback, the supported magnifications are 0.5/0.8/1.0/1.25/1.5. WeChat basic library supports 2.0 times speed since 2.6.3    requestFullScreen no Enter the full screen, you can pass in the {direction} parameter, see the video component documentation for details    exitFullScreen no Exit Full Screen    showStatusBar no Show status bar, only valid in iOS full screen    hideStatusBar no Hide the status bar, only effective in iOS full screen     note:\n app-nvue platform 2.2.5+ supports uni.createVideoContext(videoId, this) To use this API under app-nvue platform 2.2.5, you need to set the component attribute id and ref at the same time ``, or use ref directly, for examplethis.$refs.video1  ** Example **\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view class=\u0026#34;page-body\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;page-section\u0026#34;\u0026gt; \u0026lt;video id=\u0026#34;myVideo\u0026#34; src=\u0026#34;https://vkceyugu.cdn.bspapp.com/VKCEYUGU-uni-app-doc/360e4b20-4f4b-11eb-8a36-ebb87efcf8c0.mp4\u0026#34; @error=\u0026#34;videoErrorCallback\u0026#34; :danmu-list=\u0026#34;danmuList\u0026#34; enable-danmu danmu-btn controls\u0026gt;\u0026lt;/video\u0026gt; \u0026lt;view class=\u0026#34;uni-list\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-list-cell\u0026#34;\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view class=\u0026#34;uni-label\u0026#34;\u0026gt;Barrage content \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-list-cell-db\u0026#34;\u0026gt; \u0026lt;input @blur=\u0026#34;bindInputBlur\u0026#34; class=\u0026#34;uni-input\u0026#34; type=\u0026#34;text\u0026#34; placeholder=\u0026#34;Enter the barrage content here\u0026#34; /\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;btn-area\u0026#34;\u0026gt; \u0026lt;button @tap=\u0026#34;bindSendDanmu\u0026#34; class=\u0026#34;page-body-button\u0026#34; formType=\u0026#34;submit\u0026#34;\u0026gt;Send barrage \u0026lt;/button\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; export default { data() { return { title: \u0026#39;video\u0026#39;, src: \u0026#39;\u0026#39;, inputValue: \u0026#39;\u0026#39;, danmuList: [{ text: \u0026#39;Barrage that appears in the first second\u0026#39;, color: \u0026#39;#ff0000\u0026#39;, time: 1 }, { text: \u0026#39;Barrage that appears in the third second\u0026#39;, color: \u0026#39;#ff00ff\u0026#39;, time: 3 } ] } }, onReady: function (res) { this.videoContext = uni.createVideoContext(\u0026#39;myVideo\u0026#39;) }, methods: { bindInputBlur: function (e) { this.inputValue = e.target.value }, bindButtonTap: function () { var that = this uni.chooseVideo({ sourceType: [\u0026#39;album\u0026#39;, \u0026#39;camera\u0026#39;], maxDuration: 60, camera: [\u0026#39;front\u0026#39;, \u0026#39;back\u0026#39;], success: function (res) { this.src = res.tempFilePath } }) }, bindSendDanmu: function () { this.videoContext.sendDanmu({ text: this.inputValue, color: this.getRandomColor() }) }, videoErrorCallback: function (e) { console.log(\u0026#39;Video error message:\u0026#39;) console.log(e.target.errMsg) }, getRandomColor: function () { const rgb = [] for (let i = 0; i \u0026lt; 3; ++i) { let color = Math.floor(Math.random() * 256).toString(16) color = color.length == 1 ? \u0026#39;0\u0026#39; + color : color rgb.push(color) } return \u0026#39;#\u0026#39; + rgb.join(\u0026#39;\u0026#39;) } } } "}),a.add({id:16,href:'/docs/api/%E5%AA%92%E4%BD%93/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%90%88%E6%88%90/media-container/',title:"Media Container",section:"媒体",content:"uni.createMediaContainer()\r#\r\rCreating audio and video processing vessel, the final container can be synthesized one video track, returns MediaContainerthe object\nMediaContainer.addTrack(track)\r#\r\rAdd audio or video tracks to the container\nParameter Description\n   parameter Description     track Audio or video track to add    MediaContainer.destroy()\r#\r\rDestroy the container and release resources\nMediaContainer.export()\r#\r\rCombine the tracks in the container and export the video file\nMediaContainer.extractDataSource(object)\r#\r\rThe track consolidation in the container and export video files, return MediaTracktarget\nParameter Description\n   Attributes Types of Required Description     source String Yes Video source address, only supports local files    MediaContainer.removeTrack(track)\r#\r\rAdd audio or video tracks to the container\nParameter Description\n   parameter Description     track Audio or video track to remove    MediaTrack\r#\r\rBy MediaContainer.extractDataSourcereturn.\nMediaTrack Audio or video track, you can perform some operations on the track\nParameter Description\n   Attributes Types of Description     kind String Track type, read-only, audio: audio track; video: video track   duration Number Track length, read only   volume Number Volume, valid under audio track, writeable    "}),a.add({id:17,href:'/docs/api/%E5%AA%92%E4%BD%93/%E9%9F%B3%E9%A2%91%E7%BB%84%E4%BB%B6%E6%8E%A7%E5%88%B6/audio-context/',title:"Audio Context",section:"媒体",content:"uni.createInnerAudioContext()\r#\r\rCreates and returns an internal audio context innerAudioContextobject.\nList of properties of innerAudioContext object\n   Attributes Types of Description Read only Platform difference description     src String Audio data link for direct playback. no    startTime Number Start playing position (unit: s), default 0 no    autoplay Boolean Whether to start playing automatically, the default is false no Some browsers on H5 do not support   loop Boolean Whether to play in a loop, the default is false no    obeyMuteSwitch Boolean Whether to follow the system mute switch, when this parameter is false, even if the user turns on the mute switch, the sound can continue to be emitted, the default value is true no    duration Number The length of the current audio (unit: s), only returned when there is currently a valid src, it needs to be obtained in onCanplay Yes    currentTime Number The current audio playback position (unit: s), only returned when there is currently a legal src, the time is not rounded up, and 6 digits after the decimal point are kept Yes    paused Boolean Whether the current state is paused or stopped, true means pause or stop, false means playing Yes    buffered Number The time of audio buffering, only to ensure that the content has been buffered from the current playback time to this time. Yes    volume Number volume. The range is 0~1. no     ** List of methods of innerAudioContext object **\n   method parameter Description     play  Play (some browsers on the H5 side need to be performed during user interaction)   pause  time out   stop  stop   seek position Jump to the specified position, unit s   destroy  Destroy the current instance   onCanplay callback The audio can be played, but there is no guarantee that it can be played smoothly later   onPlay callback Audio playback event   onPause callback Audio pause event   onStop callback Audio stop event   onEnded callback Audio natural playback end event   onTimeUpdate callback Audio playback progress update event   onError callback Audio playback error event   onWaiting callback Audio loading event, triggered when the audio needs to stop and load due to insufficient data   onSeeking callback Audio seek operation event   onSeeked callback Audio complete seek operation event   offCanplay callback Cancel listening onCanplay event   offPlay callback Cancel listening onPlay event   offPause callback Cancel listening onPause event   offStop callback Cancel listening onStop event   offEnded callback Cancel listening onEnded event   offTimeUpdate callback Cancel listening onTimeUpdate event   offError callback Cancel listening onError event   offWaiting callback Cancel listening onWaiting event   offSeeking callback Cancel listening onSeeking event   offSeeked callback Cancel listening onSeeked event    errCode description\n   errCode Description     10001 system error   10002 Network Error   10003 File error   10004 wrong format   -1 unknown mistake    ** Support format **\n   format iOS Android     flac x √   m4a √ √   ogg x √   ape x √   amr x √   wma x √   wav √ √   mp3 √ √   mp4 x √   aac √ √   aiff √ x   caf √ x    ** Example **\nconst innerAudioContext = uni.createInnerAudioContext(); innerAudioContext.autoplay = true; innerAudioContext.src = \u0026#39;https://vkceyugu.cdn.bspapp.com/VKCEYUGU-hello-uniapp/2cc220e0-c27a-11ea-9dfb-6da8e309e0d8.mp3\u0026#39;; innerAudioContext.onPlay(() =\u0026gt; { console.log(\u0026#39;Start playing \u0026#39;); }); innerAudioContext.onError((res) =\u0026gt; { console.log(res.errMsg); console.log(res.errCode); }); tips\n If you need double-speed audio playback, you can replace it with video double-speed playback. The plug-in market has packaged plug-in audio double-speed playback If you need an audio player style with ui, you can search for related plug-ins in the plug-in market.  "}),a.add({id:18,href:'/docs/api/%E6%95%B0%E6%8D%AE%E7%BC%93%E5%AD%98/storage/',title:"Storage",section:"数据缓存",content:"uni.setStorage(OBJECT)\r#\r\rStoring data in the specified key in the local cache will overwrite the original content corresponding to the key. This is an asynchronous interface.\nOBJECT parameter description\n   parameter name Types Required Description     key String Yes The specified key in the local cache   data Any Yes The content that needs to be stored, only supports native types and objects that can be serialized through JSON.stringify   success Function no Callback function for successful interface call   fail Function no Callback function for interface call failure   complete Function no Callback function for interface call failure    **Exampel **\nuni.setStorage({ key: \u0026#39;storage_key\u0026#39;, data: \u0026#39;hello\u0026#39;, success: function () { console.log(\u0026#39;success\u0026#39;); } }); uni.setStorageSync(KEY,DATA)\r#\r\rStoring data in the specified key in the local cache will overwrite the content corresponding to the original key. This is a synchronous interface.\nParameter Description\n   parameter Types Required Description     key String Yes The specified key in the local cache   data Any Yes The content that needs to be stored, only supports native types and objects that can be serialized through JSON.stringify    try { uni.setStorageSync(\u0026#39;storage_key\u0026#39;, \u0026#39;hello\u0026#39;); } catch (e) { // error } uni.getStorage(OBJECT)\r#\r\rObtain the content corresponding to the specified key asynchronously from the local cache.\nOBJECT parameter description\n   parameter name Types Required Description     key String Yes The specified key in the local cache   success Function Yes Callback function called by the interface, res = {data: content corresponding to key}   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    success return parameter description\n   parameter Types Description     data Any key corresponding content    Example\nuni.getStorage({ key: \u0026#39;storage_key\u0026#39;, success: function (res) { console.log(res.data); } }); uni.getStorageInfo(OBJECT)\r#\r\rAsynchronously obtain the relevant information of the current storage.\nOBJECT parameter description\n   parameter name Types Required Description     success Function Yes The callback function called by the interface, see the return parameter description for details   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    success return parameter description\n   parameter Types Description     keys Array＜String＞ All keys in the current storage   currentSize Number The size of the space currently occupied, unit: kb   limitSize Number Restricted space size, unit: kb    Example\nuni.getStorageInfo({ success: function (res) { console.log(res.keys); console.log(res.currentSize); console.log(res.limitSize); } }); uni.removeStorage(OBJECT)\r#\r\rAsynchronously remove the specified key from the local cache.\nOBJECT parameter description\n   parameter name Types Required Description     key String Yes The specified key in the local cache   success Function Yes Callback function called by the interface   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    Example\nuni.removeStorage({ key: \u0026#39;storage_key\u0026#39;, success: function (res) { console.log(\u0026#39;success\u0026#39;); } }); uni.removeStorageSync(KEY)\r#\r\rSynchronously remove the specified key from the local cache.\nParameter Description\n   parameter name Types Required Description     key String Yes The specified key in the local cache    Example\ntry { uni.removeStorageSync(\u0026#39;storage_key\u0026#39;); } catch (e) { // error } uni.clearStorage()\r#\r\rClean up the local data cache.\nExample\nuni.clearStorage(); uni.clearStorageSync()\r#\r\rSynchronously clean up the local data cache.\nExample\ntry { uni.clearStorageSync(); } catch (e) { // error } "}),a.add({id:19,href:'/docs/api/%E6%96%87%E4%BB%B6/file/',title:"File",section:"文件",content:"uni.saveFile(OBJECT)\r#\r\rSave the file locally.\nOBJECT parameter description:\n   parameter name Types Required Description     tempFilePath String Yes Temporary path of the file to be saved   success Function no Return the save path of the file, res = {savedFilePath:\u0026lsquo;File save path\u0026rsquo;}   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    success return parameter description:\n   parameter Description     savedFilePath File save path    Sample code:\nuni.chooseImage({ success: function (res) { var tempFilePaths = res.tempFilePaths; uni.saveFile({ tempFilePath: tempFilePaths[0], success: function (res) { var savedFilePath = res.savedFilePath; } }); } }); uni.getSavedFileList(OBJECT)\r#\r\rGet a list of locally saved files.\nOBJECT parameter description:\n   parameter name Types Required Description     success Function no The callback function of the successful interface call, see the success return parameter description for the return result   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    success return parameter description:\n   parameter Types Description     errMsg String Interface call result   fileList Array document list    Description of items in fileList:\n   key Types Description     filePath String Local path of the file   createTime Number Timestamp of when saving files, from 1970/01/01 08:00:00the number of seconds that time.   size Number File size, in bytes.    Sample code:\nuni.getSavedFileList({ success: function (res) { console.log(res.fileList); } }); uni.getSavedFileInfo(OBJECT)\r#\r\rGet the file information of the local file. This interface can only be used to obtain files that have been saved locally.\nOBJECT parameter description:\n   parameter name Types Required Description     filePath String Yes file path   success Function no The callback function of the successful interface call, see the success return parameter description for the return result   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    success return parameter description:\n   parameter Types Description     errMsg String Interface call result   size Number File size, in bytes.   createTime Number Timestamp when the file is saved, from 1970/01/01 08:00:00the number of seconds that time.    Sample code:\nuni.getSavedFileInfo({ filePath: \u0026#39;unifile://somefile\u0026#39;, //For example only, not the actual file path  success: function (res) { console.log(res.size); console.log(res.createTime); } }); uni.removeSavedFile(OBJECT)\r#\r\rDelete files stored locally.\nOBJECT parameter description:\n   parameter name Types Required Description     filePath String Yes File path to be deleted   success Function no Callback function for successful interface call   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    Sample code:\nuni.getSavedFileList({ success: function (res) { if (res.fileList.length \u0026gt; 0) { uni.removeSavedFile({ filePath: res.fileList[0].filePath, complete: function (res) { console.log(res); } }); } } }); uni.getFileInfo(OBJECT)\r#\r\rGet file information\nOBJECT parameter description:\n   parameter name Types Defaults Required Description     filePath String  Yes Local file path   success Function  no Callback function for successful interface call   fail Function  no Callback function for interface call failure   complete Function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    success return parameter description:\n   parameter Types Description     errMsg String Interface call result   size Number File size, in bytes.   digest String File digest calculated according to the passed digestAlgorithm    uni.openDocument(OBJECT)\r#\r\rOpen the document on a newly opened page. Support formats: doc, xls, ppt, pdf, docx, xlsx, pptx.\nOBJECT parameter description:\n   parameter name Types Required Description     filePath String Yes File path, available through downFile   success String no Callback function for successful interface call   complete String no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    Sample code:\nuni.downloadFile({ url: \u0026#39;https://example.com/somefile.pdf\u0026#39;, success: function (res) { var filePath = res.tempFilePath; uni.openDocument({ filePath: filePath, success: function (res) { console.log(\u0026#39;Open document successfully\u0026#39;); } }); } }); "}),a.add({id:20,href:'/docs/api/%E7%95%8C%E9%9D%A2/%E4%B8%8B%E6%8B%89%E5%88%B7%E6%96%B0/pulldown/',title:"Pulldown",section:"界面",content:"onPullDownRefresh\r#\r\rDefine the onPullDownRefresh processing function in js (at the same level as onLoad and other life cycle functions) to monitor the pull-down refresh event of the page user.\n Need pages.json, pages node of the current page to find, and in styleopen option enablePullDownRefresh. After processing the data refresh, uni.stopPullDownRefreshyou can stop the pull-down refresh of the current page.  uni.startPullDownRefresh(OBJECT)\r#\r\rThe pull-down refresh starts, and the pull-down refresh animation is triggered after the call. The effect is consistent with the user\u0026rsquo;s manual pull-down refresh.\nOBJECT parameter description\n   parameter name Types of Required Description     success Function no Callback for successful interface call   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    success return parameter description\n   parameter Types of Description     errMsg String Interface call result    uni.stopPullDownRefresh ()\r#\r\rStop the pull-down refresh of the current page.\nExample\npages.json\n{ \u0026#34;pages\u0026#34;: [ { \u0026#34;path\u0026#34;: \u0026#34;pages/index/index\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;navigationBarTitleText\u0026#34;: \u0026#34;uni-app\u0026#34;, \u0026#34;enablePullDownRefresh\u0026#34;: true } } ], \u0026#34;globalStyle\u0026#34;: { \u0026#34;navigationBarTextStyle\u0026#34;: \u0026#34;white\u0026#34;, \u0026#34;navigationBarBackgroundColor\u0026#34;: \u0026#34;#0faeff\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;#fbf9fe\u0026#34; } } index.vue\n// Is only for example, to use the actual delay in the development on demand export default { data() { return { text: \u0026#39;uni-app\u0026#39; } }, onLoad: function (options) { setTimeout(function () { console.log(\u0026#39;start pulldown\u0026#39;); }, 1000); uni.startPullDownRefresh(); }, onPullDownRefresh() { console.log(\u0026#39;refresh\u0026#39;); setTimeout(function () { uni.stopPullDownRefresh(); }, 1000); } } "}),a.add({id:21,href:'/docs/api/%E7%95%8C%E9%9D%A2/%E4%BA%A4%E4%BA%92%E5%8F%8D%E9%A6%88/prompt/',title:"Prompt",section:"界面",content:"uni.showToast(OBJECT)\r#\r\rA message box is displayed.\nOBJECT parameter description\n   parameter Types of Required Description     title String Yes The length of the prompt content is related to the icon value.   icon String no Icon, the effective value is detailed in the description below.   image String no The local path of the custom icon   mask Boolean no Whether to display a transparent mask to prevent touch penetration, default: false   duration Number no Prompt delay time, in milliseconds, default: 1500   position String no Light plain text display position, only fill the effective value of titleproperty to take effect, the effective value see note below.   success Function no Callback function for successful interface call   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    icon value description\n   value Description     success The success icon is displayed. At this time, the title text displays up to 7 Chinese characters in length. Defaults   none No icon is displayed. At this time, only single line display is supported.    Example\nuni.showToast({ title: \u0026#39;Title\u0026#39;, duration: 2000 }); Description of position value (valid only for App)\n   value Description     top Top display   center Center display   bottom Bottom display    Tips\n can achieve more functions through plus.nativeUI.toast API.  uni.hideToast ()\r#\r\rHide the message box.\nExample\nuni.hideToast(); uni.showLoading(OBJECT)\r#\r\rThe loading prompt box is displayed, and uni.hideLoading must be actively called to close the prompt box.\nOBJECT parameter description\n   parameter Types of Required Description     title String Yes The prompt text content is displayed below loading   mask Boolean no Whether to display a transparent mask to prevent touch penetration, default: false   success Function no Callback function for successful interface call   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    Example\nuni.showLoading({ title: \u0026#39;Loading\u0026#39; }); uni.hideLoading ()\r#\r\rHide the loading prompt box.\nExample\nuni.showLoading({ title: \u0026#39;Loading\u0026#39; }); setTimeout(function () { uni.hideLoading(); }, 2000); uni.showModal(OBJECT)\r#\r\rThe display modal pop-up window can have only one OK button, or both OK and Cancel buttons. Similar to an API that integrates html: alert, confirm.\nOBJECT parameter description\n   parameter Types of Required Description     title String no Prompt title   content String no Prompt content   showCancel Boolean no Whether to display the cancel button, the default is true   cancelText String no The text of the cancel button, the default is \u0026ldquo;Cancel\u0026rdquo;, up to 4 characters   confirmText String no The text of the OK button, the default is \u0026ldquo;OK\u0026rdquo;, up to 4 characters   success Function no Callback function for successful interface call   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    success return parameter description\n   parameter Types of Description     confirm Boolean When true, it means that the user clicked the OK button   cancel Boolean When it is true, it means that the user clicked cancel (used for the Android system to distinguish between clicking the mask to close or clicking the cancel button to close)    Example\nuni.showModal({ title: \u0026#39;Reminder\u0026#39;, content: \u0026#39;This is a modal window\u0026#39;, success: function (res) { if (res.confirm) { console.log(\u0026#39;user click for confirm\u0026#39;); } else if (res.cancel) { console.log(\u0026#39;user click for cancel\u0026#39;); } } }); uni.showActionSheet (OBJECT)\r#\r\rPop up the operation menu from the bottom up\nOBJECT parameter description\n   parameter Types of Required Description     itemList Array Yes The text array of the button   success Function no Callback function for successful interface call, see the return parameter description for details   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    success return parameter description\n   parameter Types of Description     tapIndex Number The buttons clicked by the user, from top to bottom, starting from 0    Example\nuni.showActionSheet({\ritemList: ['A', 'B', 'C'],\rsuccess: function (res) {\rconsole.log('Selected' + (res.tapIndex + 1) + 'buttons');\r},\rfail: function (res) {\rconsole.log(res.errMsg);\r}\r});\r"}),a.add({id:22,href:'/docs/api/%E7%95%8C%E9%9D%A2/%E5%8A%A8%E7%94%BB/animation/',title:"Animation",section:"界面",content:"uni.createAnimation(OBJECT)\nCreate an animation instance animation . Call the method of the instance to describe the animation. Finally, the animation data is exported to the animation property of the component through the export method of the animation instance.\nnote:\n The export method will clear the previous animation operation after each call  OBJECT parameter description:\n   parameter Types of Required Defaults Description     duration Integer no 400 Animation duration, unit ms   timingFunction String no \u0026ldquo;linear\u0026rdquo; Define the effect of the animation   delay Integer no 0 Animation delay time, unit ms   transformOrigin String no \u0026ldquo;50% 50% 0\u0026rdquo; Set transform-origin    Valid values of timingFunction:\n   value Description     linear The speed of the animation is the same from beginning to end   ease The animation starts at a low speed, then speeds up, and slows down before ending   ease-in Animation starts at low speed   ease-in-out Animation starts and ends at low speed   ease-out The animation ends at low speed   step-start The first frame of the animation jumps to the end state until the end   step-end The animation always keeps the start state, the last frame jumps to the end state    var animation = uni.createAnimation({ transformOrigin: \u0026#34;50% 50%\u0026#34;, duration: 1000, timingFunction: \u0026#34;ease\u0026#34;, delay: 0 }) animation\nThe animation instance can call the following methods to describe the animation, and it will return to itself after the call is over, and support chain call writing.\nList of methods of the animation object:\nstyle:\n   method parameter Description     opacity value Transparency, parameter range 0~1   backgroundColor color Color value   width length Length value, if you pass in Number, px is used by default, and you can pass in length values in other custom units   height length Length value, if you pass in Number, px is used by default, and you can pass in length values in other custom units   top length Length value, if you pass in Number, px is used by default, and you can pass in length values in other custom units   left length Length value, if you pass in Number, px is used by default, and you can pass in length values in other custom units   bottom length Length value, if you pass in Number, px is used by default, and you can pass in length values in other custom units   right length Length value, if you pass in Number, px is used by default, and you can pass in length values in other custom units    Rotate:\n   method parameter Description     rotate you The range of deg is -180~180, rotate one deg angle clockwise from the origin   rotateX you deg range -180~180, rotate one deg angle on X axis   rotateY you The range of deg is -180~180, rotate a deg angle on the Y axis   rotateZ you The range of deg is -180~180, rotate a deg angle on the Z axis    Zoom:\n   method parameter Description     scale sx, [sy] When one parameter is used, it means that the X-axis and Y-axis are simultaneously zoomed by the sx multiple; when two parameters are used, it means that the sx multiple is zoomed on the X-axis and the sy multiple is zoomed on the Y-axis.   scaleX left Scale sx on the X axis   scaleY his Scale sy multiples on the Y axis   scaleZ s Zoom sy multiples on the Z axis   scale3d (sx, sy, sz) Zoom sx multiples on the X axis, sy multiples on the Y axis, and sz multiples on the Z axis    Offset:\n   method parameter Description     translate tx, [ty] For one parameter, it means that the offset is tx on the X axis and the unit is px; for two parameters, it means that the offset is tx on the X axis and the offset is ty on the Y axis, and the unit is px.   translateX tx Offset tx on the X axis, in px   translateY ty Offset tx on Y axis, unit px   translateZ tz Offset tx on the Z axis, unit px   translate3d (tx, ty, tz) Offset tx on X axis, ty on Y axis, tz on Z axis, unit px    tilt:\n   method parameter Description     skew ax, [ay] The parameter range is -180~180; for one parameter, the Y-axis coordinate is unchanged, and the X-axis coordinate is inclined clockwise by ax degrees; for two parameters, the X-axis is inclined by ax degrees and the Y-axis is inclined by ay degrees.   skewX ax The parameter range is -180~180; the Y-axis coordinate remains unchanged, and the X-axis coordinate extends clockwise by ax degree   skewY ay The parameter range is -180~180; the X-axis coordinate is unchanged, and the Y-axis coordinate is inclined clockwise ay degree    Matrix deformation:\n   method parameter Description     matrix (a,b,c,d,tx,ty)    matrix3d      Animation queue\nAfter calling the animation method of operation to be invoked step()to represent a set of animation is complete, you can call any number of animation methods in a group of animation, all animation set animation will begin at the same time, will be the next set of animation after a complete set of animation . stepIt can be passed with a uni.createAnimation()different set of configuration parameter specifies the current configuration of the animation.\nSample code\n\u0026lt;view :animation=\u0026#34;animationData\u0026#34; style=\u0026#34;background:red;height:100rpx;width:100rpx\u0026#34;\u0026gt;\u0026lt;/view\u0026gt; export default{ data() { return { animationData: {} } }, onShow: function(){ var animation = uni.createAnimation({ duration: 1000, timingFunction: \u0026#39;ease\u0026#39;, }) this.animation = animation animation.scale(2,2).rotate(45).step() this.animationData = animation.export() setTimeout(function() { animation.translate(30).step() this.animationData = animation.export() }.bind(this), 1000) }, methods:{ rotateAndScale: function () { // rotate and amplify this.animation.rotate(45).scale(2, 2).step() this.animationData = this.animation.export() }, rotateThenScale: function () { // rotate after amplify this.animation.rotate(45).step() this.animation.scale(2, 2).step() this.animationData = this.animation.export() }, rotateAndScaleThenTranslate: function () { // rotate and amplify,after move this.animation.rotate(45).scale(2, 2).step() this.animation.translate(100, 100).step({ duration: 1000 }) this.animationData = this.animation.export() } } } "}),a.add({id:23,href:'/docs/api/%E7%95%8C%E9%9D%A2/%E5%AA%92%E4%BD%93%E6%9F%A5%E8%AF%A2/media-query-observer/',title:"Media Query Observer",section:"界面",content:"The MediaQueryObserver object is used to monitor changes in the media query status of the page, such as whether the width and height of the interface are within a specified range.\nuni.createMediaQueryObserver([this])\r#\r\rCreates and returns an MediaQueryObserverobject instance.\nList of methods of the MediaQueryObserver object\r#\r\r   method Description     MediaQueryObserver.observe (Object descriptor, function callback) Start monitoring the changes of the page media query   MediaQueryObserver.disconnect () Stop listening, the callback function will no longer trigger    Object descriptor\n   Attribute name Types of Defaults Required Description     min-width number  no Minimum page width (in px)   max-width number  no Maximum page width (in px)   width number  no Page width (in px)   min-height number  no Minimum page height (in px)   max-height number  no Maximum page height (in px)   height number  no Page height (in px)   orientation string  no Screen orientation (landscape or portrait)    The observe callback function contains one parameter\n   parameter Types of Description     matches boolean Whether the current state of the page satisfies the specified media query    Code example\r#\r\rThe following sample code is recommended to use HBuilderX to create a new uni-app project and experience the complete sample directly.\n\u0026lt;template\u0026gt; \u0026lt;view class=\u0026#34;content\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;\u0026#34;\u0026gt; The minmum width of page is 375px, and the maximum width of page is 500px: {{matches}} \u0026lt;/view\u0026gt; \u0026lt;view\u0026gt; The screen orientation to portrait: {{landscape}} \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; let landscapeOb export default { data() { return { matches: false, landscape: false, mediaQueryOb: null } }, onLoad() { }, // After the component mountd, UI - related API implementation  mounted() { this.testMediaQueryObserver() this.landscapeObserver() }, methods: { testMediaQueryObserver() { this.mediaQueryOb = uni.createMediaQueryObserver(this) this.mediaQueryOb.observe({ minWidth: 375, //The minimum width of page is 375px  maxWidth: 500 //The maximum width of page is 500px  }, matches =\u0026gt; { this.matches = matches; }) }, landscapeObserver() { landscapeOb = uni.createMediaQueryObserver(this) landscapeOb.observe({ orientation: \u0026#39;landscape\u0026#39; //The screen orientation to portrait  }, matches =\u0026gt; { this.landscape = matches }) }, destroyed () { this.mediaQueryOb.disconnect() //Stop listening when components on Their Destruction  landscapeOb.disconnect() } } } \u0026lt;/script\u0026gt; \u0026lt;style\u0026gt; .content { text-align: center; height: 400upx; } \u0026lt;/style\u0026gt; "}),a.add({id:24,href:'/docs/api/%E7%95%8C%E9%9D%A2/%E5%AD%97%E4%BD%93/font/',title:"Font",section:"界面",content:"uni.loadFontFace(Object object)\r#\r\rLoad web fonts dynamically, the file address must be the download type.\nnote:\n Introduce Chinese fonts, errors will occur when the volume is too large, it is recommended to extract part of the Chinese, reduce the volume, or replace it with pictures Native components such as canvas do not support fonts added using the interface The tool prompts Faild to load font can be ignored  Parameter Description\n   Attributes Types of Defaults Required Description     family String  Yes Defined font name   source String  Yes The address of the font resource. The recommended formats are TTF and WOFF   desc Object  no Optional font descriptor   success Function  no Callback function for successful interface call   fail Function  no Callback function for interface call failure   complete Function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    Structure of Object.desc\n   Attributes Types of Defaults Required Description     style String normal no Font style, optional values are normal / italic / oblique   weight String normal no Font weight, optional values are normal / bold / 100 / 200../ 900   variant String normal no Set the font display text of small capital letters, optional values are normal / small-caps / inherit    Code example\nuni.loadFontFace({ family: \u0026#39;Bitstream Vera Serif Bold\u0026#39;, source: \u0026#39;url(\u0026#34;xxxx.ttf\u0026#34;)\u0026#39;, success() { console.log(\u0026#39;success\u0026#39;) } }) "}),a.add({id:25,href:'/docs/api/%E7%95%8C%E9%9D%A2/%E6%BB%9A%E5%8A%A8/scroll/',title:"Scroll",section:"界面",content:"uni.pageScrollTo(OBJECT)\r#\r\rScroll the page to the target position.\nOBJECT parameter description\n   parameter name Types of Required Description     scrollTop String Yes Scroll to the target position of the page (in px)   duration Number no The duration of the scroll animation, the default is 300ms, the unit is ms   success function no Callback function for successful interface call   fail function no Callback function for interface call failure   complete function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    selector syntax selector is similar to CSS selector, but only supports the following syntax.\n ID selector: #the-id Class selector (multiple can be specified consecutively):.a-class.another-class Child element selector:.the-parent \u0026gt; .the-child Descendant selector:.the-ancestor .the-descendant Descendant selector across custom components:.the-ancestor \u0026gt;\u0026gt;\u0026gt; .the-descendant Union of multiple selectors:#a-node, .some-other-nodes  Example\nuni.pageScrollTo({ scrollTop: 0, duration: 300 }); "}),a.add({id:26,href:'/docs/api/%E7%95%8C%E9%9D%A2/%E7%AA%97%E5%8F%A3/window/',title:"Window",section:"界面",content:"uni.onWindowResize(CALLBACK)\r#\r\rListen to the window size change event\nCALLBACK parameter description\n   Attributes Types of Description     size Object The size of the changed window, in px, {windowWidth,windowHeight}    Code example\nuni.onWindowResize((res) =\u0026gt; { console.log(\u0026#39;Changed the width of window=\u0026#39; + res.size.windowWidth) console.log(\u0026#39;Changed the height of window=\u0026#39; + res.size.windowHeight) }) TIPS\n If the App side sets the soft keyboard pop-up mode to adjustResize, this event will be triggered when the keyboard pops up. This event will be triggered when the screen is switched between landscape and portrait.  uni.offWindowResize(CALLBACK)\r#\r\rCancel listening window size change event\nCode example\nuni.offWindowResize(() =\u0026gt; { console.log(\u0026#39;Cancel listening window size change event\u0026#39;) }) "}),a.add({id:27,href:'/docs/api/%E7%95%8C%E9%9D%A2/%E8%83%8C%E6%99%AF/bgcolor/',title:"Bgcolor",section:"界面",content:"uni.setBackgroundColor(OBJECT)\r#\r\rDynamically set the background color of the window.\nParameter Description\n   Attributes Types of Defaults Required Description     backgroundColor String  no The background color of the window, must be a hexadecimal color value   success Function  no Callback function for successful interface call   fail Function  no Callback function for interface call failure   complete Function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    Code example\nuni.setBackgroundColor({ backgroundColor: \u0026#39;#ffffff\u0026#39;, backgroundColorTop: \u0026#39;#222222\u0026#39;, backgroundColorBottom: \u0026#39;#333333\u0026#39; }); "}),a.add({id:28,href:'/docs/api/%E7%95%8C%E9%9D%A2/%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%84%E4%BB%B6/nexttick/',title:"Next Tick",section:"界面",content:"nextTick(function callback)\r#\r\rUse in custom components in mini programs, such as wxcomponents. Delay a part of the operation to the next time slice before execution. (Similar to setTimeout).\n"}),a.add({id:29,href:'/docs/api/%E7%95%8C%E9%9D%A2/%E8%8A%82%E7%82%B9%E4%BF%A1%E6%81%AF/nodes-info/',title:"Nodes Info",section:"界面",content:"uni.createSelectorQuery()\r#\r\rIt returns an SelectorQueryobject instance. You may be used in this example selectand other methods to select a node, and using boundingClientRecta method such as selection information to be queried.\nTips:\n Use uni.createSelectorQuery()needs in the life cycle mountedbe called later. Custom components compile mode (default mode), requires the use of selectorQuery.inthe method.  SelectorQuery\r#\r\rObject to query node information\nselectorQuery.in(component)\r#\r\rThe selector changes the selection for the custom components componentwithin, a return SelectorQueryobject instance. (Initially, the selector only selects nodes in the page range, and does not select nodes in any custom components).\nCode example\nconst query = uni.createSelectorQuery().in(this); query.select(\u0026#39;#id\u0026#39;).boundingClientRect(data =\u0026gt; { console.log(\u0026#34;Get position info\u0026#34; + JSON.stringify(data)); console.log(\u0026#34;Distance of node from top\u0026#34; + data.top); }).exec(); selectorQuery.select(selector)\r#\r\rSelect the current page matches a first selector selectornode, it returns an NodesRefobject instance, be used to obtain the node information.\nselector description:\nselector Similar to CSS selectors, but only supports the following syntax.\n ID selector:#the-id Class selector (multiple can be specified consecutively):.a-class.another-class Child element selector:.the-parent \u0026gt; .the-child Descendant selector:.the-ancestor .the-descendant Descendant selector across custom components:.the-ancestor \u0026gt;\u0026gt;\u0026gt; .the-descendant Union of multiple selectors:#a-node, .some-other-nodes  selectorQuery.selectAll(selector)\r#\r\rSelect the current page selector matches selectorall nodes return an NodesRefobject instance, be used to obtain the node information.\nselectorQuery.selectViewport()\r#\r\rSelection display area can be used to obtain information about the size, the position of the display area of the scroll, return an NodesRefobject instance.\nselectorQuery.exec(callback)\r#\r\rExecute all requests. The request results form an array in the order of the request and are returned in the first parameter of the callback.\nNodesRef\r#\r\rObject used to obtain node information\nnodesRef.fields(object,callback)\r#\r\rGet information about the node. The first parameter is the node-related information configuration (required); the second parameter is the method\u0026rsquo;s callback function, and the parameter is the specified related node information.\nobject parameter description\n   Field name Types of Defaults Required Description     id Boolean false no Whether to return the node id   dataset Boolean false no Whether to return the node dataset   rect Boolean false no Whether to return the node layout position ( left right top bottom)   size Boolean false no Whether to return the node size ( width height)   scrollOffset Boolean false no Returns whether the node scrollLeft scrollTop, the node must be scroll-vieworviewport   properties Array＜string＞ [] no Specify a list of attribute names, and return the current attribute value of the corresponding attribute name of the node (only the regular attribute values marked in the component document can be obtained, and the attribute values of id class style and event binding are not available)   computedStyle Array＜string＞ [] no Specify a list of style names, and return the current value of the style name corresponding to the node   context Boolean false no Whether to return the Context object corresponding to the node    nodesRef.boundingClientRect(callback)\r#\r\rAdd a query request for the layout position of the node. Relative to the display area, in pixels. Its function is similar to that of DOM getBoundingClientRect. Return NodesRefcorresponding SelectorQuery.\ncallback return parameter\n   Attributes Types of Description     id String ID of the node   dataset Object Node\u0026rsquo;s dataset   left Number The left boundary coordinates of the node   right Number The right boundary coordinates of the node   top Number The upper boundary coordinates of the node   bottom Number The lower boundary coordinates of the node   width Number Node width   height Number Node height    nodesRef.scrollOffset(callback)\r#\r\rAdd the scroll position query request of the node. In pixels. Node must be scroll-viewor viewport. Return NodesRefcorresponding SelectorQuery.\ncallback return parameter\n   Attributes Types of Description     id String ID of the node   dataset Object Node\u0026rsquo;s dataset   scrollLeft Number The horizontal scroll position of the node   scrollTop Number Vertical scroll position of the node    [nodesRef.context(callback)\r#\r\rAdd the Context object query request of the node. Support VideoContext,CanvasContext,MapContext,acquisition.\ncallback return parameter\n   Attributes Types of Description     context Object Context object corresponding to the node    Code example\r#\r\runi.createSelectorQuery().selectViewport().scrollOffset(res =\u0026gt; { console.log(\u0026#34;vertical scroll position\u0026#34; + res.scrollTop); }).exec(); let view = uni.createSelectorQuery().in(this).select(\u0026#34;.test\u0026#34;); view.fields({ size: true, scrollOffset: true }, data =\u0026gt; { console.log(\u0026#34;Get position info\u0026#34; + JSON.stringify(data)); console.log(\u0026#34;The width of node\u0026#34; + data.width); }).exec(); view.boundingClientRect(data =\u0026gt; { console.log(\u0026#34;Get position info\u0026#34; + JSON.stringify(data)); console.log(\u0026#34;Distance of node from top\u0026#34; + data.top); }).exec(); "}),a.add({id:30,href:'/docs/api/%E7%95%8C%E9%9D%A2/%E8%8A%82%E7%82%B9%E5%B8%83%E5%B1%80%E7%9B%B8%E4%BA%A4%E7%8A%B6%E6%80%81/intersection-observer/',title:"Intersection Observer",section:"界面",content:"The Node Layout Intersection State API can be used to monitor the intersection state of two or more component nodes in the layout position. This set of APIs can often be used to infer whether certain nodes can be seen by users and what percentage of them can be seen by users.\nuni.createIntersectionObserver([this], [options])\r#\r\rCreates and returns an IntersectionObserverobject instance.\nThe optional parameters of options are:\n   Field name Types of Description     thresholds Array A numeric array containing all thresholds. The default is [0].   initialRatio Number The initial intersecting ratio. If the intersecting ratio detected when calling is not equal to this value and reaches the threshold, a callback function of the listener will be triggered. The default is 0.   observeAll Boolean While observing whether a plurality of reference nodes (instead of one), if set true, observeof targetSelectorthe selected plurality of nodes (note: also selected too many nodes will affect the rendering performance)    Method list of IntersectionObserver object\r#\r\r   method Description     IntersectionObserver.relativeTo(selector,[margins]) Use the selector to specify a node as one of the reference areas.   IntersectionObserver.relativeToViewport([margins]) Specify the page display area as one of the reference areas   IntersectionObserver.observe(selector,[callback]) Specify the target node and start monitoring changes in the intersection state. The callback function callbackcontains a parameterresult   IntersectionObserver.disconnect() Stop monitoring. The callback function will no longer trigger.    Margins parameter: used to expand (or shrink) the border of the reference node layout area.\n   Attributes Types of Defaults Is it required Description     left number  no The left boundary of the node layout area   right number  no The right boundary of the node layout area   top number  no The upper boundary of the node layout area   bottom number  no The lower boundary of the node layout area    The sample code below, if the target node \u0026quot;.test\u0026quot;enters \u0026quot;.scroll\u0026quot;when the following 100px region, the callback function will be triggered.\nuni.createIntersectionObserver(this).relativeTo(\u0026#39;.scroll\u0026#39;,{bottom: 100}).observe(\u0026#39;.test\u0026#39;, (res) =\u0026gt; { console.log(res); }) Fields included in the observe callback function result\n   Field name Types of Description     intersectionRatio Number Intersection ratio   intersectionRect Object The intersection of the boundary region, comprising left, right, top, bottomfour   boundingClientRect Object Boundary of the layout area of the target node, comprising left, right, top, bottomfour   relativeRect Object Referring to the boundary region, comprising left, right, top, bottomfour   time Number Timestamp of intersection detection    Tips\n The intersection area with the page display area does not accurately represent the area visible to the user, because the area involved in the calculation is the \u0026ldquo;layout area\u0026rdquo;, and the layout area may be cropped and hidden by other nodes when drawing (such as the node with the overflow style hidden in the ancestor node) ) Or cover (such as fixed location nodes). Interactive node status APIrecommend onReadylistening life cycle, because the APIneed to find elements on the page, onReadythe page has finished rendering the first time, been able to find the corresponding element.  Code example\r#\r\r\u0026lt;template\u0026gt; \u0026lt;view class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;text\u0026gt;{{appear ? \u0026#39;ball show\u0026#39; : \u0026#39;ball disappear\u0026#39;}}\u0026lt;/text\u0026gt; \u0026lt;view class=\u0026#34;page-section\u0026#34;\u0026gt; \u0026lt;scroll-view class=\u0026#34;scroll-view\u0026#34; scroll-y\u0026gt; \u0026lt;view class=\u0026#34;scroll-area\u0026#34;\u0026gt; \u0026lt;text class=\u0026#34;notice\u0026#34;\u0026gt;Scroll down the ball to appear\u0026lt;/text\u0026gt; \u0026lt;view class=\u0026#34;ball\u0026#34;\u0026gt;\u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/scroll-view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; let observer = null; export default { data() { return { appear: false } }, onReady() { observer = uni.createIntersectionObserver(this); observer.relativeTo(\u0026#39;.scroll-view\u0026#39;).observe(\u0026#39;.ball\u0026#39;, (res) =\u0026gt; { if (res.intersectionRatio \u0026gt; 0 \u0026amp;\u0026amp; !this.appear) { this.appear = true; } else if (!res.intersectionRatio \u0026gt; 0 \u0026amp;\u0026amp; this.appear) { this.appear = false; } }) }, onUnload() { if (observer) { observer.disconnect() } } } \u0026lt;/script\u0026gt; \u0026lt;style\u0026gt; view,page { display: flex; flex-direction: column; } .scroll-view { height: 400rpx; background: #fff; border: 1px solid #ccc; box-sizing: border-box; } .scroll-area { height: 1300rpx; display: flex; flex-direction: column; align-items: center; transition: .5s; } .notice { margin-top: 150rpx; margin: 150rpx 0 400rpx 0; } .ball { width: 200rpx; height: 200rpx; background: #1AAD19; border-radius: 50%; } \u0026lt;/style\u0026gt; "}),a.add({id:31,href:'/docs/api/%E7%95%8C%E9%9D%A2/%E8%AE%BE%E7%BD%AEtabbar/tabbar/',title:"Tabbar",section:"界面",content:"uni.setTabBarItem(OBJECT)\r#\r\rDynamically set the content of a tabBar\nOBJECT parameter description:\n   Attributes Types of Defaults Required Description     index number  Yes Which item of the tabBar, counting from the left   text String  no button text on tab   iconPath String  no The image path, the icon size is limited to 40kb, and the recommended size is 81px * 81px. When the postion is top, this parameter is invalid and network images are not supported   selectedIconPath String  no The image path when selected, the icon size is limited to 40kb, and the recommended size is 81px * 81px. When the postion is top, this parameter is invalid   pagePath String  no The absolute path of the page must be defined in pages first, the replaced pagePath will not become a normal page (still need to use uni.swichTab to jump)   success Funtion  no Callback function for successful interface call   fail Funtion  no Callback function for interface call failure   complete Funtion  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    Sample code\nuni.setTabBarItem({ index: 0, text: \u0026#39;text\u0026#39;, iconPath: \u0026#39;/path/to/iconPath\u0026#39;, selectedIconPath: \u0026#39;/path/to/selectedIconPath\u0026#39; }) uni.setTabBarStyle(OBJECT)\r#\r\rDynamically set the overall style of tabBar\nOBJECT parameter description:\n   Attributes Types of Defaults Required Description     color String  no The default color of the text on the tab, HexColor   selectedColor String  no The color when the text on the tab is selected, HexColor   backgroundColor String  no Tab background color, HexColor   backgroundImage String  no Picture background. Supports setting local pictures or creating linear gradients. For example, priority is higher than backgroundColor.   backgroundRepeat String  no The background image is tiled. repeat: the background image is tiled in the vertical and horizontal directions; repeat-x: the background image is tiled in the horizontal direction and stretched in the vertical direction; repeat-y: the background image is tiled in the vertical direction and stretched in the horizontal direction; no-repeat : The background image is stretched both vertically and horizontally. No-repeat is used by default. Only App 2.7.1+ supports   borderStyle String  no The color of the upper border of the tabBar, only black/white is supported   success Funtion  no Callback function for successful interface call   fail Funtion  no Callback function for interface call failure   complete Funtion  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    BackgroundImage creates linear gradient instructions\nbackgroundImage: linear-gradient(to top, #a80077, #66ff00);\rCurrently, radial-gradient is not supported.\nCurrently, only two color gradients are supported, and the gradient directions are as follows:\n to right: gradient from left to right to left: gradient from right to left to bottom: gradient from top to bottom to top: gradient from bottom to top to bottom right: from the upper left corner to the lower right corner to top left: from the lower right corner to the upper left corner  Sample code\nuni.setTabBarStyle({ color: \u0026#39;#FF0000\u0026#39;, selectedColor: \u0026#39;#00FF00\u0026#39;, backgroundColor: \u0026#39;#0000FF\u0026#39;, borderStyle: \u0026#39;white\u0026#39; }) uni.hideTabBar (OBJECT)\r#\r\rHide tabBar\nOBJECT parameter description:\n   Attributes Types of Defaults Required Description     success Funtion  no Callback function for successful interface call   fail Funtion  no Callback function for interface call failure   complete Funtion  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    uni.showTabBar(OBJECT)\r#\r\rShow tabBar\nOBJECT parameter description:\n   Attributes Types of Defaults Required Description     success Funtion  no Callback function for successful interface call   fail Funtion  no Callback function for interface call failure   complete Funtion  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    uni.setTabBarBadge(OBJECT)\r#\r\rAdd text to the upper right corner of an item in the tabBar.\nOBJECT parameter description:\n   parameter Types of Required Description     index Number Yes Which item of the tabBar, counting from the left   text String Yes The displayed text, no more than 3 characters   success Function no Callback function for successful interface call   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    Sample code\nuni.setTabBarBadge({ index: 0, text: \u0026#39;1\u0026#39; }) uni.removeTabBarBadge(OBJECT)\r#\r\rRemove the text in the upper right corner of a tabBar item.\nOBJECT parameter description:\n   parameter Types of Required Description     index Number Yes Which item of the tabBar, counting from the left   success Function no Callback function for successful interface call   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    uni.showTabBarRedDot (OBJECT)\r#\r\rDisplay the red dot in the upper right corner of an item in the tabBar.\nOBJECT parameter description:\n   parameter Types of Required Description     index Number Yes Which item of the tabBar, counting from the left   success Function no Callback function for successful interface call   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    uni.hideTabBarRedDot (OBJECT)\r#\r\rHide the red dot in the upper right corner of a tabBar item.\nOBJECT parameter description:\n   parameter Types of Required Description     index Number Yes Which item of the tabBar, counting from the left   success Function no Callback function for successful interface call   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    uni.onTabBarMidButtonTap(CALLBACK)\r#\r\rListen to the click event of the middle button\nTip\n The tabbar is native, and the level is higher than the front-end elements Most of the above APIs for tabbar operations can only be used after the tabbar is rendered. Avoid using it before the tabbar is initialized.  "}),a.add({id:32,href:'/docs/api/%E7%95%8C%E9%9D%A2/%E8%AE%BE%E7%BD%AE%E5%AF%BC%E8%88%AA%E6%9D%A1/navigationbar/',title:"Navigationbar",section:"界面",content:"uni.setNavigationBarTitle(OBJECT)\r#\r\rDynamically set the title of the current page.\nOBJECT parameter description\n   parameter Types of Required Description     title String Yes page title   success Function no Callback function for successful interface call   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    Example\nuni.setNavigationBarTitle({ title: \u0026#39;New title\u0026#39; }); note\n If you need to enter the page title set, it may be onReadyperformed within, to avoid modifications within the framework are covered. If you must onShowdelay the need to perform within a short time  uni.setNavigationBarColor(OBJECT)\r#\r\rSet the color of the page navigation bar. If you need to enter the page to set the color, please delay the execution to prevent being overwritten by the color logic set in the frame\nOBJECT parameter description\n   parameter Types of Required Description     frontColor String Yes Foreground color value, including button, title, status bar color, only supports #ffffff and #000000   backgroundColor String Yes Background color value, valid value is hexadecimal color   success Function no Callback function for successful interface call   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    note\n If you need to enter the page title set, it may be onReadyperformed within, to avoid modifications within the framework are covered. If you must onShowdelay the need to perform within a short time  animation structure\n   Attributes Types of Defaults Required Description     duration number 0 no Animation change time, unit ms   timingFunc String \u0026lsquo;linear\u0026rsquo; no Animation changes    animation.timingFunc valid value\n   value Description     linear The speed of the animation is the same from beginning to end.   easeIn Animation starts at low speed   easeOut The animation ends at low speed.   easeInOut The animation starts and ends at low speed.    success return parameter description\n   parameter name Types of Description     errMsg String Call result    Example\nuni.setNavigationBarColor({ frontColor: \u0026#39;#ffffff\u0026#39;, backgroundColor: \u0026#39;#ff0000\u0026#39;, animation: { duration: 400, timingFunc: \u0026#39;easeIn\u0026#39; } }) "}),a.add({id:33,href:'/docs/api/%E7%BD%91%E7%BB%9C/%E4%B8%8A%E4%BC%A0%E4%B8%8B%E8%BD%BD/network-file/',title:"Network File",section:"网络",content:"uni.uploadFile(OBJECT)\r#\r\rThe local resources uploaded to the developer server, the client initiates a POSTrequest, which content-typeis multipart/form-data. OBJECT parameter description\n   parameter name Types Required Description     url String Yes Developer server url   name String Yes The key corresponding to the file, the developer can obtain the binary content of the file through this key on the server side   header Object no HTTP request Header, Referer cannot be set in the header.   formData Object no Other additional form data in the HTTP request   success Function no Callback function for successful interface call   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    files parameter description\nThe files parameter is an array of file objects, the structure of the file object is as follows:\n   parameter name Types Required Description     name String no When multipart is submitted, the project name of the form, the default is file   hate String Yes Local address of the file    Tip:\n If you namedo not fill or fill the same values, it can lead to only read a file server to read the file.  success return parameter description\n   parameter Types Description     data String Data returned by the developer server   statusCode Number HTTP status code returned by the developer server    Example\nuni.chooseImage({ success: (chooseImageRes) =\u0026gt; { const tempFilePaths = chooseImageRes.tempFilePaths; uni.uploadFile({ url: \u0026#39;https://www.example.com/upload\u0026#39;, //Example only, not the real interface address 	filePath: tempFilePaths[0], name: \u0026#39;file\u0026#39;, formData: { \u0026#39;user\u0026#39;: \u0026#39;test\u0026#39; }, success: (uploadFileRes) =\u0026gt; { console.log(uploadFileRes.data); } }); } }); return value\nIf you want to return an uploadTaskobject that need to pass at least a success / fail / complete parameters. E.g:\nvar uploadTask = uni.uploadFile({ url: \u0026#39;https://www.example.com/upload\u0026#39;, //Example only, not the real interface address.  complete: ()=\u0026gt; {} }); uploadTask.abort(); If success / fail / complete parameters are not passed in, the encapsulated Promise object will be returned.\nPass uploadTask, can monitor upload progress change event, and cancel upload task.\nList of methods of uploadTask object\n   method parameter Description     abortion  Interrupt upload task   onProgressUpdate callback Monitor upload progress changes    onProgressUpdate return parameter description\n   parameter Types Description     progress Number Upload progress percentage   totalBytesSent Number The length of the uploaded data, in Bytes   totalBytesExpectedToSend Number The total length of data expected to be uploaded, in Bytes    Example\nuni.chooseImage({ success: (chooseImageRes) =\u0026gt; { const tempFilePaths = chooseImageRes.tempFilePaths; const uploadTask = uni.uploadFile({ url: \u0026#39;https://www.example.com/upload\u0026#39;, //Example only, not the real interface address. 	filePath: tempFilePaths[0], name: \u0026#39;file\u0026#39;, formData: { \u0026#39;user\u0026#39;: \u0026#39;test\u0026#39; }, success: (uploadFileRes) =\u0026gt; { console.log(uploadFileRes.data); } }); uploadTask.onProgressUpdate((res) =\u0026gt; { console.log(\u0026#39;Upload progress\u0026#39; + res.progress); console.log(\u0026#39;Length of data that has been uploaded\u0026#39; + res.totalBytesSent); console.log(\u0026#39;Total length of data expected to be uploaded\u0026#39; + res.totalBytesExpectedToSend); // Test the condition and cancel the upload task. 	if (res.progress \u0026gt; 50) { uploadTask.abort(); } }); } }); uni.downloadFile(OBJECT)\r#\r\rWhen downloading file resources locally, the client directly initiates an HTTP GET request to return the local temporary path of the file.\nOBJECT parameter description\n   parameter name Types Required Description     url String Yes Download resource url   header Object no HTTP request Header, Referer cannot be set in the header.   success Function no After the download is successful, it will be sent to the page in the form of tempFilePath, res = {tempFilePath:\u0026lsquo;temporary path of the file\u0026rsquo;}   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    success return parameter description\n   parameter Types Description     tempFilePath String Temporary file path, the downloaded file will be stored in a temporary file   statusCode Number HTTP status code returned by the developer server    note\n Network requests timeoutcan be unified in manifest.jsonthe configurationNetworkTimeout. Example  uni.downloadFile({ url: \u0026#39;https://www.example.com/file/test\u0026#39;, //Example only, not the real interface address. 	success: (res) =\u0026gt; { if (res.statusCode === 200) { console.log(\u0026#39;Download successful\u0026#39;); } } }); return value\nIf you want to return an downloadTaskobject that need to pass at least a success / fail / complete parameters. E.g:\nvar downloadTask = uni.downloadFile({ url: \u0026#39;https://www.example.com/file/test\u0026#39;, //Example only, not the real interface address. 	complete: ()=\u0026gt; {} }); downloadTask.abort(); If success / fail / complete parameters are not passed in, the encapsulated Promise object will be returned.\nPass downloadTask, can monitor the download progress change event, and cancel the download task.\nList of methods of the downloadTask object\n   method parameter Description     abortion  Interrupt download task   onProgressUpdate callback Monitor download progress changes    onProgressUpdate return parameter description\n   parameter Types of Description     progress Number Download progress percentage   totalBytesWritten Number The length of the downloaded data, in Bytes   totalBytesExpectedToWrite Number The total length of data expected to be downloaded, in Bytes    Example\nconst downloadTask = uni.downloadFile({ url: \u0026#39;http://www.example.com/file/test\u0026#39;, //Example only, not the real interface address. 	success: (res) =\u0026gt; { if (res.statusCode === 200) { console.log(\u0026#39;Download successful\u0026#39;); } } }); downloadTask.onProgressUpdate((res) =\u0026gt; { console.log(\u0026#39;Download progress\u0026#39; + res.progress); console.log(\u0026#39;Length of data that has been downloaded\u0026#39; + res.totalBytesWritten); console.log(\u0026#39;Total length of data expected to be downloaded\u0026#39; + res.totalBytesExpectedToWrite); // Test the condition and cancel the upload task. 	if (res.progress \u0026gt; 50) { downloadTask.abort(); } }); "}),a.add({id:34,href:'/docs/api/%E7%BD%91%E7%BB%9C/%E5%8F%91%E8%B5%B7%E8%AF%B7%E6%B1%82/request/',title:"Request",section:"网络",content:"uni.request(OBJECT)\r#\r\rInitiate a network request.\nOBJECT parameter description\n   parameter name Types Required Defaults Description Platform difference description     url String Yes  Developer server interface address    data Object/String no  Requested parameters    header Object no  Set the requested header. Referer cannot be set in the header.    method String no GET See the description below for valid values    dataType String no json If set to json, it will try to do a JSON.parse on the returned data    success Function no  Receive the callback function successfully returned by the developer server    fail Function no  Callback function for interface call failure    complete Function no  The callback function for the end of the interface call (the call will be executed if it succeeds or fails)     method valid value\nMust be capitalized.\nsuccess return parameter description\n   parameter Types Description     data Object/String/ArrayBuffer Data returned by the developer server   statusCode Number HTTP status code returned by the developer server   header Object HTTP Response Header returned by the developer server   cookies Array.\u0026lt;string\u0026gt; Cookies returned by the developer server, in the format of a string array    data data description\nThe final data sent to the server is of type String. If the incoming data is not of type String, it will be converted to String. The conversion rules are as follows:\n For the GETmethod, it converts the data query string. For example { name: 'name', age: 18 }the result of transformation is name=name\u0026amp;age=18. For the POSTmethod and header['content-type']of application/jsonthe data, will JSON serialization. For the POSTmethod and header['content-type']for the application/x-www-form-urlencodeddata, converts the data query string.  Example\nuni.request({ url: \u0026#39;https://www.example.com/request\u0026#39;, //Example only, not the real interface address.  data: { text: \u0026#39;uni.request\u0026#39; }, header: { \u0026#39;custom-header\u0026#39;: \u0026#39;hello\u0026#39; //Customize request header information  }, success: (res) =\u0026gt; { console.log(res.data); this.text = \u0026#39;request success\u0026#39;; } }); return value\nIf you want to return an requestTaskobject that need to pass at least a success / fail / complete parameters. E.g:\nvar requestTask = uni.request({ url: \u0026#39;https://www.example.com/request\u0026#39;, //Example only, not the real interface address. 	complete: ()=\u0026gt; {} }); requestTask.abort(); Example\nconst requestTask = uni.request({ url: \u0026#39;https://www.example.com/request\u0026#39;, //Example only, not the real interface address. 	data: { name: \u0026#39;name\u0026#39;, age: 18 }, success: function(res) { console.log(res.data); } }); "}),a.add({id:35,href:'/docs/api/%E8%AE%BE%E5%A4%87/accelerometer/accelerometer/',title:"Accelerometer",section:"设备",content:"uni.onAccelerometerChange(CALLBACK)\r#\r\rListen for acceleration data,Frequency: 5 cycles per second,Interface calls will automatically start listening,use uni.offAccelerometer to listening the cancel.\nCALLBACK Return Parameter\n   Parameter Type Description     x Number The X axis   y Number The Y axis   z Number The Z axis    Tips\n H5 to obtain acceleration information,need to be deployed in https server,http protocol still available when local preview（localhost）.  Sample\nuni.onAccelerometerChange(function (res) { console.log(res.x); console.log(res.y); console.log(res.z); }); uni.offAccelerometerChange(CALLBACK)\r#\r\rUnlisten for acceleration data.\nuni.startAccelerometer(OBJECT)\r#\r\rStart listening for acceleration data.\nOBJECT Parameter Description\n   Attribute Type Default value Required Description     success Function  no A successful callback to the interface call   fail Function  no The interface calls the callback function that failed   complete Function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    interval The legal value\n   Value Description     game callback frequency applicable to updating the game,It\u0026rsquo;s about 20ms   ui The callback frequency for updating the UI,It\u0026rsquo;s about 60ms   normal Normal callback frequency,It\u0026rsquo;s about 200ms    Sample\nuni.startAccelerometer(); uni.stopAccelerometer(OBJECT)\r#\r\rStop listening for acceleration data.\nObject Parameter description\n|Attribute|Type|Default value|Required|Description| |:-|:-|:-|:-| |success|Function|no|Callback function for successful interface call| |fail|Function|no|Callback function for interface call failure| |complete|Function|no|The callback function for the end of the interface call (the call will be executed if it succeeds or fails)|\nSample\nuni.stopAccelerometer(); "}),a.add({id:36,href:'/docs/api/%E8%AE%BE%E5%A4%87/barcode/barcode/',title:"Barcode",section:"设备",content:"uni.scanCode(OBJECT)\r#\r\rTurn up the client scan interface, scan code after successful return the corresponding results.\nObject Parameter Description\n   Paramater Name Type Required Description     onlyFromCamera Boolean no If only from the camera code, are not allowed to select images from album   scanType Array no Sweep the code type,The parameter type is an array,Qr code is \u0026lsquo;qrCode\u0026rsquo;,One dimension code is\u0026rsquo;barCode',DataMatrix是‘datamatrix’,pdf417是‘pdf417’.   success Function no A successful callback to the interface call,See details for returned content. Return parameter description.   fail Function no CALLBACK function for interface call failure (triggered in case of recognition failure, user cancellation, etc.)   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    success Return parameter description\n   Parameter Description     result result   scanType scan type   charSet char set   path When the code scanned is the valid QR code of the current application,This field will be returned, the content is carried by the two-dimensional code path.    The sample\n// Allows code scanning from cameras and albums uni.scanCode({ success: function (res) { console.log(\u0026#39;scanType:\u0026#39; + res.scanType); console.log(\u0026#39;result:\u0026#39; + res.result); } }); // Only camera scanning is allowed uni.scanCode({ onlyFromCamera: true, success: function (res) { console.log(\u0026#39;scanType:\u0026#39; + res.scanType); console.log(\u0026#39;result:\u0026#39; + res.result); } }); // Turn up bar code scanning uni.scanCode({ scanType: [\u0026#39;barCode\u0026#39;], success: function (res) { console.log(\u0026#39;scanType:\u0026#39; + res.scanType); console.log(\u0026#39;result:\u0026#39; + res.result); } }); Tip\n App-vueIf you want to customize the scan code,May refer to How to use 5+ native interface controls in uni-app和plus.barcode API App-nvue,Support for barcode components,Customized scanning interface.App Customized scan code interface,nvue is recommended. App code scanning engine,Use the industry\u0026rsquo;s open source universal scan library,Scan code efficiency than WeChat, Alipay and other commercial scanning code library. Clicking back on the scan screen will also enter the fail callback.  "}),a.add({id:37,href:'/docs/api/%E8%AE%BE%E5%A4%87/batteryinfo/batteryinfo/',title:"Battery Info",section:"设备",content:"Battery Information\r#\r\rThe battery API is not unified yet,It needs to be compiled according to platform conditions.\n App platform:use Native.js.  "}),a.add({id:38,href:'/docs/api/%E8%AE%BE%E5%A4%87/ble/ble/',title:"Ble",section:"设备",content:"uni.setBLEMTU(OBJECT)\r#\r\r2.8.4+\nSet Bluetooth maximum transmission unit.Call after successful call uni.createBLEConnection, mtu range (22,512), need Android 5.1 or above.\nOBJECT Parameter Description\n   Attribute Type Default value Required Description     deviceId string  yes ID used to distinguish devices   mtu number  yes Maximum transmission unit range (22,512),Unit bytes   success function  no Callback function for successful interface call   fail function  no Callback function for interface call failure   complete function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    uni.writeBLECharacteristicValue(OBJECT)\r#\r\rWrite binary data into the characteristic value of the Bluetooth low energy device.Tips: The characteristic value of the device must support write before it can be called successfully.\nOBJECT Parameter Description\n   Attribute Type Default value Required Description     deviceId string  yes Bluetooth device id   serviceId string  yes The uuid of the service corresponding to the Bluetooth feature value   characteristicId string  yes Uuid of Bluetooth characteristic value   value ArrayBuffer  yes The binary value corresponding to the characteristic value of the Bluetooth device   success function  no Callback function for successful interface call   fail function  no Callback function for interface call failure   complete function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    Error\r#\r\r   Error Code Error Message Description     0 ok normal   10000 not init The Bluetooth adapter is not initialized   10001 not available The current Bluetooth adapter is not available   10002 no device The specified device was not found   10003 connection fail Connection failed   10004 no service The specified service was not found   10005 no characteristic The specified property was not found   10006 no connection The current connection is disconnected   10007 property not support The current property does not support this operation   10008 system error Exceptions reported by all other systems   10009 system not support Only supported by Android system, system version lower than 4.3 does not support BLE    Tips\r#\r\r Multiple calls in parallel may cause write failure. APP does not limit the size of written data packets. However, the system and Bluetooth devices will limit the data size of a single transmission of Bluetooth 4.0.If the maximum number of bytes is exceeded, a write error will occur. It is recommended that each write not exceed 20 bytes. If the data written in a single time is too long, there is a situation that the system will not have any callbacks (including error callbacks) on iOS. On the Android platform,when call interface writeBLECharacteristicValue immediately after call interface notifyBLECharacteristicValueChange return success, system error (10008) occurs on some device  Code sample\r#\r\r// Send a 0x00 hexadecimal data to the Bluetooth device const buffer = new ArrayBuffer(1) const dataView = new DataView(buffer) dataView.setUint8(0, 0) uni.writeBLECharacteristicValue({ // The deviceId here needs to be obtained in the getBluetoothDevices or onBluetoothDeviceFound interface  deviceId, // The serviceId here needs to be obtained in the getBLEDeviceServices interface  serviceId, // The characteristicId here needs to be obtained in the getBLEDeviceCharacteristics interface  characteristicId, // The value here is type of ArrayBuffer  value: buffer, success(res) { console.log(\u0026#39;writeBLECharacteristicValue success\u0026#39;, res.errMsg) } }) uni.readBLECharacteristicValue(OBJECT)\r#\r\rRead the binary data value of the characteristic value of the Bluetooth low energy device. Tips: The characteristic value of the device must support read before it can be called successfully.\nOBJECT Parameter Description\n   Attribute Type Default value Required Description     deviceId string  yes Bluetooth device id   serviceId string  yes The uuid of the service corresponding to the Bluetooth feature value   characteristicId string  yes Uuid of Bluetooth characteristic value   success function  no Callback function for successful interface call   fail function  no Callback function for interface call failure   complete function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    Error\r#\r\r   Error Code Error Message Description     0 ok normal   10000 not init The Bluetooth adapter is not initialized   10001 not available The current Bluetooth adapter is not available   10002 no device The specified device was not found   10003 connection fail Connection failed   10004 no service The specified service was not found   10005 no characteristic The specified feature value was not found   10006 no connection The current connection is disconnected   10007 property not support The current feature value does not support this operation   10008 system error Exceptions reported by all other systems   10009 system not support Only supported by Android system, system version lower than 4.3 does not support BLE    Tips\r#\r\r Multiple calls in parallel will cause the possibility of read failure. The information read by the interface needs to be obtained in the callback registered by the onBLECharacteristicValueChange method.  Code sample\r#\r\r// The callback must be here to get uni.onBLECharacteristicValueChange(function (characteristic) { console.log(\u0026#39;characteristic value comed:\u0026#39;, characteristic) }) uni.readBLECharacteristicValue({ // The deviceId here needs to have established a link with the corresponding device through createBLEConnection  deviceId, // The serviceId here needs to be obtained in the getBLEDeviceServices interface  serviceId, // The characteristicId here needs to be obtained in the getBLEDeviceCharacteristics interface  characteristicId, success(res) { console.log(\u0026#39;readBLECharacteristicValue:\u0026#39;, res.errCode) } }) uni.onBLEConnectionStateChange(CALLBACK)\r#\r\rMonitor the change event of Bluetooth low energy connection status. Including the developer\u0026rsquo;s active connection or disconnection, device loss, abnormal connection disconnection, etc. CALLBACK Return parameter\n   Attribute Type Description     deviceId string Bluetooth device ID   connected boolean Is it connected    Code sample\r#\r\runi.onBLEConnectionStateChange(function (res) { // This method callback can be used to handle abnormal situations such as unexpected disconnection of the connection  console.log(`device ${res.deviceId}state has changed, connected: ${res.connected}`) }) uni.onBLECharacteristicValueChange(CALLBACK)\r#\r\rMonitor the feature value change event of Bluetooth low energy devices.The notifyBLECharacteristicValueChange interface must be enabled before receiving notification pushed by the device.\nCALLBACK Return parameter\n   Attribute Type Description     deviceId string Bluetooth device id   serviceId string The uuid of the service corresponding to the Bluetooth feature value   characteristicId string Uuid of Bluetooth characteristic value   value ArrayBuffer The latest value of the eigenvalue    Code sample\r#\r\r// ArrayBuffer to hex string example function ab2hex(buffer) { const hexArr = Array.prototype.map.call( new Uint8Array(buffer), function (bit) { return (\u0026#39;00\u0026#39; + bit.toString(16)).slice(-2) } ) return hexArr.join(\u0026#39;\u0026#39;) } uni.onBLECharacteristicValueChange(function (res) { console.log(`characteristic ${res.characteristicId}has changed, now is ${res.value}`) console.log(ab2hex(res.value)) }) uni.notifyBLECharacteristicValueChange(OBJECT)\r#\r\rEnable the notify function when the characteristic value of the Bluetooth low energy device changes, and subscribe to the characteristic value. Note: The feature value of the device must support notify or indicate before it can be called successfully.In addition, you must first enable notifyBLECharacteristicValueChange to listen to the device characteristicValueChange event\nOBJECT Parameter Description\n   Attribute Type Default value Required Description     deviceId string  yes Bluetooth device id   serviceId string  yes The uuid of the service corresponding to the Bluetooth feature value   characteristicId string  yes Uuid of Bluetooth characteristic value   state boolean  yes Whether to enable notify   success function  no Callback function for successful interface call   fail function  no Callback function for interface call failure   complete function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    Error\r#\r\r   Error Code Error Message Description     0 ok normal   10000 not init The Bluetooth adapter is not initialized   10001 not available The current Bluetooth adapter is not available   10002 no device The specified device was not found   10003 connection fail Connection failed   10004 no service The specified service was not found   10005 no characteristic The specified feature value was not found   10006 no connection The current connection is disconnected   10007 property not support The current feature value does not support this operation   10008 system error exceptionsReportedByAllOtherSystems   10009 system not support Only supported by Android system, system version lower than 4.3 does not support BLE    Tips\r#\r\r After the subscription operation is successful, the device needs to actively update the value of the characteristic value to trigger the uni.onBLECharacteristicValueChange` callback. On the Android platform, Call the writeBLECharacteristicValue interface immediately after calling notifyBLECharacteristicValueChange successfully, system error 10008 occurs on some device.  Code sample\r#\r\runi.notifyBLECharacteristicValueChange({ state: true, // Enable notify function  // The deviceId here needs to have established a link with the corresponding device through createBLEConnection  deviceId, // The serviceId here needs to be obtained in the getBLEDeviceServices interface serviceId,  // The characteristicId here needs to be obtained in the getBLEDeviceCharacteristics interface  characteristicId, success(res) { console.log(\u0026#39;notifyBLECharacteristicValueChange success\u0026#39;, res.errMsg) } }) uni.getBLEDeviceServices(OBJECT)\r#\r\rGet all services of Bluetooth devices(service).\nOBJECT Parameter Description\n   Attribute Type Default value Required Description     deviceId string  yes Bluetooth device id   success function  no Callback function for successful interface call   fail function  no Callback function for interface call failure   complete function  no Callback function for the end of the interface call (the call will be executed if the call succeeds or fails)    success return parameter description:\n   Attribute Type Description     services Array\u0026lt;Object\u0026gt; Equipment service list    res.services Structure\n   Attribute Type Description     uuid string Uuid for Bluetooth device service   isPrimary boolean Is this service the main service    Error\r#\r\r   Error Code Error Message Description     0 ok normal   10000 not init The Bluetooth adapter is not initialized   10001 not available The current Bluetooth adapter is not available   10002 no device The specified device was not found   10003 connection fail Connection failed   10004 no service The specified service was not found   10005 no characteristic The specified feature value was not found   10006 no connection The current connection is disconnected   10007 property not support The current feature value does not support this operation   10008 system error exceptionsReportedByAllOtherSystems   10009 system not support Only supported by Android system, system version lower than 4.3 does not support BLE    Code sample\r#\r\runi.getBLEDeviceServices({ // The deviceId here needs to have established a link with the corresponding device through createBLEConnection  deviceId, success(res) { console.log(\u0026#39;device services:\u0026#39;, res.services) } }) uni.getBLEDeviceRSSI(OBJECT)\r#\r\r2.8.4+\nGet the signal strength of the Bluetooth device.\nOBJECT Parameter Description\n   Attribute Type Default value Required Description     deviceId string  yes Bluetooth device id   success function  no Callback function for successful interface call   fail function  no Callback function for interface call failure   complete function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    uni.getBLEDeviceCharacteristics(OBJECT)\r#\r\rGet all the characteristic values in a certain service of the Bluetooth device(characteristic).\nOBJECT Parameter Description\n   Attribute Type Default value Required Description     deviceId string  yes Bluetooth device id   serviceId string  yes Bluetooth service uuid, need to use getBLEDeviceServices to obtain   success function  no Callback function for successful interface call   fail function  no Callback function for interface call failure   complete function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    success Return parameter description:\n   Attribute Type Description      characteristics Array\u0026lt;Object\u0026gt; Equipment service list     res.characteristics structure\n   Attribute Type Description     uuid string Uuid of Bluetooth device characteristic value   properties Object Operation type supported by this characteristic value    properties structure\n   Attribute Type Description     read boolean Does the characteristic value support read operation   write boolean Does this characteristic value support write operation   notify boolean Does this characteristic value support notify operation   indicate boolean Does the characteristic value support indicate operation    Error\r#\r\r   Error Code Error Message Description     0 ok 正常   10000 not init The Bluetooth adapter is not initialized   10001 not available The current Bluetooth adapter is not available   10002 no device The specified device was not found   10003 connection fail Connection failed   10004 no service The specified service was not found   10005 no characteristic The specified feature value was not found   10006 no connection The current connection is disconnected   10007 property not support The current feature value does not support this operation   10008 system error Exceptions reported by all other systems   10009 system not support Only supported by Android system, system version lower than 4.3 does not support BLE    Code sample\r#\r\runi.getBLEDeviceCharacteristics({ // The deviceId here needs to have established a link with the corresponding device through createBLEConnection  deviceId, // The serviceId here needs to be obtained in the getBLEDeviceServices interface  serviceId, success(res) { console.log(\u0026#39;device getBLEDeviceCharacteristics:\u0026#39;, res.characteristics) } }) uni.createBLEConnection(OBJECT)\r#\r\rConnect low energy Bluetooth devices.\nIf the APP has searched for a Bluetooth device before and successfully established a connection, it can directly pass in the deviceId obtained by the previous search and directly try to connect to the device without performing a search operation.\nOBJECT Parameter Description\n   Attribute Type Default value Required Description     deviceId string  yes The id used to distinguish the device   timeout number  no Timeout time, in ms, if you leave it blank, it will not time out   success function  no Callback function for successful interface call   fail function  no Callback function for interface call failure   complete function  no Callback function for the end of the interface call (the call will be executed if the call succeeds or fails)    Error\r#\r\r   Error Code Error Message Description     0 ok normal   10000 not init The Bluetooth adapter is not initialized   10001 not available The current Bluetooth adapter is not available   10002 no device The specified device was not found   10003 connection fail Connection failed   10004 no service The specified service was not found   10005 no characteristic The specified feature value was not found   10006 no connection The current connection is disconnected   10007 property not support The current feature value does not support this operation   10008 system error Exceptions reported by all other systems   10009 system not support Only supported by Android system, system version lower than 4.3 does not support BLE    Tips\r#\r\r Please make sure to call the createBLEConnection and closeBLEConnection interfaces in pairs as much as possible.If Android calls createBLEConnection multiple times to create a connection, it may cause the system to hold multiple connected instances of the same device.As a result, the connection to the device cannot be truly disconnected when closeBLEConnection is called. The Bluetooth connection may be disconnected at any time,It is recommended to listen for uni.onBLEConnectionStateChange` callback events and reconnect as needed when the Bluetooth device is disconnected. If the interface for data read and write operations is called on an unconnected device or a disconnected device,A 10006 error will be returned, and it is recommended to reconnect.  Code sample\r#\r\runi.createBLEConnection({ // The deviceId here needs to have established a link with the corresponding device through createBLEConnection  deviceId, success(res) { console.log(res) } }) uni.closeBLEConnection(OBJECT)\r#\r\rDisconnect low energy Bluetooth devices.\nOBJECT Parameter Description\n   Attribute Type Default value Required Description     deviceId string  yes The id used to distinguish the device   timeout number  no Timeout time, in ms, if you leave it blank, it will not time out   success function  no Callback function for successful interface call   fail function  no Callback function for interface call failure   complete function  no Callback function for the end of the interface call (the call will be executed if the call succeeds or fails)    Error\r#\r\r   Error Code Error Message Description     0 ok normal   10000 not init The Bluetooth adapter is not initialized   10001 not available The current Bluetooth adapter is not available   10002 no device The specified device was not found   10003 connection fail Connection failed   10004 no service The specified service was not found   10005 no characteristic The specified feature value was not found   10006 no connection The current connection is disconnected   10007 property not support The current feature value does not support this operation   10008 system error Exceptions reported by all other systems   10009 system not support Only supported by Android system, system version lower than 4.3 does not support BLE    Code sample\r#\r\runi.closeBLEConnection({ deviceId, success(res) { console.log(res) } }) "}),a.add({id:39,href:'/docs/api/%E8%AE%BE%E5%A4%87/bluetooth/bluetooth/',title:"Bluetooth",section:"设备",content:"uni.openBluetoothAdapter(OBJECT)\r#\r\rInitialize the Bluetooth module\nObject Parameter description\n   Attribute Type Default value Required Description     success function  no Interface calls a successful callback function   fail function  no Callback function for interface call failure   complete function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    Error\r#\r\r   Error Code Error Message Description     0 ok normal   10000 not init The Bluetooth adapter is not initialized   10001 not available The current Bluetooth adapter is not available   10002 no device The specified device was not found   10003 connection fail Connection failed   10004 no service The specified service was not found   10005 no characteristic The specified property was not found   10006 no connection The current connection is disconnected   10007 property not support The current property does not support this operation   10008 system error Exceptions reported by all other systems   10009 system not support Only supported by Android system, system version lower than 4.3 does not support BLE    Tips\n Other Bluetooth-related APIs must be used after uni.openBluetoothAdapter calls. Otherwise the API will return an error (errCode=10000). If the user\u0026rsquo;s bluetooth switch is not on or the phone does not support bluetooth function, calling uni.openBluetoothAdapterwill return an error (err Code=10001). The Bluetooth function of the phone is not available.At this time, the APP Bluetooth module has been initialized. uni.onBluetoothAdapterStateChange can be used to monitor the change of Bluetooth status of the phone, and all the APIs of the Bluetooth module can also be called.  Code sample\nuni.openBluetoothAdapter({ success(res) { console.log(res) } }) uni.startBluetoothDevicesDiscovery(OBJECT)\r#\r\rBegin searching for nearby Bluetooth peripherals.This operation costs a lot of system resources,Call method uni.stopBluetoothDevicesDiscovery to stop the search after searching and connecting to the device .\nObject Parameter description\n   Attribute Type Default value Required Description     services Array\u0026lt;String\u0026gt;  no A list of UUIDs to search for the main service of the Bluetooth device.Some Bluetooth devices will broadcast the UUID of their main service. If this parameter is set,Only Bluetooth devices whose broadcast packet has the corresponding UUID for the primary service are searched.It is recommended to use this parameter mainly to filter out other Bluetooth devices that do not need to be processed.   allowDuplicatesKey boolean false no Whether to allow duplicate reporting of the same equipment.If duplicate reporting is allowed,The uni.onBlueToothDeviceFound method will report the same equipment for many times, but the RSSI values will be different.   interval number 0 no Interval of reported devices.0 indicates that new devices are reported as soon as they are found, and other values are reported according to the interval passed in.   success function  no Callback function for successful interface call   fail function  no Callback function for interface call failure   complete function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    Error\r#\r\r   Error Code Error Message Description     \u0026mdash; \u0026mdash; \u0026mdash;   0 ok normal   10000 not init The Bluetooth adapter is not initialized   10001 not available The current Bluetooth adapter is not available   10002 no device The specified device was not found   10003 connection fail Connection failed   10004 no service The specified service was not found   10005 no characteristic The specified property was not found   10006 no connection The current connection is disconnected   10007 property not support The current property does not support this operation   10008 system error Exceptions reported by all other systems   10009 system not support Only supported by Android system, system version lower than 4.3 does not support BLE    Tips:\n The App currently only supports the discovery of BLE Bluetooth devices,More Bluetooth device discovery,You can use Native.js  Code sample\n// Taking Bluetooth smart lights on WeChat hardware platform as an example, the UUID of the main service is FEE7. This parameter is passed in to search only for devices whose primary service UUID is FEE7 uni.startBluetoothDevicesDiscovery({ services: [\u0026#39;FEE7\u0026#39;], success(res) { console.log(res) } }) uni.onBluetoothDeviceFound(CALLBACK)\r#\r\rListen for events where a new device is found\nCALLBACK Returns Parameter\n   Attribute Type Description     devices Array\u0026lt;Object\u0026gt; A list of newly searched devices    devices structure\n   Attribute Type Description     name string Bluetooth device name, some equipment may not have   deviceId string Id is used to distinguish between equipment   RSSI number The current signal strength bluetooth devices   advertisData ArrayBuffer The current bluetooth devices in the data segment of the radio ManufacturerData data segments.   advertisServiceUUIDs Array\u0026lt;String\u0026gt; The ServiceUIDS data segment in the broadcast data segment of the current Bluetooth device   localName string LocalName data segment in the broadcast data segment of the current Bluetooth device   serviceData Object The ServiceData data segment in the broadcast data segment of the current Bluetooth device    Tips\n If the uni.onBluetoothDeviceFound called back a device,The device is added to the array of uni.getBluetoothDevices Interface.  Code sample\n// ArrayBuffer to Hex string example function ab2hex(buffer) { const hexArr = Array.prototype.map.call( new Uint8Array(buffer), function (bit) { return (\u0026#39;00\u0026#39; + bit.toString(16)).slice(-2) } ) return hexArr.join(\u0026#39;\u0026#39;) } uni.onBluetoothDeviceFound(function (devices) { console.log(\u0026#39;new device list has founded\u0026#39;) console.dir(devices) console.log(ab2hex(devices[0].advertisData)) }) uni.stopBluetoothDevicesDiscovery(OBJECT)\r#\r\rStop searching for nearby Bluetooth peripherals.If the desired Bluetooth device has been found and there is no need to continue searching,It is recommended to call this interface to stop the Bluetooth search.\nObject Parameter description\n   Attribute Type Default value Required Description     success function  no Callback function for successful interface call   fail function  no Callback function for interface call failure   complete function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    Error\r#\r\r   Error Code Error Message Description     0 ok normal   10000 not init The Bluetooth adapter is not initialized   10001 not available The current Bluetooth adapter is not available   10002 no device The specified device was not found   10003 connection fail Connection failed   10004 no service The specified service was not found   10005 no characteristic The specified property was not found   10006 no connection The current connection is disconnected   10007 property not support The current property does not support this operation   10008 system error Exceptions reported by all other systems   10009 system not support Only supported by Android system, system version lower than 4.3 does not support BLE    Code sample\nuni.stopBluetoothDevicesDiscovery({ success(res) { console.log(res) } }) uni.onBluetoothAdapterStateChange(CALLBACK)\r#\r\rListen for Bluetooth adapter state change events\nCALLBACK Return Parameter\n   Attribute Type Description     available boolean Is the Bluetooth adapter available   discovering boolean Whether the Bluetooth adapter is in search state    Code sample\nuni.onBluetoothAdapterStateChange(function (res) { console.log(\u0026#39;adapterState changed, now is\u0026#39;, res) }) uni.getConnectedBluetoothDevices(OBJECT)\r#\r\rGet the device in the connected state based on the UUID.\nObject Parameter description\n   Attribute Type Default value Required Description     services Array\u0026lt;String\u0026gt;  yes 蓝牙设备主 service 的 uuid 列表   success function  no Callback function for successful interface call   fail function  no Callback function for interface call failure   complete function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    success Return parameter description:\n   Attribute Type Description     devices Array\u0026lt;Object\u0026gt; The list of devices searched    res.devices structure\n   Attribute Type Description     name string Bluetooth device name, some devices may not have   deviceId string The ID used to distinguish the device    Error\r#\r\r   Error Code Error Message Description     0 ok normal   10000 not init The Bluetooth adapter is not initialized   10001 not available The current Bluetooth adapter is not available   10002 no device The specified device was not found   10003 connection fail Connection failed   10004 no service The specified service was not found   10005 no characteristic The specified property was not found   10006 no connection The current connection is disconnected   10007 property not support The current property does not support this operation   10008 system error Exceptions reported by all other systems   10009 system not support Only supported by Android system, system version lower than 4.3 does not support BLE    Code sample\nuni.getConnectedBluetoothDevices({ success(res) { console.log(res) } }) uni.getBluetoothDevices(OBJECT)\r#\r\rGet all discovered Bluetooth devices while the Bluetooth module is in effect. Includes devices that are already connected to the machine.\nObject Parameter description\n   Attribute Type Default value Required Description     success function  no Callback function for successful interface call   fail function  no Callback function for interface call failure   complete function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    success Return parameter description:\n   Attribute Type Description     devices Array\u0026lt;Object\u0026gt; The list of connected devices corresponding to the UUID    res.devices structure\n   Attribute Type Description      name string Bluetooth device name, some devices may not have    deviceId string The ID used to distinguish the device    RSSI number The signal strength of the current Bluetooth device    advertisData ArrayBuffer ManufacturerData data segment in the broadcast data segment for the current Bluetooth device.    advertisServiceUUIDs Array\u0026lt;String\u0026gt; The ServiceUIDS data segment in the broadcast data segment of the current Bluetooth device    localName string LocalName data segment in the broadcast data segment of the current Bluetooth device    serviceData Object The ServiceData data segment in the broadcast data segment of the current Bluetooth device     Error\r#\r\r   Error Code Error Message Description     0 ok normal   10000 not init The Bluetooth adapter is not initialized   10001 not available The current Bluetooth adapter is not available   10002 no device The specified device was not found   10003 connection fail Connection failed   10004 no service The specified service was not found   10005 no characteristic The specified property was not found   10006 no connection The current connection is disconnected   10007 property not support The current property does not support this operation   10008 system error Exceptions reported by all other systems   10009 system not support Only supported by Android system, system version lower than 4.3 does not support BLE    Code sample\n// ArrayBuffer to Hex String Sample function ab2hex(buffer) { const hexArr = Array.prototype.map.call( new Uint8Array(buffer), function (bit) { return (\u0026#39;00\u0026#39; + bit.toString(16)).slice(-2) } ) return hexArr.join(\u0026#39;\u0026#39;) } uni.getBluetoothDevices({ success(res) { console.log(res) if (res.devices[0]) { console.log(ab2hex(res.devices[0].advertisData)) } } }) Tips\n The list of devices obtained by this interface isAll Bluetooth devices searched while the Bluetooth module is in effect,If the Bluetooth module is not called in time after the end of the use process uni.closeBluetoothAdapter` release resources,There will be a call to this interface that will return the Bluetooth device that was searched in the previous Bluetooth usage flow,It may be that the device is no longer with the user and cannot connect. Bluetooth devices are being searched,The name field returned by the system is generally the name of the device in the LocalName field of the broadcast packet.If the connection is established with the Bluetooth device, the name field returned by the system will be changed to GattName from the Bluetooth device.If you need to dynamically change the device name and display it, the localName field is recommended.  uni.getBluetoothAdapterState(OBJECT)\r#\r\rGet the state of the native Bluetooth adapter.\nObject Parameter description\n   Attribute Type Default value Required Description     success function  no Callback function for successful interface call   fail function  no Callback function for interface call failure   complete function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    success Return parameter description:\n   Attribute Type Description     discovering boolean Whether the device is being searched   available boolean Is the Bluetooth adapter available    Error\r#\r\r   Error Code Error Message Description     0 ok normal   10000 not init The Bluetooth adapter is not initialized   10001 not available The current Bluetooth adapter is not available   10002 no device The specified device was not found   10003 connection fail Connection failed   10004 no service The specified service was not found   10005 no characteristic The specified property was not found   10006 no connection The current connection is disconnected   10007 property not support The current property does not support this operation   10008 system error Exceptions reported by all other systems   10009 system not support Only supported by Android system, system version lower than 4.3 does not support BLE    Code sample\nuni.getBluetoothAdapterState({ success(res) { console.log(res) } }) uni.closeBluetoothAdapter(OBJECT)\r#\r\rTurn off the Bluetooth module.Calling this method breaks all established connections and frees system resources. Recommended after using the Bluetooth process,Call in pairs with uni.openBluetoothAdapter` .\nObject Parameter description\n   Attribute Type Default value Required Description     success function  no Callback function for successful interface call   fail function  no Callback function for interface call failure   complete function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    Error\r#\r\r   Error Code Error Message Description     0 ok normal   10000 not init The Bluetooth adapter is not initialized   10001 not available The current Bluetooth adapter is not available   10002 no device The specified device was not found   10003 connection fail Connection failed   10004 no service The specified service was not found   10005 no characteristic The specified property was not found   10006 no connection The current connection is disconnected   10007 property not support The current property does not support this operation   10008 system error Exceptions reported by all other systems   10009 system not support Only supported by Android system, system version lower than 4.3 does not support BLE    Code sample\nuni.closeBluetoothAdapter({ success(res) { console.log(res) } }) "}),a.add({id:40,href:'/docs/api/%E8%AE%BE%E5%A4%87/brightness/brightness/',title:"Brightness",section:"设备",content:"uni.setScreenBrightness(OBJECT)\r#\r\rScreen brightness setting.\nObject Parameter description\n|Attribute|Type|Default value|Required|Description| |:-|:-|:-|:-| |value|Number|yes|Screen brightness value,Ranges 0 to 1, where 0 is darkest and 1 is brightest| |success|Function|no|Callback function for successful interface call| |fail|Function|no|Callback function for interface call failure| |complete|Function|no|The callback function for the end of the interface call (the call will be executed if it succeeds or fails)|\nSample\nuni.setScreenBrightness({ value: 0.5, success: function () { console.log(\u0026#39;success\u0026#39;); } });  Tips: avoid using setScreenBrightness() in onshow() process, The brightness change triggers onShow() again, causing an endless loop\n uni.getScreenBrightness(OBJECT)\r#\r\rGet screen brightness value.\nObject Parameter description\n|Attribute|Type|Default value|Required|Description| |:-|:-|:-|:-| |success|Function|no|Callback function for successful interface call| |fail|Function|no|Callback function for interface call failure| |complete|Function|no|The callback function for the end of the interface call (the call will be executed if it succeeds or fails)|\nsuccess Return parameter description\n   Parameter Type Description     value Number Screen brightness values, ranging from 0 to 1, where 0 is darkest and 1 is brightest.    Sample\nuni.getScreenBrightness({ success: function (res) { console.log(\u0026#39;Screen brightness value:\u0026#39; + res.value); } }); uni.setKeepScreenOn(OBJECT)\r#\r\rSets whether to remain always on. This will only take effect in the current application, and will not work when you leave the application.\nObject Parameter description\n|Attribute|Type|Default value|Required|Description| |:-|:-|:-|:-| |keepScreenOn|Boolean|yes|Whether to keep the screen always on| |success|Function|no|Callback function for successful interface call| |fail|Function|no|Callback function for interface call failure| |complete|Function|no|The callback function for the end of the interface call (the call will be executed if it succeeds or fails)|\nsuccess Return parameter description\n   Parameter Type Description     errMsg String The results    Sample\n// Keep the screen always on uni.setKeepScreenOn({ keepScreenOn: true }); "}),a.add({id:41,href:'/docs/api/%E8%AE%BE%E5%A4%87/clipboard/clipboard/',title:"Clipboard",section:"设备",content:"uni.setClipboardData(OBJECT)\r#\r\rSets the contents of the system clipboard.\nObject Parameter description\n|Attribute|Type|Default value|Required|Description| |:-|:-|:-|:-| |data|String|yes|What needs to be set| |success|Function|no|Callback function for successful interface call| |fail|Function|no|Callback function for interface call failure| |complete|Function|no|The callback function for the end of the interface call (the call will be executed if it succeeds or fails)|\nSample\nuni.setClipboardData({ data: \u0026#39;hello\u0026#39;, success: function () { console.log(\u0026#39;success\u0026#39;); } }); uni.getClipboardData(OBJECT)\r#\r\rGet the contents of the system clipboard.\nObject Parameter description\n|Attribute|Type|Default value|Required|Description| |:-|:-|:-|:-| |success|Function|no|Callback function for successful interface call| |fail|Function|no|Callback function for interface call failure| |complete|Function|no|The callback function for the end of the interface call (the call will be executed if it succeeds or fails)|\nsuccess Return parameter description\n   Parameter Type Description     data String The contents of the clipboard    Sample\nuni.getClipboardData({ success: function (res) { console.log(res.data); } }); Tips\r#\r\r After setting the clipboard contents,Mini program platform will automatically pop up light prompts.APP platform keep the same policy to mini program. If you do not want the prompt to pop up on the APP platform,You can use Native.js to operate the clipboard by yourself.It can also be uni.hideToast() set immediately after the clipboard is set.  "}),a.add({id:42,href:'/docs/api/%E8%AE%BE%E5%A4%87/compass/compass/',title:"Compass",section:"设备",content:"uni.onCompassChange(CALLBACK)\r#\r\rMonitor compass data, frequency:5 beats per second,Interface calls automatically start listening,You can cancel listening by using uni.offCompassChange().\nCALLBACK Return Parameter\n   Parameter Type Description     direction Number The degree of the direction we\u0026rsquo;re facing    Tips\n H5 Obtain disk information,It needs to be deployed on HTTPS service,Local Preview (localhost) can still use HTTP.  Sample\nuni.onCompassChange(function (res) { console.log(res.direction); }); uni.offCompassChange(CALLBACK)\r#\r\rCancel listening for compass data.\nTips\n CALLBACK which is passed in when call uni.onCompassChange  uni.startCompass(OBJECT)\r#\r\rStart listening for compass data.\nObject Parameter description\n|Attribute|Type|Default value|Required|Description| |:-|:-|:-|:-| |success|Function|no|Callback function for successful interface call| |fail|Function|no|Callback function for interface call failure| |complete|Function|no|The callback function for the end of the interface call (the call will be executed if it succeeds or fails)|\nSample\nuni.startCompass(); uni.stopCompass(OBJECT)\r#\r\rStop listening for compass data.\nObject Parameter description\n|Attribute|Type|Default value|Required|Description| |:-|:-|:-|:-| |success|Function|no|Callback function for successful interface call| |fail|Function|no|Callback function for interface call failure| |complete|Function|no|The callback function for the end of the interface call (the call will be executed if it succeeds or fails)|\nSample\nuni.stopCompass(); "}),a.add({id:43,href:'/docs/api/%E8%AE%BE%E5%A4%87/contact/contact/',title:"Contact",section:"设备",content:"uni.addPhoneContact(OBJECT)\r#\r\rObject Parameter description\n|Attribute|Type|Default value|Required|Description| |:-|:-|:-|:-| |photoFilePath|String|no|Avatars local file path| |nickName|String|no|nick name| |lastName|String|no|family name| |middleName|String|no|middle name| |firstName|String|yes|name| |remark|String|no|remark| |mobilePhoneNumber|String|no|cell-phone number| |weChatNumber|String|no|WeChat ID| |addressCountry|String|no|Contact Address Country| |addressState|String|no|Contact Address Provinces| |addressCity|String|no|Contact Address City| |addressStreet|String|no|Contact Address Street| |addressPostalCode|String|no|Contact Address postal code| |organization|String|no|corporation| |title|String|no|position| |workFaxNumber|String|no|work fax| |workPhoneNumber|String|no|work phone| |hostNumber|String|no|company tel| |email|String|no|EMail| |url|String|no|website| |workAddressCountry|String|no|Work Address Country| |workAddressState|String|no|Work address province| |workAddressCity|String|no|Work Address City| |workAddressStreet|String|no|Work Address Street| |workAddressPostalCode|String|no|Work address postal code| |homeFaxNumber|String|no|Residential fax| |homePhoneNumber|String|no|Home phone| |homeAddressCountry|String|no|Residential address Country| |homeAddressState|String|no|Residential address province| |homeAddressCity|String|no|Residential address City| |homeAddressStreet|String|no|Residential address Street| |homeAddressPostalCode|String|no|Residential address postal code| |success|Function|no|Callback function for successful interface call| |fail|Function|no|Callback function for interface call failure| |complete|Function|no|The callback function for the end of the interface call (the call will be executed if it succeeds or fails)|\nCallback Result\n   Callback Type errMsg Description     success ok success   cancel fail cancel User cancel operation   fail fail ${detail} The call failed,add the details.    Sample\nuni.addPhoneContact({ nickName: \u0026#39;nickname\u0026#39;, lastName: \u0026#39;lastName\u0026#39;, firstName: \u0026#39;firstName\u0026#39;, remark: \u0026#39;remark\u0026#39;, mobilePhoneNumber: \u0026#39;114\u0026#39;, weChatNumber: \u0026#39;wx123\u0026#39;, success: function () { console.log(\u0026#39;success\u0026#39;); }, fail: function () { console.log(\u0026#39;fail\u0026#39;); } }); Tips\n Mobile OS has strict limits and requirements on address book access.When used in mini programs, it should be noted that the carrier of APP to obtain the address book relevant permissions When package App,Cloud packaging needs to configure permissions and modules in the manifest, while offline packaging needs to configure itself in the native project.  "}),a.add({id:44,href:'/docs/api/%E8%AE%BE%E5%A4%87/ibeacon/ibeacon/',title:"Ibeacon",section:"设备",content:"uni.onBeaconServiceChange(CALLBACK)\r#\r\rMonitor iBeacon service status change events\nCALLBACK Return parameter\n   Attribute Type Description     available boolean is the service currently available   discovering boolean is it currently in search state    uni.onBeaconUpdate(CALLBACK)\r#\r\rMonitor iBeacon device update events\nCALLBACK Return parameter\n   Attribute Type Description     beacons Array List of all iBeacon devices currently found    uni.getBeacons(OBJECT)\r#\r\rGet all iBeacon devices that have been searched\nOBJECT Parameter Description\n   Attribute Type Default value Required Description     success function  no Callback function for successful interface call   fail function  no Callback function for interface call failure   complete function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    success Return parameter description:\n   Attribute Type Description     beacons Array iBeacon Device List    Error\r#\r\r   Error Code Error Message Description     0 ok normal   11000 unsupport unsupport   11001 bluetooth service unavailable Bluetooth service unavailable   11002 location service unavailable Location service unavailable   11003 already start already start    uni.startBeaconDiscovery(OBJECT)\r#\r\rStart searching for nearby iBeacon devices\nOBJECT Parameter Description\n   Attribute Type Default value Required Description     uuids Array＜String＞  yes broadcast uuid list of iBeacon device   ignoreBluetoothAvailable boolean false no Whether to verify the Bluetooth switch, only valid under iOS   success function  no Callback function for successful interface call   fail function  no Callback function for interface call failure   complete function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    Error\r#\r\r   Error Code Error Message Description     0 ok normal   11000 unsupport unsupport   11001 bluetooth service unavailable bluetooth service unavailable   11002 location service unavailable location service unavailable   11003 already start already start    Code sample\r#\r\runi.startBeaconDiscovery({ success(res) { } }) uni.stopBeaconDiscovery(OBJECT)\r#\r\rStop searching for nearby iBeacon devices\nOBJECT Parameter Description\n   Attribute Type Default value Required Description     success function  no callback function for successful interface call   fail function  no callback function for interface call failure   complete function  no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    Error\r#\r\r   Error Code Error Message Description     0 ok normal   11000 unsupport unsupport   11001 bluetooth service unavailable bluetooth service unavailable   11002 location service unavailable location service unavailable   11003 already start already start    IBeaconInfo\r#\r\r   Attribute Type Description     uuid string uuid broadcast by iBeacon device   major string The primary id of the iBeacon device   minor string iBeacon device\u0026rsquo;s secondary id   proximity number enumeration value representing the distance of the device   accuracy number The distance of the iBeacon device   rssi number Indicates the signal strength of the device    Precautions\r#\r\r Failure to enable positioning will affect the normal use of iBeacon.  "}),a.add({id:45,href:'/docs/api/%E8%AE%BE%E5%A4%87/newwork/network/',title:"Network",section:"设备",content:"uni.getNetworkType(OBJECT)\r#\r\rGet the network type.\nObject Parameter description\n|Attribute|Type|Default value|Required|Description| |:-|:-|:-|:-| |success|Function|yes|The interface call was successful,return network type| |fail|Function|no|Callback function for interface call failure| |complete|Function|no|The callback function for the end of the interface call (the call will be executed if it succeeds or fails)|\nsuccess Return parameter description\n   Attribute Description     networkType network type    The legal value of networkType\n   Value Description     wifi wifi network   2g 2g network   3g 3g network   4g 4g network   5g 5g network   ethernet Wired network   unknown An unusual type of network on Android   none none    Sample\nuni.getNetworkType({ success: function (res) { console.log(res.networkType); } }); uni.onNetworkStatusChange(CALLBACK)\r#\r\rMonitor network status changes.uni.offNetworkStatusChange can be use to cancel listening.\nCALLBACK Return Parameter\n   Parameter Type Description     isConnected Boolean Is there a network connection currently available   networkType String network type    Sample\nuni.onNetworkStatusChange(function (res) { console.log(res.isConnected); console.log(res.networkType); }); uni.offNetworkStatusChange(CALLBACK)\r#\r\rNot listen network status changes.\nTips\n CALLBACK is passed when calling uni.onNetworkStatusChange  "}),a.add({id:46,href:'/docs/api/%E8%AE%BE%E5%A4%87/nfc/nfc/',title:"Nfc",section:"设备",content:"NFC\r#\r\rPay Tips to using conditional compile to call codes of different platforms.\n App platform is implemented through Native.js.  "}),a.add({id:47,href:'/docs/api/%E8%AE%BE%E5%A4%87/phone/phone/',title:"Phone",section:"设备",content:"uni.makePhoneCall(OBJECT)\r#\r\rMake a phone call.\nObject Parameter description\n|Attribute|Type|Default value|Required|Description| |:-|:-|:-|:-| |phoneNumber|String|yes|The number to call| |success|Function|no|Callback function for successful interface call| |fail|Function|no|Callback function for interface call failure| |complete|Function|no|The callback function for the end of the interface call (the call will be executed if it succeeds or fails)|\nSample\nuni.makePhoneCall({ phoneNumber: \u0026#39;114\u0026#39; //Just for a sample }); "}),a.add({id:48,href:'/docs/api/%E8%AE%BE%E5%A4%87/systeminfo/info/',title:"Info",section:"设备",content:"uni.getSystemInfo(OBJECT)\r#\r\rGet System Information.\nOBJECT parameter description:\n   Argument Name Type Required Description     success Function yes A successful callback to the interface call   fail Function no The interface calls the callback function that failed   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    success Return parameter description:\n   Attribute Description     brand Mobile phone brand   model Mobile phone models   pixelRatio Device pixel ratio   screenWidth The screen width   screenHeight The screen height   windowWidth Window widths are available   windowHeight Window height can be used   windowTop The top position of the window is available   windowBottom The bottom position of the window is available   language The language in which the Settings are applied   version Engine version number   system Operating system version   platform Client platform,optional value:ios、android   SDKVersion Client base library version   safeArea The safe area in the vertical direction   safeAreaInsets Insert position in the safe area under the vertical direction（2.5.3+）    Tips\n The screen height = Native Navigation Bar height （Including status bar height）+ Window height can be used + Native Tab Bar height windowHeightdo not contain the height of NavigationBar and TabBar App,windowTop height equals height of transparent NavigationBar,windowBottom height equals height of transparent TabBar Height information, should obtain through onReady  safeArea structure\n   Attribute Type Description     left Number The upper left abscissa of the security area   right Number Abscissa at the lower right corner of the security zone   top Number Upper left ordinate of the security area   bottom Number The vertical axis of the lower right corner of the safety zone   width Number The width of the safe area, unit: pixel   height Number The height of the safe zone, unit: pixel    safeAreaInsets structure\n   Attribute Type Description     left Number Left insert position of safe zone   right Number Insert position on the right side of safe zone   top Number Safety zone top insertion position   bottom Number Safety zone bottom insertion position    Sample\nuni.getSystemInfo({ success: function (res) { console.log(res.model); console.log(res.pixelRatio); console.log(res.windowWidth); console.log(res.windowHeight); console.log(res.language); console.log(res.version); console.log(res.platform); } }); uni.getSystemInfoSync()\r#\r\rGet system information synchronization interface.\nsynchronization Return parameter description\n   Attribute Description     brand Mobile phone brand   model Mobile phone models   pixelRatio Device pixel ratio   screenWidth The screen width   screenHeight The screen height   windowWidth Window widths are available   windowHeight Window height can be used   windowTop The top position of the window is available   windowBottom The bottom position of the window is available   statusBarHeight The height of the status bar   language The language in which the Settings are applied   version Engine version number   system Operating system version   platform Client platform,optional value:ios、android   safeArea The safe area in the vertical direction   safeAreaInsets Insert position in the safe area under the vertical direction（2.5.3+）    Tips\n Note the same as getSystemInfo  safeArea structure\n   Attribute Type Description     left Number The upper left abscissa of the security area   right Number Abscissa at the lower right corner of the security zone   top Number Upper left ordinate of the security area   bottom Number The vertical axis of the lower right corner of the safety zone   width Number The width of the safe area, unit: pixel   height Number The height of the safe zone, unit: pixel    safeAreaInsets structure\n   Attribute Type Description     left Number Left insert position of safe zone   right Number Insert position on the right side of safe zone   top Number Safety zone top insertion position   bottom Number Safety zone bottom insertion position    Sample\ntry { const res = uni.getSystemInfoSync(); console.log(res.model); console.log(res.pixelRatio); console.log(res.windowWidth); console.log(res.windowHeight); console.log(res.language); console.log(res.version); console.log(res.platform); } catch (e) { // error } Get device tag\nAndroid has improved user privacy protections,On a lot of new devices,When obtaining information such as IMEI, pop-up box is required for user authorization.IMEI is no longer available for Android 10.\n App iOS Platform: IOS does not provide a API to get IMEI,through plus.device.getInfo you can obtain the unique identity of the device (UUID),In fact, this ID is also a random number concept, similar to the UV calculation of H5. Uninstall APP and reinstall will change.  IOS also has an AD identifier called idfa,It is available through native.js.\n App Android Platform: Android也可以使用UUID,同iOS.  IMEI is available under Android 10,In plus.device.getInfo The International Mobile Device Identity Number (IMEI) can be obtained for the device.Note that many new phones will pop up to ask for user authorization when obtaining IMEI.\nplus.device.getInfo API for HBuilderX is available from HBuilderX 2.0.3+,The old version needs used plus.devide.uuid或plus.device.imei.\nuni.canIUse(String)\r#\r\rDetermine if the application\u0026rsquo;s API, callbacks, parameters, components, etc. are available in the current version.\nString Parameter Descriptiion\nUse ${API}.${method}.${param}.${options} or ${component}.${attribute}.${option} method to call,suchAs:\n ${API} Represents the API name ${method} Represents the invocation mode,有效值为return, success, object, callback ${param} Represents a parameter or return value ${options} Represents the optional value of a parameter ${component} Represents the component name ${attribute} Represents component properties ${option} An optional value representing a component property  Sample\nuni.canIUse(\u0026#39;getSystemInfoSync.return.screenWidth\u0026#39;); uni.canIUse(\u0026#39;getSystemInfo.success.screenWidth\u0026#39;); uni.canIUse(\u0026#39;showToast.object.image\u0026#39;); uni.canIUse(\u0026#39;request.object.method.GET\u0026#39;); uni.canIUse(\u0026#39;live-player\u0026#39;); uni.canIUse(\u0026#39;text.selectable\u0026#39;); uni.canIUse(\u0026#39;button.open-type.contact\u0026#39;); "}),a.add({id:49,href:'/docs/api/%E8%AE%BE%E5%A4%87/systemtheme/theme/',title:"Theme",section:"设备",content:"uni.onThemeChange(CALLBACK)\r#\r\rListen for system theme changes.\nSample\nuni.onThemeChange(function (res) { console.log(res.theme); }); Tips\n In effect by CustomBase V3 compilation support only,reference manifest.json configuration  "}),a.add({id:50,href:'/docs/api/%E8%AE%BE%E5%A4%87/wi-fi/wifi/',title:"Wifi",section:"设备",content:"Wi-Fi\r#\r\rPay Tips to using conditional compile to call codes of different platforms.\n"}),a.add({id:51,href:'/docs/api/%E8%B7%AF%E7%94%B1%E4%B8%8E%E9%A1%B5%E9%9D%A2%E8%B7%B3%E8%BD%AC/router/',title:"Router",section:"路由与页面跳转",content:"uni.navigateTo(OBJECT)\r#\r\rKeep the current page, jump to a page in the app, and use uni.navigateBackit to return to the original page.\nOBJECT parameter description\n   parameter Types of Required Defaults Description Platform difference description     url String Yes  The path of the non-tabBar page in the application that needs to be redirected. Parameters can be added after the path. The parameter and the path are separated by ?, the parameter key and parameter value are connected by =, and different parameters are separated by \u0026amp;; for example,\u0026lsquo;path?key=value\u0026amp;key2=value2\u0026rsquo;, path is the path of the next page, and the onLoad function of the next page can be used Get passed parameters :-   animationType String no pop-in The animation effect of the window display, see: Window animation    animationDuration Number no 300 Duration of window animation, unit is ms App   events Object no  The communication interface between pages is used to monitor the data sent from the opened page to the current page. 2.8.9+ started to support.    success Function no  Callback function for successful interface call    fail Function no  Callback function for interface call failure    complete Function no  The callback function for the end of the interface call (the call will be executed if it succeeds or fails)     object.success callback function\nparameter\nObject res\n   Attributes Types of Description     eventChannel EventChannel Communicate with the opened page    ** Example **\n//On the start page, jump to the test.vue page and pass the parameters uni.navigateTo({ url: \u0026#39;test?id=1\u0026amp;name=uniapp\u0026#39; }); // Accept the parameters on the test.vue page export default { onLoad: function (option) { //Option is of type Object and serializes the parameters passed on the previous page 	console.log(option.id); //Print out the parameters passed on the previous page. 	console.log(option.name); //Print out the parameters passed on the previous page. 	} } // 2.8.9+ support\runi.navigateTo({\rurl: 'pages/test?id=1',\revents: {\r// Adds a listener for the specified event that fetches the data passed to the current page by the opened page\racceptDataFromOpenedPage: function(data) {\rconsole.log(data)\r},\rsomeEvent: function(data) {\rconsole.log(data)\r}\r...\r},\rsuccess: function(res) {\r// Data is sent to the opened page via EventChannel\rres.eventChannel.emit('acceptDataFromOpenerPage', { data: 'test' })\r}\r})\r// Uni. navigate To target page pages/test.vue\ronLoad: function(option) {\rconsole.log(option.query)\rconst eventChannel = this.getOpenerEventChannel()\reventChannel.emit('acceptDataFromOpenedPage', {data: 'test'});\reventChannel.emit('someEvent', {data: 'test'});\r// Listens for the AcceptDataFromEnerPage event to retrieve the data from the previous page sent to the current page via EventChannel\reventChannel.on('acceptDataFromOpenerPage', function(data) {\rconsole.log(data)\r})\r}\rThe URL has a length limit. If the string is too long, it will fail to pass. You can use form communication, global variables , or encodeURIComponentother methods to solve it. The following is encodeURIComponentan example.\n\u0026lt;navigator :url=\u0026#34;\u0026#39;/pages/test/test?item=\u0026#39;+ encodeURIComponent(JSON.stringify(item))\u0026#34;\u0026gt;\u0026lt;/navigator\u0026gt; // Accept the parameters on the test.vue page onLoad: function (option) { const item = JSON.parse(decodeURIComponent(option.item)); } note:\n There are hierarchical restrictions on the page jump path, and you cannot jump to new pages without restrictions Jump to tabBar page can only use switchTab to jump The target page of the routing API must be the vue page registered in pages.json. If you want to open the web url, you can use plus.runtime.openURL or web-view component on the App platform ; window.open for the H5 platform; web-view component for the applet platform (url needs to be in the whitelist of the applet). There is a component ulink.vue in hello uni-app that has encapsulated multiple terminals, you can refer to it.  uni.redirectTo(OBJECT)\r#\r\rClose the current page and jump to a page in the app.\nOBJECT parameter description\n   Parameters Type Required Description     url String Yes The path of the non-tabBar page in the application that needs to be jumped. Parameters can be included after the path. Use? To separate parameter and path, parameter key and parameter value are connected with =, and different parameters are separated by \u0026amp;; such as\u0026rsquo;path?key=value\u0026amp;key2=value2'   success Function no Callback function for successful interface call   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    ** Example **\nuni.redirectTo({ url: \u0026#39;test?id=1\u0026#39; }); note:\n Jump to tabBar page can only use switchTab to jump  uni.reLaunch(OBJECT)\r#\r\rClose all pages and open a page within the app.\nNote: If uni.preloadPage (OBJECT) is called, it does not close, triggering only the lifecycle onHide\nOBJECT parameter description\n   parameter Types of Required Description     url String Yes The path of the in-app page that needs to be jumped to, the path can be followed by parameters. Use? To separate the parameter and the path, the parameter key and the parameter value are connected with =, and the different parameters are separated by \u0026amp;; for example,\u0026lsquo;path?key=value\u0026amp;key2=value2\u0026rsquo;, if the redirected page path is a tabBar page, no parameters   success Function no Callback function for successful interface call   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    Example\nuni.reLaunch({ url: \u0026#39;test?id=1\u0026#39; }); export default { onLoad: function (option) { console.log(option.id); } } Tips：\n The uni.reLaunchprevious page stack will be destroyed after the H5 end is called , but the previous history of the browser cannot be cleared, and it can navigateBacknot be returned at this time . If there is a history, you history.back()can still navigate to other history of the browser by clicking the browser\u0026rsquo;s return button or calling .  uni.switchTab(OBJECT)\r#\r\rJump to the tabBar page and close all other non-tabBar pages.\nNote: If uni.preloadPage (OBJECT) is called, it does not close, triggering only the lifecycle onHide\nOBJECT parameter description\n   parameter Types of Required Description     url String Yes The path of the tabBar page to be jumped to (the page defined in the tabBar field of pages.json), no parameters can be included after the path   success Function no Callback function for successful interface call   fail Function no Callback function for interface call failure   complete Function no The callback function for the end of the interface call (the call will be executed if it succeeds or fails)    Example\npages.json\n{ \u0026#34;tabBar\u0026#34;: { \u0026#34;list\u0026#34;: [{ \u0026#34;pagePath\u0026#34;: \u0026#34;pages/index/index\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;Home page\u0026#34; },{ \u0026#34;pagePath\u0026#34;: \u0026#34;pages/other/other\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;other\u0026#34; }] } } other.vue\nuni.switchTab({ url: \u0026#39;/pages/index/index\u0026#39; }); uni.navigateBack(OBJECT)\r#\r\rClose the current page and return to the previous page or multi-level pages. Can getCurrentPages()get the current stack of pages, the decision needs to return several layers.\nOBJECT parameter description\n   parameter Types of Required Defaults Description Platform difference description     delta Number no 1 The number of pages returned, if delta is greater than the number of existing pages, return to the home page.    animationType String no pop-out The animation effect of window closing, see: window animation App   animationDuration Number no 300 The duration of the window closing animation, in ms App    Example\n// Note: When you call the navigateTo jump, the page that called the method is added to the stack, whereas the redirectTo method is not. See the sample code below  // This is page A uni.navigateTo({ url: \u0026#39;B?id=1\u0026#39; }); // This is page B uni.navigateTo({ url: \u0026#39;C?id=1\u0026#39; }); // NavigateBack in page C returns to page A uni.navigateBack({ delta: 2 }); EventChannel@event-channel\r#\r\r2.8.9+ Support event communication channel between pages\nMethod\nEventChannel.emit(string eventName, any args)\r#\r\rTrigger an event\nstring eventName event name\nany args event parameters\nEventChannel.off(string eventName, function fn)\r#\r\rCancel listening for an event. When the second parameter is given, only the given listening function is cancelled, otherwise all listening functions are cancelled\nstring eventName event name\nfunction fn event monitoring function\nParameters any args trigger event parameters\nEventChannel.on(string eventName, function fn)\r#\r\rKeep listening for an event\nstring eventName event name\nfunction fn event monitoring function\nParameters any args trigger event parameters\nEventChannel.once(string eventName, function fn)\r#\r\rListen to an event once, and fail when triggered\nstring eventName event name\nfunction fn event monitoring function\nParameters any args trigger event parameters\nTips：\n navigateTo, redirectToOnly non-tabBar pages can be opened. switchTabYou can only open tabBarthe page. reLaunch Any page can be opened. Bottom of the page tabBarby the page decision, that is, as long as it is defined as tabBara page, at the bottom there tabBar. You can not App.vuebe the page jump inside. After the H5 page is refreshed, the page stack will disappear and you navigateBackcannot return at this time . If you must return, you can use history.back()other history records to navigate to the browser.  References\n Page routing interception and management, there are many packaged tools in the plug-in market, search routing  Window animation\r#\r\r This API is only supported by App. The applet itself does not support custom animations. H5\u0026rsquo;s window animation can use the conventional single-page animation processing scheme, see the example of single-page animation under H5\n The display/close animation of the window is supported in APIs, components, pages.json, priority: .API = Component \u0026gt; pages.json\nAPI\r#\r\rA valid routing API\n navigateTo navigateBack  uni.navigateTo({ url: \u0026#39;../test/test\u0026#39;, animationType: \u0026#39;pop-in\u0026#39;, animationDuration: 200 }); uni.navigateBack({ delta: 1, animationType: \u0026#39;pop-out\u0026#39;, animationDuration: 200 }); Component\r#\r\rOpen-type valid value\n navigateTo navigateBack  \u0026lt;navigator animation-type=\u0026#34;pop-in\u0026#34; animation-duration=\u0026#34;300\u0026#34; url=\u0026#34;../test/test\u0026#34;\u0026gt;navigator\u0026lt;/navigator\u0026gt; \u0026lt;navigator animation-type=\u0026#34;pop-out\u0026#34; animation-duration=\u0026#34;300\u0026#34; open-type=\u0026#34;navigateBack\u0026#34; \u0026gt;navigator\u0026lt;/navigator\u0026gt; pages.json\r#\r\rThe animation of the window display is configured in pages.json\n\u0026#34;style\u0026#34;: { \u0026#34;app-plus\u0026#34;: { \u0026#34;animationType\u0026#34;: \u0026#34;fade-in\u0026#34;, \u0026#34;animationDuration\u0026#34;: 300 } } Show animation and turn off animation, there will be the default corresponding rules. However, if the type of animation that closes the window is configured through an API or component, the default type is not used.\n   The animation is displayed Turn off the animation Show animation description (turn off animation to the opposite)     slide-in-right slide-out-right The new form enters from the right   slide-in-left slide-out-left The new form enters from the left   slide-in-top slide-out-top The new form enters from the top   slide-in-bottom slide-out-bottom The new form enters from the bottom   pop-in pop-out The new form enters from the left and the old form is squeezed out   fade-in fade-out New forms are displayed gradually from transparent to opaque   zoom-out zoom-in The new form scales from small to large   zoom-fade-out zoom-fade-in New forms zoom in from small to large and appear from transparent to opaque   none none No animation    For detailed window animation instructions, please refer to:\n Animation of the window:AnimationTypeShow Animation of window closure:AnimationTypeClose  note\n For pure nvue projects (render is native), the default entry animation of the window animation is popin, and the return is pop-out. If you want to modify the animation type, you can only modify it through uni.navigateTo API, and the animation type configuration in the component or pages.json is invalid Non-pure nvue project, App side window animation, default entry animation is slider-in-right, default return animation is pop-out When uni-app H5 is embedded in webview, use uni.webView.navigateTo\u0026hellip; to jump to the page  "}),a.add({id:52,href:'/docs/api/%E9%94%AE%E7%9B%98/key/',title:"Key",section:"键盘",content:"uni.hideKeyboard ()\r#\r\rHide soft keyboard\nHide the displayed soft keyboard, if the soft keyboard is not displayed, do nothing.\n"}),a.add({id:53,href:'/docs/api/%E9%A1%B5%E9%9D%A2%E5%92%8C%E7%AA%97%E4%BD%93/subnvue%E5%8E%9F%E7%94%9F%E5%AD%90%E7%AA%97%E4%BD%93/subnvues/',title:"Sub Nvues",section:"页面和窗体",content:"subNvue is the native sub-form of the vue page. The native interface rendered by weex is used as the sub-form of the vue page to overlay the page. It is not a full-screen page, it provides a more powerful and flexible solution for the hierarchical coverage and native interface customization in the vue page of the App platform. It is not a component, but a native child form.\n subNvue is supported since 1.9.10 and only supports app platform\n uni.getSubNVueById(subNvueId)\r#\r\rBy IDacquiring subNVuesexamples of original children form. subNVues configuration\n   parameter Types Description     subNvueId String ID of the native child form    Code example\nconst subNVue = uni.getSubNVueById(\u0026#39;popup\u0026#39;); Return value\r#\r\rReturn a subNVue object\nuni.getCurrentSubNVue()\r#\r\rNvue page code in the form of a subnvue, obtain the current subNVuesinstance of the original Son form.\nCode sample (note that the execution is in the nvue page)\nconst subNVue = uni.getCurrentSubNVue(); Return value\r#\r\rReturn a subNVue object\nList of methods of subNVue object\r#\r\r   method Description     show Show native child form   hide Hide native child form   setStyle Set the style of the native child form    subNVue.show (aniShow, duration, showedCB)\r#\r\rShow native child form\n   parameter Types Defaults Description     aniShow String auto Display the animation effect of the native child form. If the window animation type is not specified, the default value \u0026ldquo;auto\u0026rdquo; is used, that is, the animation effect of the last displayed window is automatically selected. If it has not been displayed before, the \u0026ldquo;none\u0026rdquo; animation effect is used. See animation types for details   duration Number 600 The animation duration of the native child form is displayed in ms. If it is not set, the default window animation time is 600ms.   showedCB Function  The callback function for display completion. The callback function is triggered when the specified native subform display animation is completed, and the callback function is also triggered when the window has no animation effect (such as \u0026ldquo;none\u0026rdquo; animation effect).    Code example\nsubNVue.show(\u0026#39;slide-in-left\u0026#39;,200,()=\u0026gt;{ console.log(\u0026#39;subNVue The primary child window displayed successfully\u0026#39;); }) subNVue.hide (aniShow,duration)\r#\r\rHide native child form\n   parameter Types of Defaults Description     aniShow String auto Hide the animation effect of the native child form. If the window animation type is not specified, the default value \u0026ldquo;auto\u0026rdquo; is used, that is, the animation effect of the last displayed window is automatically selected. If it has not been displayed before, the \u0026ldquo;none\u0026rdquo; animation effect is used. See animation types for details   duration Number 600 The animation duration of the hidden native sub-form is in ms. If it is not set, the default window animation time is 600ms.    Code example\nsubNVue.hide(\u0026#39;slide-out-left\u0026#39;,200); subNVue.setStyle (style)\r#\r\rSet the style of the native child form\n   parameter Types of Description     style Object The style of the native child form    The style of the native child form\n   Attributes Types of Defaults description     position String absolute The layout position of the native child form. The layout position determines the positioning method of the native child form in the parent window. Possible values: \u0026ldquo;static\u0026rdquo;, the native subform is positioned normally on the page, if the page has a scroll bar, it will scroll with the window content; \u0026ldquo;absolute\u0026rdquo;, the native subform is absolutely positioned on the page, if the page has a scroll bar, it will not follow the window Content scrolling; \u0026ldquo;dock\u0026rdquo;, the native child form is docked in the page, and the docking position is determined by the value of the dock property. The default value is \u0026ldquo;absolute\u0026rdquo;.   though String bottom The docking method of the native child form takes effect only when the native child form’s \u0026ldquo;position\u0026rdquo; property value is set to \u0026ldquo;dock\u0026rdquo;, the value can be: \u0026ldquo;top\u0026rdquo;, the native child form is docked at the top of the page; \u0026ldquo;bottom\u0026rdquo;, native The subform is docked at the bottom of the page; \u0026ldquo;right\u0026rdquo;, the native subform is docked on the right side of the page; \u0026ldquo;left\u0026rdquo;, the native subform is docked on the left side of the page. The default value is \u0026ldquo;bottom\u0026rdquo;.   mask HexColor rgba (0,0,0,0.5) The mask layer of the native subform will only take effect when the \u0026ldquo;type\u0026rdquo; attribute value of the native subform is set to \u0026ldquo;popup\u0026rdquo;. Values are: rgba format string, which defines the solid color mask layer style, such as \u0026ldquo;rgba(0 ,0,0,0.5)\u0026rdquo;, which means black translucent;   width String 100% The width of the native child form supports percentages and pixel values. The default is 100%. When the width attribute value is not set, the left and right attribute values can be set at the same time to change the default width of the window.   height String 100% The height of the native child form, supports percentage, pixel value, the default is 100%. When the height attribute value is not set, the top and bottom attribute values are given priority to calculate the height of the native child form.   top String 0px The vertical downward offset of the native child form. It supports percentage and pixel value. The default value is 0px. When the top attribute value is not set, the bottom and height attribute values are first used to calculate the top position of the native child form.   bottom String  The vertical upward offset of the native child form supports percentages and pixel values. The default value has no value (automatically calculated based on the top and height attribute values). When the top and height values are set at the same time, this attribute value is ignored; when the height value is not set, the height of the native child form can be determined by the top and bottom attribute values.   left String 0px The horizontal leftward offset of the native child form. It supports percentage and pixel value. The default value is 0px. When the left attribute value is not set, the left position of the native child form is calculated by the right and width attribute values first.   right String  The horizontal offset of the native child form to the right, supports percentages, pixel values, and no value by default (automatically calculated based on the left and width attribute values). When the left and width values are set, this property value is ignored; when the width value is not set, the width of the native child form can be determined by the left and bottom property values.   margin String  The margin of the native child form is used to locate the position of the native child form. It supports auto, which means centering. If left, right, top, bottom are set, the corresponding margin value is invalid.   zindex Number  The stacking order value of the windows of the native child form. A window with a higher stacking order will always be in front of a window with a lower stacking order, and a window with the same stacking order will be in front after the show method is called.    Code example\nsubNVue.setStyle({ \u0026#34;position\u0026#34;: \u0026#34;absolute\u0026#34;, //Except popup, refer to the 5+ WebView Position document for value fields 	\u0026#34;width\u0026#34;: \u0026#34;50%\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;50%\u0026#34;, \u0026#34;left\u0026#34;:\u0026#34;20px\u0026#34;, \u0026#34;top\u0026#34;:\u0026#34;100px\u0026#34; }) subNVue.postMessage(OBJECT)\r#\r\rSend a message, this communication method is outdated, please use uni.$emitfor communication\nCode example\nconst subNVue = uni.getSubNVueById(\u0026#39;subNvue\u0026#39;); subNvue.postMessage({ id:\u0026#39;1\u0026#39; name:\u0026#39;subNvues\u0026#39; }) subNVue.onMessage(CallBack)\r#\r\rMonitor messages, this communication method is outdated, please use uni.$onfor communication\nCode example\nconst subNVue = uni.getSubNVueById(\u0026#39;subNvue\u0026#39;); subNvue.onMessage(function(data){ console.log(\u0026#39;Listens for messages from the page\u0026#39; + JSON.stringify(data)); })   Animation type\r#\r\rThere will be default corresponding rules for displaying animation and closing animation. However, if the close animation type of the native child form through the API, the default type will not be used.\n   Show animation Close animation Show animation description (the opposite of closing animation)     slide-in-right slide-out-right The new form enters from the right   slide-in-left slide-out-left Enter the new form from the left   slide-in-top slide-out-top The new form enters from the top   slide-in-bottom slide-out-bottom The new form enters from the bottom   fade-in fade-out The new form is gradually displayed from transparent to opaque   zoom-out zoom-in The new window zooms from small to large   zoom-fade-out zoom-fade-in The new window is gradually enlarged from small to large and gradually displayed from transparent to opaque   pop-in pop-out The new form enters from the left, and the old form is squeezed out   none none No animation    For detailed window animation instructions, please refer to:\n Animation displayed in the window: AnimationTypeShow Animation of window closing: AnimationTypeClose  Precautions\n Learn more subNVueoriginal purposes of the children of the form, please read the subNVues original form twins Development Guide In the interface-interface-native sub-form of hello uni-app, there are complete subNVue examples, including the native navigation bar with gradient, the side-slide menu that can cover the map, the pop-up that can be popped from the top, and the video Scrolling message list Each subNVuepage must be registered in pages.json in. If you need a global pop-up window, you can also directly pop up the nvue page subNVueMore powerful than the cover-view and plus.nativeObj.view, also take up more memory, in order to ensure a better performance experience, a vue pages do not load too much subNVuechild form, recommended control in less than three    "}),a.add({id:54,href:'/docs/api/%E9%A1%B5%E9%9D%A2%E5%92%8C%E7%AA%97%E4%BD%93/%E9%A1%B5%E9%9D%A2/window/',title:"Window",section:"页面和窗体",content:"getCurrentPages()\r#\r\rgetCurrentPages() The function is used to obtain the instance of the current page stack, which is given in the order of the stack in the form of an array, the first element is the home page, and the last element is the current page.\nNote: It getCurrentPages() is only used to display the page stack. Please do not modify the page stack to avoid causing page status errors.\nList of method attributes for each page instance:\n   method description Platform description     page.$getAppWebview() Get the webview object instance of the current page App   page.route Get the route of the current page     Tips：\n navigateTo, redirectToOnly non-tabBar pages can be opened. switchTabYou can only open tabBarthe page. reLaunch Any page can be opened. Bottom of the page tabBarby the page decision, that is, as long as it is defined as tabBara page, at the bottom there tabBar. You can not App.vuebe the page jump inside.  $getAppWebview()\r#\r\runi-appIn getCurrentPages()page obtained in a built-in method $getAppWebview()can be an object instance of the current webview, webview order to achieve greater control. In html5Plus, plus.webview has powerful control capabilities.\nBut the uni-appframework has its own window management mechanism, please do not create and destroy the webview yourself. If you need to overwrite the subform, please use the native subform subNvue.\nNote: This method is only supported by App\nExample:\nGet the object instance of the current page webview\nexport default { data() { return { title: \u0026#39;Hello\u0026#39; } }, onLoad() { // #ifdef APP-PLUS  const currentWebview = this.$scope.$getAppWebview(); // this object is equivalent to the html5plus plus. Webview. CurrentWebview (). In uni - app directly using the vue page plus. Webview. CurrentWebview () is invalid, the v3 compilation mode using this. $mp. Page $getAppWebview ()  currentWebview.setBounce({position:{top:\u0026#39;100px\u0026#39;},changeoffset:{top:\u0026#39;0px\u0026#39;}}); // dynamically reset the bounce effect  // #endif  } } Get the object instance of the webview of the specified page\ngetCurrentPages()You can get all the page objects, and then according to the array, you can get the specified page webview object\nvar pages = getCurrentPages(); var page = pages[pages.length - 1]; // #ifdef APP-PLUS var currentWebview = page.$getAppWebview(); console.log(currentWebview.id);//Get the ID of the current WebView console.log(currentWebview.isVisible());//Query whether the current WebView is visible ); // #endif "}),a.add({id:55,href:'/docs/api/%E9%A1%B5%E9%9D%A2%E5%92%8C%E7%AA%97%E4%BD%93/%E9%A1%B5%E9%9D%A2%E9%80%9A%E8%AE%AF/communication/',title:"Communication",section:"页面和窗体",content:"uni.$emit(eventName,OBJECT)\r#\r\rTo trigger a global custom event, additional parameters will be passed to the listener callback function.\n   Attributes Types description     eventName String Event name   OBJECT Object Additional parameters carried by the trigger event    Code example\nuni.$emit(\u0026#39;update\u0026#39;,{msg:\u0026#39;Page updates\u0026#39;}) uni.$on(eventName,callback)\r#\r\rMonitor global custom events, the event uni.$emitis triggered, the callback function receives an incoming event trigger function parameters.\n   Attributes Types description     eventName String Event name   callback Function Event callback function    Code example\nuni.$on(\u0026#39;update\u0026#39;,function(data){ console.log(\u0026#39;Listen for an event from UPDATE, with parameter MSG as:\u0026#39; + data.msg); }) uni.$once(eventName,callback)\r#\r\rMonitor global custom events, the event uni.$emitis triggered, but the trigger once only, remove the listener after the first trigger.\n   Attributes Types description     eventName String Event name   callback Function Event callback function    Code example\nuni.$once(\u0026#39;update\u0026#39;,function(data){ console.log(\u0026#39;Listen for an event from UPDATE, with parameter MSG as:\u0026#39; + data.msg); }) uni.$off([eventName, callback])\r#\r\rRemove the global custom event listener.\n   Attributes Types description     eventName Array＜String＞ Event name   callback Function Event callback function    Tips\n If uni.$off has no parameters, remove all event listeners at the App level; If only the event name (eventName) is provided, all listeners corresponding to the event name will be removed; If both an event and a callback are provided, only the listener of this event callback is removed; The provided callback must be the same as the callback of $on to remove the listener of this callback;  Code example\n$emit, $on, $offCommonly used in the cross-page, cross-component communication, demonstrated here on the same page in order to facilitate\n\u0026lt;template\u0026gt; \u0026lt;view class=\u0026#34;content\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;data\u0026#34;\u0026gt; \u0026lt;text\u0026gt;{{val}}\u0026lt;/text\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;button type=\u0026#34;primary\u0026#34; @click=\u0026#34;comunicationOff\u0026#34;\u0026gt;The end of the listening\u0026lt;/button\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { val: 0 } }, onLoad() { setInterval(()=\u0026gt;{ uni.$emit(\u0026#39;add\u0026#39;, { data: 2 }) },1000) uni.$on(\u0026#39;add\u0026#39;, this.add) }, methods: { comunicationOff() { uni.$off(\u0026#39;add\u0026#39;, this.add) }, add(e) { this.val += e.data } } } \u0026lt;/script\u0026gt; \u0026lt;style\u0026gt; .content { display: flex; flex-direction: column; align-items: center; justify-content: center; } .data { text-align: center; line-height: 40px; margin-top: 40px; } button { width: 200px; margin: 20px 0; } \u0026lt;/style\u0026gt;  Precautions  The events triggered by uni.$emit, uni.$on, uni.$once, uni.$off are all App global level, across any component, page, nvue, vue, etc. When using, pay attention to destroy event listeners in time, for example, uni.$on registration listeners in onLoad of the page, uni.$off removal in onUnload, or one-time events, directly use uni.$once listeners    "}),a.add({id:56,href:'/docs/api/%E9%A1%B5%E9%9D%A2%E5%92%8C%E7%AA%97%E4%BD%93/%E9%A1%B5%E9%9D%A2%E9%80%9A%E8%AE%AF/prompt/',title:"Prompt",section:"页面和窗体",content:"uni.showToast(OBJECT)\r#\r\rDisplays a message prompt box.\n**OBJECT Parameter description **\n   parameter name Types Required Description     title String Yes The length of the prompt is related to the value of icon.   icon String no Icon, effective value see below.   duration Number no The prompt delay time, in milliseconds, default: 1500   success Function no Interface calls a successful callback function   fail Function no Interface calls a failed callback function   complete Function no Callback function at the end of interface call (executed on success or failure)    Icon Value description\n   Value Description     success When the success icon is displayed, the title text can be displayed up to 7 characters in length. The default value   loading Display the loading icon. At this time, the title text can display up to 7 characters in length.   none No icon is displayed. At this time, title text can be displayed in \u0026lsquo;small program\u0026rsquo; at most two lines, while \u0026lsquo;App\u0026rsquo; only supports single-line display.    Sample\nuni.showToast({ title: \u0026#39;Title\u0026#39;, duration: 2000 }); Description of position value (for App only)\n   Value Description     top Display on top   center Display in center   bottom Display on bottom    uni.hideToast()\r#\r\rHide the message prompt box.\nSample\nuni.hideToast(); uni.showLoading(OBJECT)\r#\r\rLoading prompt box is displayed.\nOBJECT Parameters description\n   parameter name Types Required Description     title String Yes The text content of the prompt is displayed below the Loading   success Function no Interface calls a successful callback function   fail Function no Interface calls a failed callback function   complete Function no Callback function at the end of interface call (executed on success or failure)    Sample\nuni.showLoading({ title: \u0026#39;Loading\u0026#39; }); uni.hideLoading()\r#\r\rHide the Loading prompt box.\nSample\nuni.showLoading({ title: \u0026#39;Loading\u0026#39; }); setTimeout(function () { uni.hideLoading(); }, 2000); uni.showModal(OBJECT)\r#\r\rDisplay modal pop-ups, which can have only one OK button, or both OK and cancel buttons. It\u0026rsquo;s like an API that integrates HTML: alert, confirm.\nOBJECT Parameters description\n   parameter name Types Required Description     title String no Title of the prompt   content String no Content of the prompt   showCancel Boolean no Whether or not to display the showCancel. Default is true   cancelText String no Cancel button text, default \u0026ldquo;cancel\u0026rdquo;, up to 4 characters   confirmText String no The text of the confirm button, default to \u0026ldquo;Confirm\u0026rdquo;, is up to 4 characters   success Function no Interface calls a successful callback function   fail Function no Interface calls a failed callback function   complete Function no Callback function at the end of interface call (executed on success or failure)    **success returns parameter description **\n   parameter name Types Description     confirm Boolean True indicates that the user clicked the OK button   cancel Boolean If true, it means that the user has clicked Cancel (used in Android system to distinguish between clicking the mask to close or clicking the Cancel button to close)    Sample\nuni.showModal({ title: \u0026#39;Prompt\u0026#39;, content: \u0026#39;This is a modal popover\u0026#39;, success: function (res) { if (res.confirm) { console.log(\u0026#39;The user hits OK\u0026#39;); } else if (res.cancel) { console.log(\u0026#39;The user hits Cancel\u0026#39;); } } }); Note\n When the pop-up is used at the same time to confirm cancel, it should be noted that the position of the confirm cancel button is different on different platforms. In WeChat, H5, the confirm button is on the right by default. In the App, the iOS Confirm button is on the right by default, while the Android Confirm button is on the left. The reason for this difference is that uni. ShowModa calls natively provided pop-ups on apps and applets, and the native platform\u0026rsquo;s policy is different. If you need to adjust, you can control the text of the button by yourself, that is, the text of the \u0026ldquo;OK\u0026rdquo; button can actually be set to \u0026ldquo;cancel\u0026rdquo;. When showModal does not meet the requirements, it can develop component pop-up frames by itself. There are many custom pop-up components in the plug-in market. Note that on non-H5 platforms, front-end components cannot cover native components (such as maps and videos), and masks cannot cover Tabbar and NavigationBar. If you want to cover the native components or mask tabbar, App side is recommended to use subNvue. There is a difference between the performance of the real program and the simulator. The title and content of the real program are required  uni.showActionSheet(OBJECT)\r#\r\rThe action menu pops up from the bottom\nOBJECT Parameters description\n   parameter name Types Required Description     success Function no Interface calls a successful callback function, See the return parameter description for details   fail Function no Interface calls a failed callback function   complete Function no Callback function at the end of interface call (executed on success or failure)    Popover value description (App only)\n   parameter name Types Description     top Number Indicates the coordinates of the region. When using the native NavigationBar, the height of the NavigationBar is generally added   left Number Indicating area coordinates   width Number Indicated area width   height Number Indicated area height    SUCCESS returns parameters description\n   parameter name Types Description     tapIndex Number Buttons that the user clicks, in top to bottom order, starting at 0    Sample\nuni.showActionSheet({ itemList: [\u0026#39;A\u0026#39;, \u0026#39;B\u0026#39;, \u0026#39;C\u0026#39;], success: function (res) { console.log(\u0026#39;Select the\u0026#39; + (res.tapIndex + 1) + \u0026#39;button\u0026#39;); }, fail: function (res) { console.log(res.errMsg); } }); "}),a.add({id:57,href:'/docs/%E6%9E%B6%E6%9E%84/vue%E6%95%99%E7%A8%8B/api/vue-api/',title:"Vue API",section:"Vue教程",content:"Global configuration\r#\r\r   Vue global configuration description H5 App side     Vue.config.silent Cancel all logging and warning Vue √ √   Vue.config.optionMergeStrategies Custom options into policy details √ √   Vue.config.errorHandler Uncaught error handler specified component during rendering and viewing details √ √   Vue.config.warnHandler Vue to run when a warning given to a custom handler details √ √   Vue.config.ignoredElements Vue must ignore the custom elements outside the Vue\u0026rsquo;s details √ √   Vue.config.productionTip Set to false to prevent vue generate production tips on startup details √ √    Global API\r#\r\r   Vue Global API description H5 App side     Vue.extend Use the basic Vue constructor to create a \u0026ldquo;subclass\u0026rdquo; details √ √   View.set Add a property to the responsive object and ensure that the new property is also responsive, and trigger a view update details √ √   Vue.delete Delete the property of the object. If the object is responsive to ensure delete trigger update view details √ √   View.directive Register or obtain global directive details √ √   Vue.filter Register or obtain global filters Details √ √   Vue.component Register or get global components. Registration will automatically use the given name of the component\u0026rsquo;s id details √ √   Vue.use Vue.js plug-in installation details √ √   Vue.mixin A mixed global registration, all created after the impact of every registered Vue instance details √ √   Vue.version Providing a string version of Vue installation details √ √    Options\r#\r\r   Vue options description H5 App side     data Vue instance of a data object details √ √   props props can be an array or an object, for receiving data from the parent component details √ √   propsData Pass props when creating an instance. The main role is to facilitate the testing details √ √   computed Calculated attribute will be mixed into the Vue in Example details √ √   methods It will be incorporated into the methods in Example Vue details √ √   watch An object key is an expression of the need to observe the value of the callback function corresponding details √ √   directives Examples of useful instructions comprising Vue hash table Details √ √   filters Examples of useful filter comprising Vue hash table Details √ √   components Examples of useful components comprising Vue hash table Details √ √   parent Parent instance of the specified instance has been created to establish a parent-child relationship between the two details √ √   mixins Option to receive a mixed array of objects details √ √   extends Another component allows declaring an extension details √ √   provide/inject A dependent component allows an ancestor to all future generations injection, no matter how deep the component level, and always take effect in its upstream and downstream relationships established time details √ √   name Allow the component template calls itself recursively details √ √   model Allows a custom component to customize prop and event details when using v-model √ √   inheritAttrs inheritAttrs attribute default value is true, indicating that allows components of the root node contains the properties inherited $ attrs details √ √    Instance attributes\r#\r\r   Vue instance properties description H5 App side     vm.$data Examples of data objects viewed Vue details √ √   vm.$props Current props object components received details √ √   vm.$options Vue initialization options for the current instance details √ √   vm.$parent Parent instance, if the current instance of any details √ √   vm.$root Vue current component tree root instance details √ √   vm.$children The immediate children of the current instance details √ √   vm.$slots Slot for accessing content is distributed details √ x   vm.$scopedSlots Scope slot for accessing details √ √   vm.$refs An object that holds the details of all DOM elements and component instances that have registered ref attribute √ √    Instance method\r#\r\r   Instance method description H5 App side     vm.$watch() A change in expression or function observed in the example of calculation result Vue details √ √   vm.$set() This is the alias of the global Vue.set details √ √   vm.$delete() This is the alias of the global Vue.delete details √ √   vm.$on() Custom event listeners on the current instance details √ √   vm.$once() Listening on a custom event, but only triggered once details √ √   vm.$off() Remove custom event listeners details √ √   vm.$emit() Examples of trigger events on the current details √ √   vm.$mount() Examples of a manually mount unmounted Details √ x   vm.$forceUpdate() Examples of forced re-render Vue details √ √   vm.$nextTick() After the execution delayed until next update cycle callback DOM details √ √   vm.$destroy() An example of the complete destruction of details √ √    Template directive\r#\r\r   Vue instructions description H5 App side     v-text Update the textContent details of the element √ √   v-html Update the innerHTML details of the element √ √   v-show According truth value of the expression, display CSS attribute switching elements Details √ √   v-if According truthiness value of an expression to conditionally render elements Details √ √   v-else Add \u0026ldquo;else block\u0026rdquo; details for v-if or v-else-if √ √   v-else-if Represents the \u0026ldquo;else if block\u0026rdquo; of v-if. You can be chained call details √ √   v-for Render Elements or multiple template block data based on the source details √ √   v-on Bind event listeners details √ √   v-bind Dynamically bind one or more attribute, or a component to prop expressions details √ √   v-model Create a two-way binding controls on the form or component details √ √   v-pre Skip the compilation process this element and its child elements Details √ √   v-once Only render elements and components once details √ √    Special attributes\r#\r\r   Special attributes description H5 App side     key Mainly used in Vue\u0026rsquo;s virtual DOM algorithm to identify the details of VNodes when comparing new and old nodes √ √   ref ref is used to reference the element or sub-component registration information details √ √   is For dynamic components and template-based restrictions in the DOM to work details √ √    Built-in components\r#\r\r   Built-in components description H5 App side     component Render a \u0026ldquo;meta component\u0026rdquo; as a dynamic component. According to the value is to determine which components are rendered details √ √   slot As a content distribution among the component template slot details √ √    Global variable\r#\r\rThe way to implement global variables needs to follow the development specifications of Vue single file mode.\nOther configuration\r#\r\rWhen a VUE component is compiled to a small program platform, it will be compiled as a component of the corresponding platform. Some small program platforms support options (refer to the Custom Components section of the corresponding small program platform documentation for specific options). In general, it is acceptable by default.\nexport default { props: [\u0026#39;data\u0026#39;], data(){ return { } }, options: { // Options in the WeChat applet  multipleSlots: true, // Enable multi-slot support in the option at component definition time, enabled by default  styleIsolation: \u0026#34;isolated\u0026#34;, // Start style isolation. Configuration may be required when you use page customization components where you want the parent to influence the style of the child components. Specific configuration options refer to: WeChat applet custom component style  addGlobalClass: true, // Represents that the page style affects the custom component, but the style specified in the custom component does not affect the page. This option is equivalent to setting style Isolation: apply-shared  virtualHost: true, // Set the custom node to be virtual, closer to how the Vue component behaves. We don\u0026#39;t want the node of the custom component to be able to set the style, respond to the Flex layout, etc. Instead, we want the first layer node inside the custom component to respond to the Flex layout or the style to be completely determined by the custom component itself  } } Common problem\r#\r\r1. How to get the data passed on the previous page\r#\r\rObtained in onLoad, the parameter of onLoad is the data passed by other pages to open the current page.\n//store.js  import Vue from \u0026#39;vue\u0026#39; import Vuex from \u0026#39;vuex\u0026#39; Vue.use(Vuex) const store = new Vuex.Store({ state: {...}, mutations: {...}, actions: {...} }) export default store //main.js  ... import store from \u0026#39;./store\u0026#39; Vue.prototype.$store = store const app = new Vue({ store,... }) ... //test.vue When using:  import {mapState,mapMutations} from \u0026#39;vuex\u0026#39; 3. How to catch onError of app\r#\r\rSince onError is not a complete life cycle, only a method of catching errors is provided, and a callback function named onError can be added to the root component of the app. as follows:\nexport default { // Only apps have an onLaunch lifecycle  onLaunch () { // ...  }, // capture app error  onError (err) { console.log(err) } } 4. Component property settings do not take effect\r#\r\rWhen some properties are repeatedly set to the same value, they are not synchronized to the View layer. For example, every time you set the scroll-top property of a scroll-view component to 0, it only gets back to the top the first time. This is due to the props unidirectional data flow feature. When the actual value of scroll top inside the component changes, the binding properties do not change with it.\nThere are two solutions (take the scroll-view component as an example):\n\\1. Monitor the scroll event, record the value of the internal change of the component, and set the current value of the record before setting the new value\n\u0026lt;scroll-view scroll-y=\u0026#34;true\u0026#34; :scroll-top=\u0026#34;scrollTop\u0026#34; @scroll=\u0026#34;scroll\u0026#34;\u0026gt;\u0026lt;/scroll-view\u0026gt; export default { data() { return { scrollTop: 0, old: { scrollTop: 0 } } }, methods: { scroll: function(e) { this.old.scrollTop = e.detail.scrollTop }, goTop: function(e) { this.scrollTop = this.old.scrollTop this.$nextTick(function() { this.scrollTop = 0 }); } } } \\2. Monitor the scroll event, get the value of the internal change of the component, and update its binding value in real time\n\u0026lt;scroll-view scroll-y=\u0026#34;true\u0026#34; :scroll-top=\u0026#34;scrollTop\u0026#34; @scroll=\u0026#34;scroll\u0026#34;\u0026gt;\u0026lt;/scroll-view\u0026gt; export default { data() { return { scrollTop: 0, } }, methods: { scroll: function(e) { // If using this method, add your own anti-shake treatment this.scrollTop = e.detail.scrollTop }, goTop: function(e) { this.scrollTop = 0 } } } The second solution may cause jitter in some components, and the first solution is recommended .\n"}),a.add({id:58,href:'/docs/%E6%9E%B6%E6%9E%84/vue%E6%95%99%E7%A8%8B/%E5%9F%BA%E7%A1%80/vue-basics/',title:"Vue Basics",section:"Vue教程",content:"Introduction\r#\r\rWhat is Vue.js\nVue (pronounced /vjuː/, similar to view) is a progressive framework for building user interfaces. Vue is designed to be applied layer by layer from the bottom up.\nVue.js uses HTML-based template syntax, allowing developers to declaratively bind the DOM to the data of the underlying Vue instance. All Vue.js templates are legal HTML, so they can be parsed by browsers and HTML parsers that follow the specification.\nIn the underlying implementation, Vue compiles the template into a virtual DOM rendering function. Combined with the response system, Vue can intelligently calculate how many components need to be re-rendered and minimize the number of DOM operations.\nThe core of Vue.js is a system that allows the use of concise template syntax to declaratively render data into the DOM. It only focuses on the view layer and is easy to use. Everything is responsive.\nVue development advantages over traditional js\r#\r\rIn traditional development, when the native JavaScript DOM manipulation function is used to frequently manipulate the DOM, the browser must constantly render the new DOM tree, causing the page to look very stuck.\nVue is a single-page application, which makes the page partially refresh, without having to request all the data and DOM every time you jump to the page, which greatly speeds up the access speed and improves the user experience.\nAdvantages of vue:\n Lightweight Progressive Framework Separation of view, data and structure Responsive two-way data binding Componentization Virtual DOM Fast running speed, easy to use Easy to integrate with third-party libraries or existing projects  File type changes\r#\r\r It used to be .html files, development was also html, and running was also html. Now it is a .vue file, and development is a vue. After compilation, the runtime has become a js file.  Changes in the code structure within the file\r#\r\r Before a htmllarge node, there scriptand stylenodes;  \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;\u0026lt;/title\u0026gt; \u0026lt;script type=\u0026#34;text/javascript\u0026#34;\u0026gt; \u0026lt;/script\u0026gt; \u0026lt;style type=\u0026#34;text/css\u0026#34;\u0026gt; \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Now templateis a node for writing tag components, scriptand styleis a node in parallel, that is, there are three-level node.  \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; Note that there must be one view and only one root view. All the content is written under this view. \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { } \u0026lt;/script\u0026gt; \u0026lt;style\u0026gt; \u0026lt;/style\u0026gt; Changes in the way external files are cited\r#\r\r In the past, external js and css were introduced through script src and link href;  \u0026lt;script src=\u0026#34;js/jquery-1.10.2.js\u0026#34; type=\u0026#34;text/javascript\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;link href=\u0026#34;css/bootstrap.css\u0026#34; rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34;/\u0026gt;  Now it is written in es6, importimport external js module (note that it is not a file) or css;  js needs to come in and become an object .\n\u0026lt;script\u0026gt; var util = require(\u0026#39;../../../common/util.js\u0026#39;); //Require this js module  var formatedPlayTime = util.formatTime(playTime); //Call the method of the JS module  \u0026lt;/script\u0026gt; In this util.js, the prior should functionmethod for encapsulating as an object\nfunction formatTime(time) { return time;//There\u0026#39;s no logic here  } module.exports = { formatTime: formatTime } In addition, Vue supports component import, which makes it easier to encapsulate a library that includes interface, js, and styles .\nComponent/label changes\r#\r\rIt used to be html tags, for example \u0026lt;div\u0026gt;, now it is a small program component, for example \u0026lt;view\u0026gt;.\nSo what is the difference between a label and a component, isn\u0026rsquo;t it all surrounded by angle brackets in English?\n In fact, tags are an old concept. Tags are built-in browsers. But the components can be freely expanded. Similarly, you can encapsulate a piece of js into a function or module, and you can also encapsulate a ui control into a component.  js changes\r#\r\r In the previous DOM operation, if you want to change the display content of a DOM element, such as the display text of a view: set the id to the view, then get the DOM element through the selector in js, and then perform assignment operations through js to modify the DOM element Attribute or value.  \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;script type=\u0026#34;text/javascript\u0026#34;\u0026gt; document.addEventListener(\u0026#34;DOMContentLoaded\u0026#34;,function () { document.getElementById(\u0026#34;spana\u0026#34;).innerText=\u0026#34;456\u0026#34; }) function changetextvalue () { document.getElementById(\u0026#34;spana\u0026#34;).innerText=\u0026#34;789\u0026#34; } \u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;span id=\u0026#34;spana\u0026#34;\u0026gt;123\u0026lt;/span\u0026gt; \u0026lt;button type=\u0026#34;button\u0026#34; onclick=\u0026#34;changetextvalue()\u0026#34;\u0026gt;Changed to 789\u0026lt;/button\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  The current practice is the binding mode of vue, bind a js variable to this DOM element, modify the value of the js variable in the script, the DOM will automatically change, and the page will automatically update the rendering.  The front end uses the [MVVM](short for Model-View-ViewModel) mode. Simply put, Model: represents the data model, View: only focuses on view UI processing, and ViewModel: only processes business and data. Its core is the VM in MVVM, which is the ViewModel. ViewModel is responsible for connecting View and Model to ensure the consistency of views and data. This lightweight architecture makes front-end development more efficient and convenient, greatly reducing the number of lines of code, and better differential rendering performance.    \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;text\u0026gt;{{textvalue}}\u0026lt;/text\u0026gt;\u0026lt;!-- This demonstrates the binding of component values--\u0026gt; \u0026lt;button :type=\u0026#34;buttontype\u0026#34; @click=\u0026#34;changetextvalue()\u0026#34;\u0026gt;Changed to 789\u0026lt;/button\u0026gt;\u0026lt;!-- This demonstrates the binding of properties and events --\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { textvalue:\u0026#34;123\u0026#34;, buttontype:\u0026#34;primary\u0026#34; }; }, onLoad() { this.textvalue=\u0026#34;456\u0026#34;// change the value of textValue, 123 becomes 456 and 123 is not displayed  }, methods: { changetextvalue() { this.textvalue=\u0026#34;789\u0026#34;//you change the value of textValue, and the page automatically refreshes to 789  } } } \u0026lt;/script\u0026gt; Template syntax\r#\r\rInterpolation\r#\r\rThe most common form of data binding is text interpolation:\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view\u0026gt;Message: {{ msg }}\u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { msg: \u0026#39;Hello Vue!\u0026#39; } } } \u0026lt;/script\u0026gt; The content in {{msg}} will be replaced with the value of msg on the corresponding data object. Whenever the msg on the bound data object changes, the content at the interpolation point will be updated.\ninstruction\r#\r\r[Watch this video explanation]\nInstructions are special attributes prefixed with v-.\n The value of the directive attribute is expected to be a single JavaScript expression (v-for is an exception). The function of the instruction is that when the value of the expression changes, the collateral effect produced by it will act on the DOM responsively. Some commands can receive a \u0026ldquo;parameter\u0026rdquo;, which is indicated by a colon (:) after the command name.  v-bind\r#\r\rDynamically bind one or more attributes, or a component propto the expression.\n v-bind is abbreviated as \u0026lsquo;:\u0026rsquo; In binding propupon, propit must be declared in the sub-assembly. You can specify different binding types with modifiers.  \u0026lt;image v-bind:src=\u0026#34;imgUrl\u0026#34;\u0026gt;\u0026lt;/image\u0026gt; \u0026lt;!-- abbreviations --\u0026gt; \u0026lt;image :src=\u0026#34;imgUrl\u0026#34;\u0026gt;\u0026lt;/image\u0026gt; \u0026lt;!-- Prop binding. \u0026#34;Prop\u0026#34; must be declared in the my-component.--\u0026gt; \u0026lt;my-component :prop=\u0026#34;someThing\u0026#34;\u0026gt;\u0026lt;/my-component\u0026gt; \u0026lt;button v-bind:disabled=\u0026#34;isButtonDisabled\u0026#34;\u0026gt;Button\u0026lt;/button\u0026gt; If the isButtonDisabledvalues are null, undefinedor false, it disabledwill not even be included in the rendered buttonelements.\nv-on\r#\r\rThe v-on instruction, which is used to monitor DOM events. v-on is abbreviated as'@'\n\u0026lt;!-- Complete syntax --\u0026gt; \u0026lt;view v-on:click=\u0026#34;doSomething\u0026#34;\u0026gt;click\u0026lt;/view\u0026gt; \u0026lt;!-- abbreviations --\u0026gt; \u0026lt;view @click=\u0026#34;doSomething\u0026#34;\u0026gt;click\u0026lt;/view\u0026gt; v-once\r#\r\rOnly render elements and components once. Subsequent re-rendering, the element/component and all its child nodes will be treated as static content and skipped.\nUnlike front-end framework in understanding the client in order to achieve a logical multiplexing state flag template node will be added to the v-onceguarantee rendering node only once, but not necessarily be able to optimize the rendering performance, but might slow down the client Comparison efficiency when multiplexing nodes.\n h5, WeChat applets are not supported\n \u0026lt;view v-once\u0026gt;This will never change: {{msg}}\u0026lt;/view\u0026gt; \u0026lt;!-- A child element --\u0026gt; \u0026lt;view v-once\u0026gt; \u0026lt;text\u0026gt;comment\u0026lt;/text\u0026gt; \u0026lt;text\u0026gt;{{msg}}\u0026lt;/text\u0026gt; \u0026lt;/view\u0026gt; v-html\r#\r\rUpdate elements innerHTML.\n Note: The content is inserted as normal HTML-it will not be compiled as a Vue template. If you try to use the v-html composite template, you can reconsider whether to replace it by using components. App and H5 end support v-html, WeChat applet will be converted rich-text, other end does not support v-html.  \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view v-html=\u0026#34;rawHtml\u0026#34;\u0026gt;\u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { rawHtml: \u0026#39;\u0026lt;div style=\u0026#34;text-align:center;background-color: #007AFF;\u0026#34;\u0026gt;\u0026lt;div \u0026gt;I am content\u0026lt;/div\u0026gt;\u0026lt;img src=\u0026#34;https://vkceyugu.cdn.bspapp.com/d8590190-4f28-11eb-b680-7980c8a877b8.png\u0026#34;/\u0026gt;\u0026lt;/div\u0026gt;\u0026#39; } } } \u0026lt;/script\u0026gt; data attribute\r#\r\rdata must be declared as a function that returns an initial data object (note that the data object returned in the function should not directly reference objects outside the function); otherwise, the data will not be automatically destroyed when the page is closed, and the last data will be displayed when the page is opened again .\n//Properly used, using a function to return an object  data() { return { title: \u0026#39;Hello\u0026#39; } } //Incorrect notation that will cause the last data to be displayed when the page is reopened  data: { title: \u0026#39;Hello\u0026#39; } //Incorrect notation can also result in multiple component instance object data influencing each other  const obj = { title: \u0026#39;Hello\u0026#39; } data() { return { obj } } Class and Style binding\r#\r\rObject syntax\r#\r\rAn object can be passed to v-bind:class to switch classes dynamically.\nYou can also pass in more fields in the object to dynamically switch multiple classes. In addition, the v-bind:class instruction can also coexist with ordinary classes.\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;!-- class --\u0026gt; \u0026lt;view class=\u0026#34;static\u0026#34; :class=\u0026#34;{ active: isActive}\u0026#34;\u0026gt;111\u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;static\u0026#34; :class=\u0026#34;{ active: isActive, \u0026#39;text-danger\u0026#39;: hasError }\u0026#34;\u0026gt;222\u0026lt;/view\u0026gt; \u0026lt;!-- style --\u0026gt; \u0026lt;view v-bind:style=\u0026#34;{ color: activeColor, fontSize: fontSize + \u0026#39;px\u0026#39; }\u0026#34;\u0026gt;333\u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { isActive: true, hasError: false, activeColor:\u0026#34;green\u0026#34;, fontSize:50 } } } \u0026lt;/script\u0026gt; \u0026lt;style\u0026gt; .static{ color: #2C405A; } .active{ background-color: #007AFF; } .text-danger{ color: #DD524D; } \u0026lt;/style\u0026gt; The rendering result is\n\u0026lt;view class=\u0026#34;static active\u0026#34;\u0026gt;\u0026lt;/view\u0026gt; When isActiveor hasErrorchanges, class list will be updated accordingly. For example, if hasErrorthe value true, class list becomes static active text-danger.\nArray syntax\r#\r\rYou can pass an array to v-bind:class to apply a class list.\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;!-- class --\u0026gt; \u0026lt;view class=\u0026#34;static\u0026#34; :class=\u0026#34;[activeClass,errorClass]\u0026#34;\u0026gt;111\u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;static\u0026#34; v-bind:class=\u0026#34;[isActive ? activeClass : \u0026#39;\u0026#39;, errorClass]\u0026#34;\u0026gt;222\u0026lt;/view\u0026gt;\u0026lt;!-- 三元表达式 --\u0026gt; \u0026lt;view class=\u0026#34;static\u0026#34; v-bind:class=\u0026#34;[{ active: isActive }, errorClass]\u0026#34;\u0026gt;333\u0026lt;/view\u0026gt; \u0026lt;!-- style --\u0026gt; \u0026lt;view v-bind:style=\u0026#34;[{ color: activeColor, fontSize: fontSize + \u0026#39;px\u0026#39; }]\u0026#34;\u0026gt;444\u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { isActive: true, activeClass: \u0026#39;active\u0026#39;, errorClass: \u0026#39;text-danger\u0026#39;, activeColor:\u0026#34;green\u0026#34;, fontSize:50 } } } \u0026lt;/script\u0026gt; \u0026lt;style\u0026gt; .static{ font-size:30rpx; } .active{ background-color: #007AFF; } .text-danger{ font-size:60rpx; color:#DD524D; } \u0026lt;/style\u0026gt; Note: Set the px pixel value in the way: style=\u0026quot;\u0026quot;. The value is the actual pixel and will not be converted by the compiler.\nFurther it may also be used computedto generate a method classor a stylestring, inserted into the page, illustrated:\n\u0026lt;template\u0026gt; \u0026lt;!-- support --\u0026gt; \u0026lt;view class=\u0026#34;container\u0026#34; :class=\u0026#34;computedClassStr\u0026#34;\u0026gt;\u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;container\u0026#34; :class=\u0026#34;{active: isActive}\u0026#34;\u0026gt;\u0026lt;/view\u0026gt; \u0026lt;!-- Does not support --\u0026gt; \u0026lt;view class=\u0026#34;container\u0026#34; :class=\u0026#34;computedClassObject\u0026#34;\u0026gt;\u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data () { return { isActive: true } }, computed: { computedClassStr () { return this.isActive ? \u0026#39;active\u0026#39; : \u0026#39;\u0026#39; }, computedClassObject () { return { active: this.isActive } } } } \u0026lt;/script\u0026gt;  Non-H5 end does not support classObjectand styleObjectsyntax.\n Examples not supported:\n\u0026lt;template\u0026gt; \u0026lt;view :class=\u0026#34;[activeClass]\u0026#34; :style=\u0026#34;[baseStyles,overridingStyles]\u0026#34;\u0026gt;\u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { activeClass: { \u0026#39;active\u0026#39;: true, \u0026#39;text-danger\u0026#39;: false }, baseStyles: { color: \u0026#39;green\u0026#39;, fontSize: \u0026#39;30px\u0026#39; }, overridingStyles: { \u0026#39;font-weight\u0026#39;: \u0026#39;bold\u0026#39; } } } } \u0026lt;/script\u0026gt; Used on components\r#\r\rNon-H5 end (non-custom pattern compiler component) temporarily supported on a custom assembly for use in Classthe Stylebinding.\nConditional rendering\r#\r\rv-if and v-else\r#\r\rv-ifInstructions are used to conditionally render a piece of content. This content will only return instruction in an expression truthyis rendered value of the time. Use v-elseinstructions represent the v-if \u0026ldquo;else block.\u0026rdquo;\n In JavaScript, truthy means that the converted value is true in the context of Boolean values. All values are true values unless they are defined as false values (that is, all true values except false, 0, \u0026ldquo;\u0026rdquo;, null, undefined, and NaN).\n \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view v-if=\u0026#34;seen\u0026#34;\u0026gt;Look at me\u0026lt;/view\u0026gt; \u0026lt;view v-else\u0026gt;Can\u0026#39;t look me\u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { seen: true } } } \u0026lt;/script\u0026gt; v-else-if, As the name suggests, serves as the \u0026ldquo;else-if block\u0026rdquo; of v-if and can be used continuously:\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view v-if=\u0026#34;type === \u0026#39;A\u0026#39;\u0026#34;\u0026gt; A \u0026lt;/view\u0026gt; \u0026lt;view v-else-if=\u0026#34;type === \u0026#39;B\u0026#39;\u0026#34;\u0026gt; B \u0026lt;/view\u0026gt; \u0026lt;view v-else-if=\u0026#34;type === \u0026#39;C\u0026#39;\u0026#34;\u0026gt; C \u0026lt;/view\u0026gt; \u0026lt;view v-else\u0026gt; Not A/B/C \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { type:\u0026#39;B\u0026#39; } } } \u0026lt;/script\u0026gt; Similarly v-else, v-else-ifwe must immediately bring v-ifor v-else-ifelements after.\nConditional rendering grouping\r#\r\rBecause v-ifa command, so it must be added to an element. But what if you want to switch multiple elements? At this time it can be a templateelement as invisible package elements, and using v-if above. The final rendering results will not contain templateelements.\n\u0026lt;template v-if=\u0026#34;seen\u0026#34;\u0026gt; \u0026lt;view\u0026gt;title\u0026lt;/view\u0026gt; \u0026lt;view\u0026gt;content:Now you see me\u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; v-show\r#\r\rv-showIt is an instruction to display element options based on conditions. Usage and roughly v-ifthe same:\n\u0026lt;view v-show=\u0026#34;ok\u0026#34;\u0026gt;Hello!\u0026lt;/view\u0026gt; The difference is that elements with v-show will always be rendered and kept in the DOM. v-show simply switching element CSSattributes display.\n Note that v-show does not support template elements, nor does v-else.\n The difference between v-if and v-show\r#\r\rv-if It is a \u0026ldquo;real\u0026rdquo; conditional rendering, because it will ensure that the event listeners and subcomponents in the conditional block are properly destroyed and rebuilt during the switching process.\nv-if It is also lazy: if the condition is false in the initial rendering, nothing is done, and the conditional block will not be rendered until the condition becomes true for the first time.\nIn contrast, v-showit is much simpler, no matter what the initial conditions are, the element will always be rendered, and it is simply switched based on CSS to control the display and hiding of the element.\nChoose according to application scenarios\n v-if There is a higher switching overhead. If the conditions rarely change during runtime, it is better to use v-if. v-showThere is a higher initial rendering overhead. If you need to switch very frequently, v-show is better.  note\n Not recommended to use both v-ifand v-for. When v-ifand v-forwhen used together, v-forthan v-ifa higher priority.  List rendering\r#\r\rUse arrays in v-for\r#\r\rThe v-for instruction can render a list based on an array.\n  v-for\rInstruction requires the use of\nitem in items\rspecial syntax form, wherein\nitems\rthe source data array,\nitem\rit is an alias iterated array element.\n The first parameter itemis the alias iterated array elements. The second parameter, the index of the current item index, is optional.    \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view v-for=\u0026#34;(item, index) in items\u0026#34;\u0026gt; {{ index }} - {{ item.message }} \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { items: [ { message: \u0026#39;Foo\u0026#39; }, { message: \u0026#39;Bar\u0026#39; } ] } } } \u0026lt;/script\u0026gt; result:\n0 - Foo 1 - Bar Use objects in v-for\r#\r\rYou can also use v-for to traverse an object property.\n The first parameter valueis an alias iterated array elements. The second parameter is the propertyname (that is, the key name). The third parameter serves as an index.  \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view v-for=\u0026#34;(value, name, index) in object\u0026#34;\u0026gt; {{ index }}. {{ name }}: {{ value }} \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { object: { title: \u0026#39;How to do lists in Vue\u0026#39;, author: \u0026#39;Jane Doe\u0026#39;, publishedAt: \u0026#39;2020-04-10\u0026#39; } } } } \u0026lt;/script\u0026gt; result:\n0.title: How to do lists in Vue, 1.author: Jane Doe, 2.publishedAt: 2020-04-10 List rendering grouping\r#\r\rLike v-if, you can also use with v-forthe templatecyclically render some content that contain multiple elements. such as:\n\u0026lt;template v-for=\u0026#34;item in items\u0026#34;\u0026gt; \u0026lt;view\u0026gt;{{ item.message }}\u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;divider\u0026#34; role=\u0026#34;presentation\u0026#34;\u0026gt;\u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; key\r#\r\rWhen using Vue being updated v-forwhen the list elements rendered, it defaults to \u0026ldquo;place update\u0026rdquo; strategy. If the order of the data items is changed, Vue will not move the DOM elements to match the order of the data items, but instead update each element in place and ensure that they are rendered correctly at each index position.\nIf the position of items in the list will dynamically change or new items added to the list, and you want the list of projects to maintain its own identity and status (such as inputinput content, switchthe selected state), you need :keyto specify a list of items The unique identifier.\n:key The value of is provided in two forms\n Use v-forcycles arrayin itema a property, the propertyvalue needs to be unique list number or string, and can not be changed dynamically. Use v-forcycle itemitself, then the need itemitself is a unique character string or a number  When the data change triggers the rendering layer to re-render, the components with keys will be corrected, and the framework will ensure that they are reordered, not recreated, to ensure that the components maintain their own state and improve the efficiency of the list rendering.\n If you do not provide: key, one will be reported warning. If you know that the list is static or you don\u0026rsquo;t need to pay attention to its order, you can choose to ignore it.\n Example:\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;!-- Some property of item in Array --\u0026gt; \u0026lt;view v-for=\u0026#34;(item,index) in objectArray\u0026#34; :key=\u0026#34;item.id\u0026#34;\u0026gt; {{index +\u0026#39;:\u0026#39;+ item.name}} \u0026lt;/view\u0026gt; \u0026lt;!-- When item itself is a unique string or number, we can use item itself --\u0026gt; \u0026lt;view v-for=\u0026#34;(item,index) in stringArray\u0026#34; :key=\u0026#34;item\u0026#34;\u0026gt; {{index +\u0026#39;:\u0026#39;+ item}} \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data () { return { objectArray:[{ id:0, name:\u0026#39;li ming\u0026#39; },{ id:1, name:\u0026#39;wang peng\u0026#39; }], stringArray:[\u0026#39;a\u0026#39;,\u0026#39;b\u0026#39;,\u0026#39;c\u0026#39;] } } } \u0026lt;/script\u0026gt; Precautions\r#\r\r Differences and other platforms when the platforms H5 integer v-for loop, as v-for=\u0026quot;(item, index) in 10\u0026quot;in, item 1 from the start, other platforms item from zero, the second parameter may be used in index H5 platform consistent. The third parameter is not supported in the non-cyclic object H5 platform, such as v-for=\u0026quot;(value, name, index) in object\u0026quot;in, index parameter is not supported. The data on the applet side is updated by difference. Since the applet does not support deleting object properties, the setting value is used instead of null. As a result, the traversal may not meet expectations. You need to filter the null data by yourself.  Use v-for on components\r#\r\rOn the custom component, you can use it like any ordinary element v-for.\n\u0026lt;my-component v-for=\u0026#34;item in items\u0026#34; :key=\u0026#34;item.id\u0026#34;\u0026gt;\u0026lt;/my-component\u0026gt; When using v-for on the component, the key is required.\nEvent handler\r#\r\rListen for events\r#\r\rYou can listen to DOM events with v-on instruction, when triggered and run some JavaScriptcode.\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;button v-on:click=\u0026#34;counter += 1\u0026#34;\u0026gt;Add 1\u0026lt;/button\u0026gt; \u0026lt;text\u0026gt;The button above has been clicked {{ counter }} times.\u0026lt;/text\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { counter:0 } } } \u0026lt;/script\u0026gt; Event handling method\r#\r\rHowever, many event processing logic is more complex, so directly to the JavaScriptcode is written in the v-oninstructions is not feasible. So v-onyou can also receive the name of a method needs to be called.\nExample:\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;!-- \u0026#39;greet\u0026#39; is the method name defined below --\u0026gt; \u0026lt;button v-on:click=\u0026#34;greet\u0026#34;\u0026gt;Greet\u0026lt;/button\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { name: \u0026#39;Vue.js\u0026#39; } }, // Define the methods in the \u0026#39;methods\u0026#39; object  methods: { greet(event){ // \u0026#39;event\u0026#39; is a native DOM event  console.log(event); } } } \u0026lt;/script\u0026gt; Sometimes it is also necessary to access the original DOM event in the inline statement processor. You can use the special variable $eventit passed to the method:\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;button v-on:click=\u0026#34;warn(\u0026#39;Form cannot be submitted yet.\u0026#39;, $event)\u0026#34;\u0026gt; Submit \u0026lt;/button\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { methods: { warn(message, event) { // Now we have access to the native event object  if (event) { event.preventDefault() } } } } \u0026lt;/script\u0026gt; Event modifier\r#\r\rThe modifier is a special suffix specified by a period. It is used to indicate that an instruction should be bound in a special way. For example, .preventmodifier tells v-oninstructions for event-triggered call event.preventDefault():\nv-on provides event modifiers:\n .stop: Supported by all platforms, it will prevent the event from bubbling when used, and also prevent the default behavior of the event on the non-H5 side .native: Monitor native events, only supported on H5 platform .prevent: Only supported on H5 platform .capture: Only supported on H5 platform .self: Only supported on H5 platform .once: Only supported on H5 platform .passive: Only supported on H5 platform  \u0026lt;!-- Prevents the click event from propagating further --\u0026gt; \u0026lt;view v-on:click.stop=\u0026#34;doThis\u0026#34;\u0026gt;\u0026lt;/view\u0026gt;  When using modifiers, the order is important; the corresponding codes will be generated in the same order. Therefore, with the v-on:click.prevent.selfblocks all clicks, and v-on:click.self.preventwill only prevent clicks on the element itself.\n note\n Compatible each end, events need to use v-on or @ way binding, do not use the small end of the program bindand catchfor event binding. If you need to scroll down the page prohibiting mask, use @touchmove.stop.prevent=\u0026quot;moveHandle\u0026quot;, moveHandleprocessing can be used to touchmoveevents, but also can be an empty function.  \u0026lt;view class=\u0026#34;mask\u0026#34; @touchmove.stop.prevent=\u0026#34;moveHandle\u0026#34;\u0026gt;\u0026lt;/view\u0026gt; Event mapping table\r#\r\r{ click: \u0026#39;tap\u0026#39;, touchstart: \u0026#39;touchstart\u0026#39;, touchmove: \u0026#39;touchmove\u0026#39;, touchcancel: \u0026#39;touchcancel\u0026#39;, touchend: \u0026#39;touchend\u0026#39;, tap: \u0026#39;tap\u0026#39;, longtap: \u0026#39;longtap\u0026#39;, //LongPress is recommended instead  input: \u0026#39;input\u0026#39;, change: \u0026#39;change\u0026#39;, submit: \u0026#39;submit\u0026#39;, blur: \u0026#39;blur\u0026#39;, focus: \u0026#39;focus\u0026#39;, reset: \u0026#39;reset\u0026#39;, confirm: \u0026#39;confirm\u0026#39;, columnchange: \u0026#39;columnchange\u0026#39;, linechange: \u0026#39;linechange\u0026#39;, error: \u0026#39;error\u0026#39;, scrolltoupper: \u0026#39;scrolltoupper\u0026#39;, scrolltolower: \u0026#39;scrolltolower\u0026#39;, scroll: \u0026#39;scroll\u0026#39; } Form control binding\r#\r\rv-model\r#\r\rYou can form a v-model command input, textareaand selectcreate a two-way data binding on the element. It will automatically select the correct method to update the element based on the control type. While some magic, but v-modelin essence merely syntactic sugar. It is responsible for monitoring the user\u0026rsquo;s input events to update the data, and perform some special processing on some extreme scenarios.\n v-model ignores all form elements value, checked, selectedthe initial value of the attribute data while always Vue instance as a data source. You should declare the initial value in the data option of the component via JavaScript.\n \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;input v-model=\u0026#34;message\u0026#34; placeholder=\u0026#34;edit me\u0026#34;\u0026gt; \u0026lt;text\u0026gt;Message is: {{ message }}\u0026lt;/text\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { message:\u0026#34;\u0026#34; } } } \u0026lt;/script\u0026gt; Example usage\r#\r\r H5 The selectlabel pickerfor assembly instead of  \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;picker @change=\u0026#34;bindPickerChange\u0026#34; :value=\u0026#34;index\u0026#34; :range=\u0026#34;array\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;picker\u0026#34;\u0026gt; The currently selected：{{array[index]}} \u0026lt;/view\u0026gt; \u0026lt;/picker\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { index: 0, array: [\u0026#39;A\u0026#39;, \u0026#39;B\u0026#39;, \u0026#39;C\u0026#39;] } }, methods: { bindPickerChange(e) { console.log(e) } } } \u0026lt;/script\u0026gt;  Form elements radioused radio-groupfor assembly instead of  \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;radio-group class=\u0026#34;radio-group\u0026#34; @change=\u0026#34;radioChange\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;radio\u0026#34; v-for=\u0026#34;(item, index) in items\u0026#34; :key=\u0026#34;item.name\u0026#34;\u0026gt; \u0026lt;radio :value=\u0026#34;item.name\u0026#34; :checked=\u0026#34;item.checked\u0026#34; /\u0026gt; {{item.value}} \u0026lt;/label\u0026gt; \u0026lt;/radio-group\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { items: [{ name: \u0026#39;USA\u0026#39;, value: \u0026#39;The United States\u0026#39; }, { name: \u0026#39;CHN\u0026#39;, value: \u0026#39;China\u0026#39;, checked: \u0026#39;true\u0026#39; }, { name: \u0026#39;BRA\u0026#39;, value: \u0026#39;Brazil\u0026#39; }, { name: \u0026#39;JPN\u0026#39;, value: \u0026#39;Japan\u0026#39; }, { name: \u0026#39;ENG\u0026#39;, value: \u0026#39;Britain\u0026#39; }, { name: \u0026#39;TUR\u0026#39;, value: \u0026#39;The French\u0026#39; } ] } }, methods: { radioChange(e) { console.log(\u0026#39;Radio has a change event and carries a value of:\u0026#39;, e.target.value) } } } \u0026lt;/script\u0026gt; Computed attributes and listeners\r#\r\rCalculated attribute\r#\r\rEach contains a calculated attribute getterand a setterdefault is to use getterto read. All getterand setterthe thiscontext is automatically bound instance Vue.\nGetter of calculated property\r#\r\rBinding expressions in templates is very convenient, but they are actually only used for simple operations. Putting too much logic in the template makes the template too heavy and difficult to maintain. E.g:\n\u0026lt;view\u0026gt; {{ message.split(\u0026#39;\u0026#39;).reverse().join(\u0026#39;\u0026#39;) }} \u0026lt;/view\u0026gt; Here are the variables you want to display messageflip string. When you want to include more inverted strings here in the template, it will be more difficult to handle.\nTherefore, for any complex logic, you should use calculated attributes .\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view\u0026gt;Original message: \u0026#34;{{ message }}\u0026#34;\u0026lt;/view\u0026gt; \u0026lt;view\u0026gt;Computed reversed message: \u0026#34;{{ reversedMessage }}\u0026#34;\u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { message: \u0026#39;Hello\u0026#39; } }, computed: { // Computed attribute getter  reversedMessage(){ return this.message.split(\u0026#39;\u0026#39;).reverse().join(\u0026#39;\u0026#39;) } } } \u0026lt;/script\u0026gt; result:\nOriginal message: \u0026#34;Hello\u0026#34; Computed reversed message: \u0026#34;olleH\u0026#34; You can bind as ordinary propertyas calculated binding properties in the template.\nVue know reversedMessagerely on message, so when messagechange occurs, all dependent reversedMessagebinding will be updated. And best of all is that we have to declaratively create this dependency: the calculation of property getterfunctions are no side effects (side effect), making it easier to test and understand.\nCalculated properties can also depend on the data of multiple Vue instances. As long as any of the data changes, the calculated properties will be re-executed and the view will be updated.\nSetter of calculated property\r#\r\rWhen you need it can also provide a setterfunction, when manually modify the calculated value of the property, it will trigger setterfunction, perform some custom actions.\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view\u0026gt;{{ fullName }}\u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { firstName: \u0026#39;Foo\u0026#39;, lastName: \u0026#39;Bar\u0026#39; } }, computed: { fullName: { // getter  get(){ return this.firstName + \u0026#39; \u0026#39; + this.lastName }, // setter  set(newValue){ var names = newValue.split(\u0026#39; \u0026#39;) this.firstName = names[0] this.lastName = names[names.length - 1] } } } } \u0026lt;/script\u0026gt; Now run fullName = 'John Doe'time, setterwill be called firstNameand lastNamewill be updated accordingly.\nThe difference between getter and setter\r#\r\r get: The new value of fullName can be obtained by setting the get method. set: Set a value (newValue) to change the value associated with fullName through the set method, causing the fullName to be recalculated, and the fullName on the corresponding page will also be changed to new content.  Calculated attribute cache vs method\r#\r\rWe can achieve the same effect by calling methods in expressions:\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view\u0026gt;Reversed message: \u0026#34;{{ reversedMessage() }}\u0026#34;\u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { message: \u0026#39;Hello\u0026#39; } }, methods: { reversedMessage(){ return this.message.split(\u0026#39;\u0026#39;).reverse().join(\u0026#39;\u0026#39;) } } } \u0026lt;/script\u0026gt; You can define the same function as a method instead of a calculated attribute. The final result of the two methods is indeed exactly the same. However, the difference is that calculated attributes are cached based on their responsive dependencies .\nThey will be re-evaluated only when the related reactive dependencies change. This means that as long as messageno change, many visits to reversedMessagethe calculation results before the property will return immediately to calculate, without having to perform functions again.\nThis also means that the following calculated properties will no longer be updated, because Date.now() is not a reactive dependency:\ncomputed: { now(){ return Date.now() } } In contrast, whenever a re-render is triggered, the calling method will always execute the function again .\nWhy do we need caching? Suppose we have a computational property A with a relatively large performance overhead, and it needs to traverse a huge array and do a lot of calculations. Then we may have other calculated properties that depend on A. If there is no cache, we will inevitably execute A\u0026rsquo;s getter multiple times! If you do not want to have a cache, please use methods instead.\nComputed attributes vs. listening attributes\r#\r\rVue provides a more general way to observe and respond to data changes on Vue instances: listening to properties . When you have some data that needs to change with other data changes, you can easily abuse it watch. Often, however, a better practice is to use the calculation attribute rather than a command-style watchcallback.\nexport default { data() { return { firstName: \u0026#39;Foo\u0026#39;, lastName: \u0026#39;Bar\u0026#39;, fullName: \u0026#39;Foo Bar\u0026#39; } }, watch: { firstName: function(val) { this.fullName = val + \u0026#39; \u0026#39; + this.lastName }, lastName: function(val) { this.fullName = this.firstName + \u0026#39; \u0026#39; + val } } } The above code is imperative and repetitive. Compare it with the version of the calculated attribute:\nexport default { data() { return { firstName: \u0026#39;Foo\u0026#39;, lastName: \u0026#39;Bar\u0026#39;, fullName: \u0026#39;Foo Bar\u0026#39; } }, computed: { fullName(){ return this.firstName + \u0026#39; \u0026#39; + this.lastName } } } Listener watch\r#\r\r  Type: {[key: string]: string | Function | Object | Array}\n  For an object, the key is the expression to be observed, and the value is the corresponding callback function. The value can also be a method name, or an object containing options. Vue instance will be called upon instantiation $watch(), traversing watcheach object property.\n  Example:\n  \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;input type=\u0026#34;text\u0026#34; v-model=\u0026#34;word\u0026#34;\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { word: \u0026#39;word\u0026#39; } }, watch: { /* Watch is used to respond to changes in data */ word(newVal, oldVal) { console.log(\u0026#39;The latest value is: \u0026#39;+newVal \u0026#34;, the original value is:\u0026#34;+ oldVal); } }, } \u0026lt;/script\u0026gt; Example:\n\u0026lt;script\u0026gt; export default { data() { return { a: 1, b: 2, c: 3, d: 4, e: { f: { g: 5 } } } }, watch: { a: function(val, oldVal) { console.log(\u0026#39;new: %s, old: %s\u0026#39;, val, oldVal) }, // the method name  b: \u0026#39;someMethod\u0026#39;, // This callback is called whenever the property of any object being listened on changes, regardless of how deeply nested it is  c: { handler: function(val, oldVal) { /* ... */ }, deep: true }, // This callback will be invoked immediately after the listening begins  d: { handler: \u0026#39;someMethod\u0026#39;, immediate: true }, // You can pass in an array of callbacks, and they\u0026#39;ll be called one by one  e: [ \u0026#39;handle1\u0026#39;, function handle2(val, oldVal) { /* ... */ }, { handler: function handle3(val, oldVal) { /* ... */ }, /* ... */ } ], // watch vm.e.f\u0026#39;s value: {g: 5}  \u0026#39;e.f\u0026#39;: function(val, oldVal) { /* ... */ } } } \u0026lt;/script\u0026gt; "}),a.add({id:59,href:'/docs/%E6%9E%B6%E6%9E%84/vue%E6%95%99%E7%A8%8B/%E7%BB%84%E4%BB%B6/vue-components/',title:"Vue Components",section:"Vue教程",content:"Concept\r#\r\r Components are the basic building blocks of the view layer. The component is an encapsulation of a single functional module. A component includes a start tag and an end tag. Attributes can be written on the label and assigned values to the attributes. The content is written in two labels.  Root is \u0026lt;template\u0026gt;, this \u0026lt;template\u0026gt;case can only and must have a root \u0026lt;view\u0026gt;component. This is the [vue single file component specification] . The data option of a component must be a function.    \u0026lt;!-- References the User-Info component on the index.vue page --\u0026gt; \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;user-info\u0026gt;\u0026lt;/user-info\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;!-- I am the component User-Info --\u0026gt; \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view\u0026gt;{{userName}}\u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { \u0026#34;userName\u0026#34;:\u0026#34;foo\u0026#34; } } } \u0026lt;/script\u0026gt; Advantage\r#\r\r The components can be reused any number of times. Reasonable division of components helps improve application performance. The code is more convenient to organize and manage, and it is more extensible, facilitating collaborative development by multiple people. Component development can greatly improve application development efficiency, testability, reusability, etc.  Registered\r#\r\rWhen registering a component, we always need to give it a name. There are two ways to define component names:\n Use kebab-case  When using kebab-case (name separated by dashes) to define a component, you must also use kebab-case when referencing this custom element, for example \u0026lt;my-component-name\u0026gt;.\n Use PascalCase  When defining a component using PascalCase (name with initial capital letters), you can use both nomenclatures when referencing this custom element. Both \u0026lt;my-component-name\u0026gt;and \u0026lt;MyComponentName\u0026gt;are acceptable.\nGlobal registration\r#\r\rNote\n The first parameter of Vue.component must be a static string. The nvue page does not currently support global components.  \\1. Global import and registration in main.js\nimport Vue from \u0026#39;vue\u0026#39; import pageHead from \u0026#39;./components/page-head.vue\u0026#39; Vue.component(\u0026#39;page-head\u0026#39;,pageHead) \\2. Components can be used directly inindex.vue\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;page-head\u0026gt;\u0026lt;/page-head\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; Partial registration\r#\r\rBefore partial registration, import the component you want to use on the page that needs to reference the component.\nThe way the page introduces components\nThe following two ways to import a corner label component library, recommended to use easycom to introduce\n Traditional vue specifications: On the index.vue page, import the component as import ,and define the componentsyou want to use in the Components option.  \u0026lt;!-- Introduce the uni-badge component in index.vue --\u0026gt; \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;uni-badge text=\u0026#34;1\u0026#34;\u0026gt;\u0026lt;/uni-badge\u0026gt;\u0026lt;!-- 3. Use components --\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; import uniBadge from \u0026#39;@/components/uni-badge/uni-badge.vue\u0026#39;;//1. Import components (This step belongs to the traditional VUE specification）  export default { components:{uniBadge }//2. Registration of Components (This step belongs to the traditional VUE specification）  } \u0026lt;/script\u0026gt; For the componentsobject of each property, its property name is the name of the custom elements, objects whose property value is the option of this component.\nPutting a variable name similar to uniBadge in the object is actually uniBadge: short for uniBadge, that is, the variable name is also:\n The name of the custom element used in the template The variable name that contains this component option (Only hump naming is supported)   Easycom : introduce the components into one step. As long as the components are installed in the project componentsdirectory, and in accordance with components/组件名称/组件名称.vuethe directory structure. You can use it directly on the page without quoting or registering.  \u0026lt;!-- Introduce the uni-badge component in index.vue --\u0026gt; \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;uni-badge text=\u0026#34;1\u0026#34;\u0026gt;\u0026lt;/uni-badge\u0026gt;\u0026lt;!-- 3. Use components --\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; // There is no need to import or register a uni-badge component in Components. Template can be used directly  export default { data() { return { } } } \u0026lt;/script\u0026gt;  Easycom is automatically turned on , you do not need to manually open ,when there is a demand pages.jsonof easycomnodes personalize . No matter how many components are installed in the components directory, easycom will automatically remove unused components after packaging, which is particularly friendly to the use of component libraries.  Component is a very important part of the technology in vue.Components allow UI-related wheels to be easily manufactured and shared, which in turn makes development efficiency for vueusers significantly higher.\nprops\r#\r\rpropsCan be an array or object, used to receive data from the parent component. propsIt can be a simple array, or use an object as an alternative. The object allows configuration of advanced options such as type detection, custom validation, and setting default values.\n   Options Types of Description     type String, Number, Boolean, Array, Object, Date, Function, SymbolArray, any custom constructor, or the above composition A checks propwhether the given type, otherwise throws a warning   default any For propa default value specified. If this propis not passed, then the change to do with this value. The default value of the object or array must be returned from a factory function.   required Boolean The definition of propwhether it is required   validator Function The custom authentication function propvalue as the only parameter is substituted. In a non-production environment, if the function returns a falsyvalue (that is, authentication fails), a warning will be thrown console    Example\r#\r\r\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;!-- I am the child component Componenta --\u0026gt; \u0026lt;view\u0026gt;{{age}}\u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { props: { // Detection type + other validation  age: { type: Number, default: 0, required: true, validator: function(value) { return value \u0026gt;= 0 } } } } \u0026lt;/script\u0026gt; \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;!-- I am the parent component --\u0026gt; \u0026lt;componentA :age=\u0026#34;10\u0026#34;\u0026gt;\u0026lt;/componentA\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; Pass static or dynamic Prop\r#\r\r You can give like this proppassed in a static value:  \u0026lt;blog-post title=\u0026#34;My journey with Vue\u0026#34;\u0026gt;\u0026lt;/blog-post\u0026gt;  Can be v-bindassigned dynamically  \u0026lt;!-- To assign a value to a variable dynamically --\u0026gt; \u0026lt;blog-post v-bind:title=\u0026#34;post.title\u0026#34;\u0026gt;\u0026lt;/blog-post\u0026gt; \u0026lt;!-- This means\u0026#39; true \u0026#39;even if the prop has no value.--\u0026gt; \u0026lt;blog-post is-published\u0026gt;\u0026lt;/blog-post\u0026gt; \u0026lt;blog-post v-bind:is-published=\u0026#34;post.isPublished\u0026#34;\u0026gt;\u0026lt;/blog-post\u0026gt;  Pass in all of an object property  If you want to pass in all propertyof an object as a prop, you can use without parameters v-bind(replace v-bind: prop-name) . For example, for a given object post:\npost: { id: 1, title: \u0026#39;My Journey with Vue\u0026#39; } \u0026lt;blog-post v-bind=\u0026#34;post\u0026#34;\u0026gt;\u0026lt;/blog-post\u0026gt; \u0026lt;!-- The above template is equivalent to: --\u0026gt; \u0026lt;blog-post v-bind:id=\u0026#34;post.id\u0026#34; v-bind:title=\u0026#34;post.title\u0026#34; \u0026gt;\u0026lt;/blog-post\u0026gt; Unidirectional data flow\r#\r\rAll props form a one -line downward binding between their parent and child props : updates to the parent prop will flow down to the child components, but the reverse is not possible. This will prevent accidental changes to the state of the parent component from the child component, which will make the data flow of your application difficult to understand.\n Every time the parent component changes, all props in the child component will be refreshed to the latest value. This means that you should not change props inside a subcomponent. If you do, Vue will issue a warning in the browser console.\n  This propis used to pass an initial value; the desired sub-assembly to the next as a local propused data.  \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;!--I am the child component Componenta --\u0026gt; \u0026lt;view\u0026gt;{{title}}\u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { props: [\u0026#39;title\u0026#39;] } \u0026lt;/script\u0026gt; \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;!-- I am the parent component --\u0026gt; \u0026lt;componentA :title=\u0026#34;title\u0026#34;\u0026gt;\u0026lt;/componentA\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { title:\u0026#34;hello\u0026#34; } } } \u0026lt;/script\u0026gt;  This propwith a primitive values passed and the need for conversion. In this case, it is preferable to use the propvalue of a calculated attribute to define:  \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;!-- I am the child component Component A --\u0026gt; \u0026lt;view\u0026gt;{{normalizedSize}}\u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { props: [\u0026#39;size\u0026#39;], computed: { normalizedSize: function () { return this.size.toLowerCase() } } } \u0026lt;/script\u0026gt; \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;!-- I am the parent component --\u0026gt; \u0026lt;componentA :size=\u0026#34;size\u0026#34;\u0026gt;\u0026lt;/componentA\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { size:\u0026#34;M\u0026#34; } } } \u0026lt;/script\u0026gt; Custom event\r#\r\rBind native events to components\r#\r\rYou may want to listen to a native event directly on the root element of a component many times. At this point, you can use v-ona .nativemodifier:\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;!-- I am the parent component --\u0026gt; \u0026lt;componentA @click.native=\u0026#34;clickComponentA\u0026#34; style=\u0026#34;height: 200px;\u0026#34;\u0026gt;\u0026lt;/componentA\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { methods: { clickComponentA(){ console.log(\u0026#34;clickComponentA\u0026#34;); } } } \u0026lt;/script\u0026gt; \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;!-- I am a child component --\u0026gt; \u0026lt;view type=\u0026#34;default\u0026#34; @click.stop=\u0026#34;open\u0026#34; style=\u0026#34;height: 30px;\u0026#34;\u0026gt;click\u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { methods:{ open(){ console.log(\u0026#34;open\u0026#34;); } } } \u0026lt;/script\u0026gt; .sync modifier\r#\r\rWhen a child component changes the value of a prop, the change is synchronized with the binding in the parent component. .syncIt is extended as a v-on listener that automatically updates the properties of the parent component.\n\u0026lt;!-- The parent component --\u0026gt; \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;syncA :title.sync=\u0026#34;title\u0026#34;\u0026gt;\u0026lt;/syncA\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { title:\u0026#34;hello vue.js\u0026#34; } } } \u0026lt;/script\u0026gt; \u0026lt;!-- Child components --\u0026gt; \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view @click=\u0026#34;changeTitle\u0026#34;\u0026gt;{{title}}\u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { props: { title: { default: \u0026#34;hello\u0026#34; }, }, methods:{ changeTitle(){ //An update event is fired  this.$emit(\u0026#39;update:title\u0026#39;,\u0026#34;super-app\u0026#34;) } } } \u0026lt;/script\u0026gt; Slot\r#\r\rVue implements a content distribution API, using slotelements as outlets for hosting content distribution.\nIt allows you to synthesize components like this:\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;componentA\u0026gt; Your Profile \u0026lt;/componentA\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; In the \u0026lt;componentA\u0026gt;template may be written as:\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;!-- I am the child component Componenta --\u0026gt; \u0026lt;view \u0026gt;{{title}}\u0026lt;/view\u0026gt; \u0026lt;slot\u0026gt;\u0026lt;/slot\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; When the component is rendered, it \u0026lt;slot\u0026gt;\u0026lt;/slot\u0026gt;will be replaced with \u0026ldquo;Your Profile\u0026rdquo;. The slot can contain any template code, including HTML:\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;!--I am the parent component --\u0026gt; \u0026lt;componentA\u0026gt; \u0026lt;view\u0026gt;Your Profile\u0026lt;/view\u0026gt; \u0026lt;!-- Add a uni-icons icon--\u0026gt; \u0026lt;uni-icons type=\u0026#34;contact\u0026#34; size=\u0026#34;30\u0026#34;\u0026gt;\u0026lt;/uni-icons\u0026gt; \u0026lt;/componentA\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; If \u0026lt;componentA\u0026gt;a templatedoes not contain an \u0026lt;slot\u0026gt;element, then anything between the start tag and an end tag assembly is discarded.\nCompilation scope\r#\r\rWhen you want to use data in a slot, for example:\n\u0026lt;navigation-link url=\u0026#34;/profile\u0026#34;\u0026gt; Logged in as {{ user.name }} \u0026lt;/navigation-link\u0026gt; This slot has access to the same instanceproperty (that is, the same \u0026ldquo;scope\u0026rdquo;) as the rest of the template, but not to the scope of \u0026lt;navigation-link\u0026gt;.For example, urla visit of less than:\n\u0026lt;navigation-link url=\u0026#34;/profile\u0026#34;\u0026gt; Clicking here will send you to: {{ url }} \u0026lt;!-- So the \u0026#39;URL\u0026#39; here is going to be undefined, Because its contents are _ passed to _ \u0026lt;navigation-link\u0026gt; It is not defined within the \u0026lt;navigation-link\u0026gt; component *. --\u0026gt; \u0026lt;/navigation-link\u0026gt;  Remember the rule: everything in the parent template is compiled in the parent scope; everything in the child template is compiled in the child scope.\n Default content\r#\r\rSometimes it is useful to set a specific fallback (that is, the default) content for a slot, which will only be rendered when no content is provided. In one example, \u0026lt;submit-button\u0026gt;component:\n\u0026lt;button type=\u0026#34;submit\u0026#34;\u0026gt; \u0026lt;slot\u0026gt;\u0026lt;/slot\u0026gt; \u0026lt;/button\u0026gt; We may hope that \u0026lt;button\u0026gt;the vast majority of cases are rendered within the text \u0026ldquo;Submit\u0026rdquo;. In order to \u0026ldquo;Submit\u0026rdquo; content as a backup, we can put it \u0026lt;slot\u0026gt;in the label:\n\u0026lt;button type=\u0026#34;submit\u0026#34;\u0026gt; \u0026lt;slot\u0026gt;Submit\u0026lt;/slot\u0026gt; \u0026lt;/button\u0026gt;  When I use a parent component \u0026lt;submit-button\u0026gt;when slot and does not provide any content:  \u0026lt;!-- Parent component: No slot content is provided --\u0026gt; \u0026lt;submit-button\u0026gt;\u0026lt;/submit-button\u0026gt; \u0026lt;!-- Subcomponent: Backup content \u0026#34;Submit\u0026#34; will be rendered: --\u0026gt; \u0026lt;button type=\u0026#34;submit\u0026#34;\u0026gt; Submit \u0026lt;/button\u0026gt;  When I use a parent assembly \u0026lt;submit-button\u0026gt;time and provides a slot content:  \u0026lt;!-- Parent component: Provides slot content --\u0026gt; \u0026lt;submit-button\u0026gt; Save \u0026lt;/submit-button\u0026gt; \u0026lt;!-- Subcomponent: then the supplied content will be rendered in place of the backup content: --\u0026gt; \u0026lt;button type=\u0026#34;submit\u0026#34;\u0026gt; Save \u0026lt;/button\u0026gt; Named slot\r#\r\rWhen multiple slots are required, you can define named slots using a special feature of the \u0026lt;slot\u0026gt; element: name\n \u0026lt;base-layout\u0026gt; Subcomponent template:  \u0026lt;template\u0026gt; \u0026lt;view class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;header\u0026gt; \u0026lt;!-- We want to put the header here --\u0026gt; \u0026lt;slot name=\u0026#34;header\u0026#34;\u0026gt;\u0026lt;/slot\u0026gt; \u0026lt;/header\u0026gt; \u0026lt;main\u0026gt; \u0026lt;!-- We want to put the main thing here --\u0026gt; \u0026lt;slot\u0026gt;\u0026lt;/slot\u0026gt; \u0026lt;/main\u0026gt; \u0026lt;footer\u0026gt; \u0026lt;!-- We want to put the footer here --\u0026gt; \u0026lt;slot name=\u0026#34;footer\u0026#34;\u0026gt;\u0026lt;/slot\u0026gt; \u0026lt;/footer\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt;  When providing content to a named slot, We can use v-slot directive on a \u0026lt;template\u0026gt;element, and provide their name as a parameter of v-slot:  \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;!-- The parent component uses the child component \u0026#39;\u0026lt;base-layout\u0026gt;\u0026#39;, and the node uses the slot feature: --\u0026gt; \u0026lt;base-layout\u0026gt; \u0026lt;template v-slot:header\u0026gt; \u0026lt;view\u0026gt;Here might be a page title\u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;template v-slot:default\u0026gt; \u0026lt;view\u0026gt;A paragraph for the main content.\u0026lt;/view\u0026gt; \u0026lt;view\u0026gt;And another one.\u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;template v-slot:footer\u0026gt; \u0026lt;view\u0026gt;Here\u0026#39;s some contact info\u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;/base-layout\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; Now \u0026lt;template\u0026gt;all the content elements will have to be passed in the appropriate slot. Any not been wrapped with the v-slot in\u0026lt;template\u0026gt;is considered the default slot content in the content .\n v-slot can be added only in the \u0026lt;template\u0026gt;\nA \u0026lt;slot\u0026gt;exit without a name carries the implied name \u0026ldquo;default\u0026rdquo;.\n Abbreviation for named slot\r#\r\rLike v-on and v-bind, v-slotit also has abbreviations, that is, replace everything before the parameter (v-slot:) with the character # . For example, v-slot:headerit can be rewritten as #header:\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;!-- The parent component uses the child component \u0026#39;\u0026lt;base-layout\u0026gt;\u0026#39;, and the node uses the slot feature: --\u0026gt; \u0026lt;base-layout\u0026gt; \u0026lt;template #header\u0026gt; \u0026lt;view\u0026gt;Here might be a page title\u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;view\u0026gt;A paragraph for the main content.\u0026lt;/view\u0026gt; \u0026lt;view\u0026gt;And another one.\u0026lt;/view\u0026gt; \u0026lt;template #footer\u0026gt; \u0026lt;view\u0026gt;Here\u0026#39;s some contact info\u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;/base-layout\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; Scope slot\r#\r\rIn the scope slot, the parent component can get the data of the child component. Subassembly may be slotbound label on the attribute value.\nSometimes it is useful to allow the contents of the slot to access data that is only available in the subcomponent.\n\u0026lt;!-- Child components \u0026lt;current-user\u0026gt;--\u0026gt; \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;slot\u0026gt;{{ user.lastName }}\u0026lt;/slot\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; We may want to change the default content and display it by first name instead of last name. as follows:\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;current-user\u0026gt; {{ user.firstName }} \u0026lt;/current-user\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; However, the above code does not work properly, because only \u0026lt;current-user\u0026gt;components can access the user and the content we provide is in the parent rendering.\nTo make user available in the parent slot contents, we can bind user as an attribute of the \u0026lt;slot\u0026gt; element:\n\u0026lt;!-- Child components \u0026lt;current-user\u0026gt;--\u0026gt; \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;slot :user=\u0026#34;user\u0026#34;\u0026gt;{{user.lastName}}\u0026lt;/slot\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { user:{ \u0026#34;lastName\u0026#34;:\u0026#34;bar\u0026#34;, \u0026#34;firstName\u0026#34;:\u0026#34;foo\u0026#34; } } } } \u0026lt;/script\u0026gt; Binding \u0026lt;slot\u0026gt;on the element attributeis called slot prop .Now in the parent scope, we can use the valued v-slot to define the name of the prop we provide:\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;current-user\u0026gt; \u0026lt;template v-slot:default=\u0026#34;slotProps\u0026#34;\u0026gt; {{ slotProps.user.firstName }} \u0026lt;/template\u0026gt; \u0026lt;/current-user\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; In this example, we select will contain all the slots propobject name slotProps, but you can use any name you like.\nAbbreviated syntax for exclusive default slot\r#\r\rLike assume unspecified content corresponding slot as the default, with no arguments v-slotis assumed to correspond to the default slot:\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;current-user\u0026gt; \u0026lt;template v-slot=\u0026#34;slotProps\u0026#34;\u0026gt; {{ slotProps.user.firstName }} \u0026lt;/template\u0026gt; \u0026lt;/current-user\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; The abbreviated syntax of the default slot cannot be mixed with the named slot , because it will cause the scope to be ambiguous:\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;!-- Invalid and will result in a warning --\u0026gt; \u0026lt;current-user v-slot=\u0026#34;slotProps\u0026#34;\u0026gt; {{ slotProps.user.firstName }} \u0026lt;template v-slot:other=\u0026#34;otherSlotProps\u0026#34;\u0026gt; slotProps is NOT available here \u0026lt;/template\u0026gt; \u0026lt;/current-user\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; Always use the full \u0026lt;template\u0026gt;-based syntax for all slots whenever multiple slots are present:\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;current-user\u0026gt; \u0026lt;template v-slot:default=\u0026#34;slotProps\u0026#34;\u0026gt; {{ slotProps.user.firstName }} \u0026lt;/template\u0026gt; \u0026lt;template v-slot:other=\u0026#34;otherSlotProps\u0026#34;\u0026gt; ... \u0026lt;/template\u0026gt; \u0026lt;/current-user\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; Deconstruct Slot Prop\r#\r\rThe internal working principle of scoped slots is to wrap the contents of your slot in a function with a single parameter:\nfunction (slotProps) { // Content of the slot  } This means that the value of a v-slot can actually be anyJavaScript expression that can be used as a parameter in a function definition. So with the support of the environment ( single file component ), you can also use the ES2015 deconstructed to pass specific slot prop, as follows:\n\u0026lt;current-user v-slot=\u0026#34;{ user }\u0026#34;\u0026gt; {{ user.firstName }} \u0026lt;/current-user\u0026gt; This makes the template more compact, especially if the slot provides more than one prop.It also opens up other possibilities, such asprop renaming,for example, userrename person:\n\u0026lt;current-user v-slot=\u0026#34;{ user: person }\u0026#34;\u0026gt; {{ person.firstName }} \u0026lt;/current-user\u0026gt; You can even define a backup for the case where prop in the slot is undefined:\n\u0026lt;current-user v-slot=\u0026#34;{ user = { firstName: \u0026#39;Guest\u0026#39; } }\u0026#34;\u0026gt; {{ user.firstName }} \u0026lt;/current-user\u0026gt; Naming restrictions\r#\r\rThe following are reserved keywords and can not be used as component names.\n a canvas cell content countdown datepicker div element embed header image img indicator input link list loading-indicator loading marquee meta refresh richtext script scrollable scroller select slider-neighbor slider slot span spinner style svg switch tabbar tabheader template text textarea timepicker transition-group transition video view web  Tips\n In addition to the names in the above list, standard HTML and SVG tag names cannot be used as component names. When using in Baidu applet, do not use hidden in data, it may cause rendering errors. Methods cannot use a method name with the same name as a lifecycle.  "}),a.add({id:60,href:'/docs/%E6%9E%B6%E6%9E%84/%E6%A1%86%E6%9E%B6%E7%AE%80%E4%BB%8B/frame/',title:"Frame",section:"框架简介",content:"Directory Structure\r#\r\r┌─components a directory of components that conforms to the VUE component specification\r│ └─comp-a.vue reusable component A\r├─hybrid a directory to hold local web pages\r├─platforms a directory that holds pages specific to each platform\r├─pages business page file storage directory\r│ ├─index\r│ │ └─index.vue the index page\r│ └─list\r│ └─list.vue the list page\r├─static The directory where the application references static resources (such as images, videos, etc.)，attention：Static resources can only be stored here\r├─main.js Vue initializes the entry file\r├─App.vue Application configuration, which is used to configure App global styles and listening\r├─manifest.json configure the application name, appid, logo, version and other packaging information，\r└─pages.json configure page routing, navigation bar, tabs and other page information.\r\r\rTips\n When compiled into any platform, staticthe files in the directory will be packaged in, non- staticfile (vue, js, css, etc.) under the directory is referenced will be included. Static Directory js files are not compiled, if there are es6codes, without directly converted to run on mobile devices will complain. Css, less/scss And other resources not on the same static directory, we recommend that these public resources on common the directory.  Introduce static resources into the template\r#\r\r TemplateWhen introducing static resources, such as image, videoand other label srcattributes, you can use a relative path or an absolute path, the form is as follows\n \u0026lt;!-- absolute path，/Static refers to the static directory under the root directory, and in cli projects /static refers to the static directory under the src directory --\u0026gt; \u0026lt;image class=\u0026#34;logo\u0026#34; src=\u0026#34;/static/logo.png\u0026#34;\u0026gt;\u0026lt;/image\u0026gt; \u0026lt;image class=\u0026#34;logo\u0026#34; src=\u0026#34;@/static/logo.png\u0026#34;\u0026gt;\u0026lt;/image\u0026gt; \u0026lt;!-- relative path --\u0026gt; \u0026lt;image class=\u0026#34;logo\u0026#34; src=\u0026#34;../../static/logo.png\u0026#34;\u0026gt;\u0026lt;/image\u0026gt; 注意\n @The absolute path and relative path at the beginning will be verified by base64 conversion rules The imported static resources are not converted to base64 on non-h5 platforms. On H5 platform, resources smaller than 4kb will be converted to base64, and the rest will not be transferred.  js file introduction\r#\r\r JsWhen scriptimporting jsfiles in files or tags (including renderjs, etc.) , you can use relative and absolute paths, in the form as follows\n // the absolute path, @ points to the project root directory, and in cli projects @ points to the src directory import add from \u0026#39;@/common/add.js\u0026#39; // relative paths import add from \u0026#39;../../common/add.js\u0026#39; Note\n Js files do not support /the introduction of the beginning  css introduces static resources\r#\r\r CssWhen style the labelimporting files or internal cssfiles (same for scss and less files), you can use relative or absolute paths ( HBuilderX 2.6.6-alpha)\n /* an absolute path */ @import url(\u0026#39;/common/uni.css\u0026#39;); @import url(\u0026#39;@/common/uni.css\u0026#39;); /* relative paths */ @import url(\u0026#39;../../common/uni.css\u0026#39;);  CssThe file or style the label image path referenced inside can use relative or absolute paths. It should be noted that some small project terminal css files are not allowed to reference local files (please see the precautions).\n /* an absolute path */ background-image: url(/static/logo.png); background-image: url(@/static/logo.png); /* relative paths */ background-image: url(../../static/logo.png); Tips\n For the introduction of font icons, please refer to Font Icon. @The absolute path and relative path at the beginning will be verified by base64 conversion rules For the h5 platform, base64 will be converted if it is less than 4kb, and it will not be converted if it exceeds 4kb. Other platforms will not switch to base64  Life cycle\r#\r\rApplication life cycle\r#\r\rSupport application life cycle functions such as onLaunch, onShow, onHide, etc. For details.\nPage life cycle\r#\r\rSupport life cycle functions such as onLoad, onShow, onReady.\nRoute\r#\r\rPage routing is managed by the framework. Developers need to configure the path and page style of each routing page in pages.json. It\u0026rsquo;s similar to configuring page routing in app.json for applet.\nRoute jump\r#\r\r`There are two ways to jump to page routing: use the navigatorcomponent to jump, and call API to jump.\nPage stack\r#\r\rThe framework manages all current pages in the form of a stack. When a route switch occurs, the page stack behaves as follows:\n   Routing method Page stack performance Trigger timing     initialization New page push The first page opened by   Open new page New page push Call API uni.navigateTo , use component.   Page redirect The current page is popped, and the new page is popped Call API [uni.redirectTo , use component.   Page back The page keeps popping the stack until the target returns to the page Call the API uni.navigateBack , use the component , the user presses the return button in the upper left corner, and the Android user clicks the physical back button   Tab switch All pages are popped, leaving only the new Tab page Call API uni.switchTab, use component , user switch Tab.   Reload All pages are popped, leaving only new pages Call API uni.reLaunch, use components.    Operating environment judgment\r#\r\rDevelopment environment and production environment\r#\r\rWe can set process.env.NODE_ENV`determine the current environment is a development environment or a production environment. Generally it is used for dynamic switching of connection test server or production server.\n In HBuilderX, click \u0026ldquo;Run\u0026rdquo; to compile the code is the development environment, and click \u0026ldquo;Release\u0026rdquo; to compile the code is the production environment In cli mode, it is a common compilation environment processing method.  if(process.env.NODE_ENV === \u0026#39;development\u0026#39;){ console.log(\u0026#39;development\u0026#39;) }else{ console.log(\u0026#39;production\u0026#39;) } Shortcut code block\nHBuilderX knockin block uEnvDev, uEnvProdto quickly generate a corresponding development, productionoperating environment decision code.\n// uEnvDev if (process.env.NODE_ENV === \u0026#39;development\u0026#39;) { // TODO } // uEnvProd if (process.env.NODE_ENV === \u0026#39;production\u0026#39;) { // TODO } Page style and layout\r#\r\rMeasurement unit\r#\r\rSupported common css units include px, rpx\n px is the screen pixel rpx is responsive px, a dynamic unit that adapts to the screen width. Based on a 750-wide screen, 750rpx is exactly the width of the screen. As the screen becomes wider, the actual display effect of rpx will be magnified proportionally, but when the screen width of the App and H5 ends reaches 960px, the default will be calculated according to the screen width of 375px . Refer to the [rpx calculation configuration for specific configuration.  The vue page supports ordinary H5 units\n Rem root font size can be configured through page-meta. vh viewpoint height, the height of the viewport, 1vh is equal to 1% of the viewport height vw viewpoint width, the width of the window, 1vw is equal to 1% of the width of the window  On the App side, the units involved in the titleNView in pages.json or the plus api written in the page only support px.\nNote that rpx is not supported at this time\n  In nvue, mode ( introduction to different compilation modes of nvue ) can use px and rpx, and the performance is the same as in vue. The weex model currently follows the weex unit, and its unit is quite special:\n px: A length unit dynamically calculated based on a 750-wide screen, which is the same as the rpx concept in the vue page. (Be sure to note that the px in weex mode is different from the px logic in vue.) wx: a unit of length that has nothing to do with the width of the device screen, the same as the concept of px in the vue page  Below for rpxdetails:\nWhen designers provide design drawings, they generally only provide one resolution.\nDevelop strictly according to the px of the design icon, the interface is easy to deform on mobile phones with different widths.\nAnd It mainly occures the width deformation. The height is generally not prone to problems because of the scroll bar. As a result, a strong demand for dynamic width units has been triggered.\nWeChat applet designed rpx to solve this problem. Both the App and H5 are supported rpx, and the calculation methods for different screen widths can be configured. For details, refer to : rpx calculation configuration.\nrpx is a unit relative to the base width and can be adapted to the screen width. `The standard screen width is 750rpx.\nDevelopers can calculate the rpx value of page elements based on the base width of the design draft. The conversion formula of design draft 1px and frame style 1rpx is as follows:\ndraft 1px / base width of design draft = frame style 1rpx / 750rpx\rIn other words, the width of the page elements in the `calculation formula of width:\n750 * the width of the element in the design draft / base width of design draft\rFor example:\n If the width of the design draft 750px, element A width in the design draft is 100px, then the width of element A in which should be set:750 * 100 / 750`the result is: 100rpx. If the width of 640px by design draft, element A width in the design draft is 100px, then the width of A in which should be set: 750 * 100 / 640`the result is: 117rpx. If the width of the design draft 375px, element B width in the design draft is 200px, then the width of B in which should be set:750 * 200 / 375`the result is: 400rpx.    Tips\n Note that rpx is a unit related to width. The wider the screen, the larger the actual pixel value. If you don\u0026rsquo;t want to scale according to the screen width, you should use the px unit. If the developer also uses rpx in the font or height, it should be noted that this writing means that as the screen becomes wider, the font will become larger and the height will become larger. If you need a fixed height, you should use px. rpx does not support dynamic horizontal and vertical screen switching calculation, using rpx is recommended to lock the screen orientation Designers can use iPhone6 as the standard for visual drafts. On the App side, the units involved in the titleNView in pages.json or the plus api written in the page only support px, not rpx. Early provided upx, and now it is recommended to change to rpx.  Style import\r#\r\rUse the @importstatement to import the external style sheet, @importfollowed by the relative path of the external style sheet that needs to be imported to ;indicate the end of the statement.\nSample code:\n\u0026lt;style\u0026gt;\r@import \u0026quot;../../common/uni.css\u0026quot;;\r.uni-card {\rbox-shadow: none;\r}\r\u0026lt;/style\u0026gt;\rInline style\r#\r\rThe frame component supports the use of style and class attributes to control the style of the component.\n style: The static style is written uniformly in the class. style receives dynamic styles and will be parsed at runtime. Please try to avoid writing static styles into style to avoid affecting rendering speed.  \u0026lt;view :style=\u0026quot;{color:color}\u0026quot; /\u0026gt;\r class: Used to specify style rules. Its attribute value is a collection of class selector names (style class names) in style rules. Style class names do not need to be accompanied by .. Style class names are separated by spaces.  \u0026lt;view class=\u0026quot;normal_view\u0026quot; /\u0026gt;\rSelector\r#\r\rThe currently supported selectors are:\n   Selector Sample Sample description     .class .intro Select all components with class=\u0026ldquo;intro\u0026rdquo;   #id #firstname Select the component with id=\u0026ldquo;firstname\u0026rdquo;   element view Select all view components   element, element view, checkbox Select view components of all documents and all checkbox components    note：\n  In do not use the*`selector.\n  Only the class selector is supported in the WeChat applet custom component\n  pageCorresponds to bodynode, for example:\n\u0026lt;!-- Set the page background color, using scoped will cause invalidations --\u0026gt; page { background-color:#ccc; }   Global style and local style\r#\r\rThe styles defined in App.vue are global styles and apply to every page. The style defined in the vue file under the pages directory is a partial style, which only acts on the corresponding page and will override the same selector in App.vue.\nnote:\n By App.vue @importmay be introduced outreach style statement, each acting on the same page. nvue page does not support global styles  CSS variables\r#\r\rprovides built-in CSS variables\n   CSS variables description App Applets H5     \u0026ndash;status-bar-height System status bar height nvue note see below 25px 0   \u0026ndash;window-top The distance from the top of the content area 0 0 The height of the NavigationBar   \u0026ndash;window-bottom The distance from the bottom of the content area 0 0 TabBar height    Note:\n var(--status-bar-height)This variable is fixed in the WeChat applet environment 25px, and in the App is the actual status bar height of the phone. When set \u0026quot;navigationStyle\u0026quot;:\u0026quot;custom\u0026quot;Cancel native navigation bar, because the form is immersive, occupied the position of the status bar. At this point you can use a height var(--status-bar-height)of view on the top of the page to avoid page content appears in the status bar. Since there is no native navigation bar and tabbar on the H5 end, it is also a front-end div simulation. If a fixed-position bottom view is set, it will be above the tabbar on the applet and app side, but will overlap with the tabbar on the H5 side. It can be used at this time --window-bottom, no matter which end it is, it is fixed above the tabbar. Currently nvue in the App end, it does not support --status-bar-heightvariable . The alternative is to get the height of the status bar through uni.getSystemInSync ().statusBarH8 on the page onLoad,and then set the height to occupying view by style binding way. Sample code is provided below  Code block\nThe quick way to write css variables is: knock hei in css, you can see 3 css variables in the candidate assistant. (Supported by HBuilderX 1.9.6 and above)\nExample 1-Use css variables for normal pages:\n\r\u0026lt;template\u0026gt; \u0026lt;page-meta\u0026gt; \u0026lt;navigation-bar /\u0026gt; \u0026lt;/page-meta\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view class=\u0026#34;status_bar\u0026#34;\u0026gt; \u0026lt;!-- Here\u0026#39;s the status bar --\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view\u0026gt; Text in the status bar \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt;	\u0026lt;style\u0026gt; .status_bar { height: var(--status-bar-height); width: 100%; } \u0026lt;/style\u0026gt; \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view class=\u0026#34;toTop\u0026#34;\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt;	\u0026lt;style\u0026gt; .toTop { bottom: calc(var(--window-bottom) + 10px) } \u0026lt;/style\u0026gt; Example 2 - NVUE page to get status bar height\n\u0026lt;template\u0026gt; \u0026lt;view class=\u0026#34;content\u0026#34;\u0026gt; \u0026lt;view :style=\u0026#34;{ height: iStatusBarHeight + \u0026#39;px\u0026#39;}\u0026#34;\u0026gt;\u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { iStatusBarHeight:0 } }, onLoad() { this.iStatusBarHeight = uni.getSystemInfoSync().statusBarHeight } } \u0026lt;/script\u0026gt; Fixed value\r#\r\r` The height of the following components is fixed and cannot be modified:\n   Components description App H5     NavigationBar Navigation Bar 44px 44px   TabBar Bottom tab Before HBuilderX 2.3.4, it was 56px. Starting from 2.3.4, it is adjusted to be the same as H5 and unified to 50px. But you can change the height independently) 50px    The height of each applet platform, including iOS and Android of the same applet platform, is different.\nFlex layout\r#\r\rIn order to support cross-platform, the framework recommends using Flex layout. For Flex layout, please refer to the external document A Complete Guide to Flexbox, Ruan Yifeng’s flex tutorial etc.\nBackground picture\r#\r\rSupport the use of the css set the background image, use an ordinary webproject much the same, but need to pay attention to the following points:\n  Support base64 format pictures.\n  Support network path pictures.\n  The applet does not support the use of local files in css, including local background images and font files. It can be used only in base64 mode. Before the v3 mode, the App side had the same limitation. Starting from v3 compilation mode, it supports the direct use of local background images and fonts.\n  Note that when using the local path background image:\n  For the convenience of developers, when the background image is less than 40kb `, it will be automatically converted to base64 format when compiled to a platform that does not support local background images;\n  If the image is larger than or equal to 40kb, there will be performance problems. It is not recommended to use a background image that is too large. If the developer must use it, he needs to convert it to base64 format for use, or move it to the server and reference it from the network address.\n  It is recommended to use an absolute path starting with ~@ for the reference path of the local background image.\n.test2 { background-image: url(\u0026#39;~@/static/logo.png\u0026#39;); }     Font icon\r#\r\rSupport the use of font icons, use ordinary  web items the same, you need to pay attention to the following points:\n  Support base64 format font icon.\n  Support network path font icon.\n  The network path must add the protocol header https.\n  Note that when using local path icon fonts:\n  For the convenience of developers, when the font file is less than 40kb, it `will be automatically converted to base64 format;\n  If the font file is greater than or equal to 40kb, it may have performance problems if it is still converted to base64. If the developer must use it, he needs to convert it to base64 by himself, or move it to the server and reference it from the network address;\n  It is recommended to use an absolute path starting with ~@ for the reference path of the font file.\n@font-face { font-family: test1-icon; src: url(\u0026#39;~@/static/iconfont.ttf\u0026#39;); }     The font file cannot be imported directly by using css, you need to use the following method to import it in js. Nvue does not support importing fonts from local paths, please use network links or base64forms.\nBe sure to use single quotation marks within the brackets of the srcfield url.\nvar domModule = weex.requireModule(\u0026#39;dom\u0026#39;); domModule.addRule(\u0026#39;fontFace\u0026#39;, { \u0026#39;fontFamily\u0026#39;: \u0026#34;fontFamilyName\u0026#34;, \u0026#39;src\u0026#39;: \u0026#34;url(\u0026#39;https://...\u0026#39;)\u0026#34; }) Example:\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view\u0026gt; \u0026lt;text class=\u0026#34;test\u0026#34;\u0026gt;\u0026amp;#xe600;\u0026lt;/text\u0026gt; \u0026lt;text class=\u0026#34;test\u0026#34;\u0026gt;\u0026amp;#xe687;\u0026lt;/text\u0026gt; \u0026lt;text class=\u0026#34;test\u0026#34;\u0026gt;\u0026amp;#xe60b;\u0026lt;/text\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;style\u0026gt; @font-face { font-family: \u0026#39;iconfont\u0026#39;; src: url(\u0026#39;https://at.alicdn.com/t/font_865816_17gjspmmrkti.ttf\u0026#39;) format(\u0026#39;truetype\u0026#39;); } .test { font-family: iconfont; margin-left: 20rpx; } \u0026lt;/style\u0026gt; Template and block\r#\r\rSupports nested template in the template and `used to perform list rendering and conditions of rendering .\n\u0026lt;template/\u0026gt;and \u0026lt;block/\u0026gt;is not a component, which is just a wrapper element, will not do any rendering on the page, only accept control properties.\n\u0026lt;block/\u0026gt;There are certain differences in performance on different platforms, and unified use is recommended \u0026lt;template/\u0026gt;.\nCode example\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;template v-if=\u0026#34;test\u0026#34;\u0026gt; \u0026lt;view\u0026gt;Display when test is true\u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;template v-else\u0026gt; \u0026lt;view\u0026gt;Display when test is false\u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;block v-for=\u0026#34;(item,index) in list\u0026#34; :key=\u0026#34;index\u0026#34;\u0026gt; \u0026lt;view\u0026gt;{{item}} - {{index}}\u0026lt;/view\u0026gt; \u0026lt;/block\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; ES6 support\r#\r\rSupports most ES6 APIs, it also supports ES7 await/async.\nNPM support\r#\r\rSupports the use of npm to install third-party packages.\nThis document requires developers to have a certain understanding of npm , so the basic functions of npm will not be introduced . If you haven\u0026rsquo;t contacted npm before , please read the official NPM documentation to learn.\nInitialize the npm project\nIf the project has not used npm to manage dependencies before (there is no package.json file in the project root directory), first execute the command in the project root directory to initialize the npm project:\nnpm init -y The cli project already has package.json by default. The project created by HBuilderX is not available by default, and needs to be created through the initialization command.\nInstallation dependencies\nInstall the npm package by executing the command in the project root directory:\nnpm install packageName --save Perform\nAfter installation, you can use the npm package. The npm package is introduced in js:\nimport package from \u0026#39;packageName\u0026#39; const package = require(\u0026#39;packageName\u0026#39;) TypeScript support\r#\r\rTo use ts development in , please refer to Vue.js TypeScript support instructions.\nThe type definition file is provided by the @dcloudio/types module. After installation, please pay attention to the compilerOptions\u0026gt; types section in the tsconfig.json file. You can also install other small program platform type definitions, such as: miniprogram-api-typings, mini-types . For missing or incorrect type definitions, you can add or modify them locally and report to the official to request an update at the same time.\nPrecautions\r#\r\rNote the following when using ts in .\nDeclare lang=\u0026ldquo;ts\u0026rdquo; in the script node of the vue file\r#\r\rStatement lang=\u0026quot;ts\u0026quot;after all the components of the vue vue incoming file import, require the use of ts writing.\nSample code\nRemodeling uni-badge.vue\n\u0026lt;script lang=\u0026#34;ts\u0026#34;\u0026gt; import Vue from \u0026#39;vue\u0026#39;; export default Vue.extend({ props: { type: { type: String, default: \u0026#39;default\u0026#39; }, inverted: { type: Boolean, default: false }, text: { type: [String, Number], default: \u0026#39;\u0026#39; }, size: { type: String, default: \u0026#39;normal\u0026#39; } }, computed: { setClass(): string { const classList: string[] = [\u0026#39;uni-badge-\u0026#39; + this.type, \u0026#39;uni-badge-size-\u0026#39; + this.size]; if (this.inverted === true) { classList.push(\u0026#39;uni-badge-inverted\u0026#39;) } return classList.join(\u0026#34; \u0026#34;) } }, methods: { onClick() { this.$emit(\u0026#39;click\u0026#39;) } } }) \u0026lt;/script\u0026gt; Reference uni-badge component in index.vue\n\u0026lt;script lang=\u0026#34;ts\u0026#34;\u0026gt; import Vue from \u0026#39;vue\u0026#39;; import uniBadge from \u0026#39;../../components/uni-badge.vue\u0026#39;; export default Vue.extend({ data() { return { title: \u0026#39;Hello\u0026#39; } }, components:{ uniBadge } }); \u0026lt;/script\u0026gt; Renderjs\r#\r\rrenderjsIt is a js running in the view layer.\nrenderjsThere are two main functions:\n Significantly reduce the communication loss between the logic layer and the view layer, and provide high-performance view interaction capabilities Operate dom in the view layer, run the js library for web  How to use\r#\r\rSet the lang of the script node to renderjs\n\u0026lt;script module=\u0026#34;test\u0026#34; lang=\u0026#34;renderjs\u0026#34;\u0026gt; export default { mounted() { // ...  }, methods: { // ...  } } \u0026lt;/script\u0026gt; "}),a.add({id:61,href:'/docs/%E6%A1%86%E6%9E%B6/%E6%A1%86%E6%9E%B6%E6%8E%A5%E5%8F%A3/%E5%AE%9A%E6%97%B6%E5%99%A8/timer/',title:"Timer",section:"框架接口",content:"setTimeout(callback, delay, rest)\r#\r\rSet a timer. Execute the registered callback function after the time expires\nParameter Description\n   parameter Types of Required Description     callback Function Yes Callback   delay Number no Delay time, the function call will occur after the delay, the unit is ms   rest Any no Additional parameters such as param1, param2, \u0026hellip;, paramN will be passed as parameters to the callback function    return value\n   return value Types of Description     timeoutID Number The number of the timer, this value can be passed to clearTimeout to cancel the timing    clearTimeout(timeoutID)\r#\r\rCancel the timer set by setTimeout.\nParameter Description\n   parameter Types of Required Description     timeoutID Number Yes ID of the timer to be cancelled    setInterval(callback, delay, rest)\r#\r\rSet a timer. Execute the registered callback function according to the specified period (in milliseconds)\nParameter Description\n   parameter Types of Required Description     callback Function Yes Callback   delay Number no Delay time, the function call will occur after the delay, the unit is ms   rest Any no Additional parameters such as param1, param2, \u0026hellip;, paramN will be passed as parameters to the callback function    return value\n   return value Types of Description     intervalID Number The number of the timer, this value can be passed to clearInterval to cancel the timer    clearInterval(intervalID)\r#\r\rCancel the timer set by setInterval.\nParameter Description\n   parameter Types of Required Description     intervalID Number Yes ID of the timer to be cancelled                      "}),a.add({id:62,href:'/docs/%E6%A1%86%E6%9E%B6/%E6%A1%86%E6%9E%B6%E6%8E%A5%E5%8F%A3/%E6%97%A5%E5%BF%97%E6%89%93%E5%8D%B0/log/',title:"Log",section:"框架接口",content:"console\r#\r\rPrint log information to the console.\ndebug\r#\r\rPrint debug log to the console\nNote: In the App-side custom component mode, the debug method is equivalent to the log method.\nlog\r#\r\rPrint log to the console\ninfo\r#\r\rPrint info log to the console\nwarn\r#\r\rPrint warn log to the console\nerror\r#\r\rPrint error log to the console\nnote:\n Different platforms have different support for the console method. It is recommended to use only the methods mentioned in the document during the development process. There are two important code blocks in HBuilderX. Knock clog: can be output directly console.log(); Knock clogv: can be output console.log(\u0026quot;: \u0026quot; + );, and double cursors appear, which is convenient for printing variable names and values at the same time. HBuilderX 1.9.7 and above custom component mode supports printing object information to the console. The old version can use clogjcode blocks to convert json objects into strings and print them out.   "}),a.add({id:63,href:'/docs/%E6%A1%86%E6%9E%B6/%E6%A1%86%E6%9E%B6%E6%8E%A5%E5%8F%A3/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/lifecycle/',title:"Lifecycle",section:"框架接口",content:"Application life cycle\r#\r\rThe following application life cycle functions are supported:\n   Function name Description     onLaunch uni-appTriggered when the initialization is completed (global trigger only once)   onShow When uni-appstarted, or from the background into the foreground display   onHide As uni-appfrom the foreground into the background   onError When the uni-apptrigger error   onUniNViewMessage For nvuedata pages sent by the monitor, refer to nvue to communicate vue   onUnhandledRejection Listener function for unprocessed Promise rejection event (2.8.1+)   onPageNotFound No monitoring function exists on the page   onThemeChange Monitor system theme changes    note\n The application life cycle can only be App.vuemonitored in , and monitoring on other pages is invalid.  Sample code\n\u0026lt;script\u0026gt; // You can only listen for the application lifecycle in app.vue  export default { onLaunch: function() { console.log(\u0026#39;App Launch\u0026#39;) }, onShow: function() { console.log(\u0026#39;App Show\u0026#39;) }, onHide: function() { console.log(\u0026#39;App Hide\u0026#39;) } } \u0026lt;/script\u0026gt; Page life cycle\r#\r\rThe following page life cycle functions are supported:\n   Function name Description     onLoad Monitor page loading, its parameter is the data passed on the previous page, the parameter type is Object (used for page parameter transfer)   onShow Monitor page display. It is triggered every time the page appears on the screen, including returning from the lower page point to reveal the current page   onReady The first rendering of the monitoring page is complete. Note that if the rendering speed is fast, it will be triggered before the page enters the animation.   onHide Monitor page hiding   onUnload Monitor page uninstall   onPullDownRefresh Monitor user pull-down actions, generally used for pull-down refresh   onReachBottom The event when the page scrolls to the bottom (not the scroll-view scroll to the bottom) is often used to pull down the next page of data. See the notes below for details   onPageScroll Monitor page scrolling, the parameter is Object    onInitUse attention\n Only Baidu applet base library above 3.260 supports onInit life cycle Other versions or platforms can use the onLoad life cycle to be compatible at the same time, pay attention to avoid repeating the same logic The logic that does not rely on page passing parameters can be directly replaced by the created life cycle  onReachBottomNote that you can define the trigger distance onReachBottomDistance at the bottom of the specific page in pages.json, for example, set it to 50, then the onReachBottom event will be triggered when the page is scrolled to 50px from the bottom.\nIf scroll-view is used and the page does not scroll, the bottoming event will not be triggered. For the event of scroll-view scrolling to the bottom, please refer to the scroll-view documentation\nonPageScroll (Monitor scroll, scroll monitor, scroll event) parameter description:\n   Attributes Types of Description     scrollTop Number The distance the page has been scrolled in the vertical direction (in px)    note\n onPageScrollDon\u0026rsquo;t write interactive complex js, such as frequent page modification. Because this life cycle is triggered in the rendering layer, on the non-h5 side, js is executed in the logic layer, and communication between the two layers is lossy. If the data exchange between the two layers is triggered frequently during the scrolling process, it may cause stuck. If you want to achieve a transparent gradient of the title bar when scrolling, under App and H5, you can configure the type under titleNView as transparent in pages.json. If you need to scroll the ceiling to fix certain elements, it is recommended to use the sticky layout of CSS . There are also other ceiling plug-ins implemented by js in the plug-in market, but the performance is not good, you can search by yourself when you need it. In App, WeChat applet, and H5, you can also use wxs to monitor scrolling; in app-nvue, you can use bindingx to monitor scrolling. onBackPress``asyncCan’t be used on , it will prevent the default return  onPageScroll : function(e) { //nvue does not support scrolling listening. BindingX can be used instead  console.log(\u0026#34;Rolling distance is：\u0026#34; + e.scrollTop); }, onTabItemTap Description of the returned json object:\n   Attributes Types of Description     index String The sequence number of the clicked tabItem, starting from 0   pagePath String The page path of the clicked tabItem   text String The button text of the tabItem that was clicked    note\n onTabItemTap is often used to click the current tabitem, scroll or refresh the current page. If you click on a different tabitem, it will definitely trigger a page switch. If you want to click on a tabitem on the App side without jumping to the page, you can\u0026rsquo;t use onTabItemTap, you can use plus.nativeObj.view to put a block to cover the original tabitem and intercept the click event. Alipay applet platform onTabItemTap appears to be triggered after clicking non-current tabitem, so it cannot be used to achieve the operation of clicking back to the top  onTabItemTap : function(e) { console.log(e); // E is returned as a json object： {\u0026#34;index\u0026#34;:0,\u0026#34;text\u0026#34;:\u0026#34;home page\u0026#34;,\u0026#34;pagePath\u0026#34;:\u0026#34;pages/index/index\u0026#34;} }, onNavigationBarButtonTap Parameter Description:\n   Attributes Types of Description     index Number The subscript of the native title bar button array    onNavigationBarButtonTap : function (e) { console.log(e); // E is returned as a json object：{\u0026#34;text\u0026#34;:\u0026#34;test\u0026#34;,\u0026#34;index\u0026#34;:0} } onBackPress Description of callback parameter object:\n   Attributes Types of Description     from String The source of triggering the return behavior:\u0026lsquo;backbutton\u0026rsquo;-the upper left corner navigation bar button and the Android return key;\u0026lsquo;navigateBack\u0026rsquo;-uni.navigateBack() method. Alipay applet does not support returning this field    export default { data() { return {}; }, onBackPress(options) { console.log(\u0026#39;from:\u0026#39; + options.from) } } note\n The life cycle supported by the weex compilation mode of the nvue page is the same as that of weex. The real phone of Alipay applet can monitor non- navigateBacktriggered return events (it will not be triggered when using applet development tools onBackPress), and the default return behavior cannot be prevented  Component life cycle\r#\r\runi-appThe life cycle supported by the component is the same as the life cycle of the vue standard component. There is no page-level onLoad and other life cycles:\n   Function name Description Platform difference description Minimum version     beforeCreate Called after the instance is initialized. See     created It is called immediately after the instance is created. See     beforeMount Called before the start of the mount. See     mounted Called after mounting to the instance. For details, please note: It is not certain that all subcomponents are mounted here. If you need to perform operations after the subcomponents are fully mounted, you can use the $nextTickofficial Vue documentation     beforeUpdate Called when the data is updated, before the virtual DOM is patched. See Only supported by H5 platform    updated The virtual DOM is re-rendered and patched due to data changes, after which the hook will be called. See Only supported by H5 platform    beforeDestroy Called before the instance is destroyed. At this step, the instance is still fully available. See     destroyed Called after the Vue instance is destroyed. After the call, everything indicated by the Vue instance will be unbound, all event listeners will be removed, and all child instances will be destroyed. See      "}),a.add({id:64,href:'/docs/%E6%A1%86%E6%9E%B6/%E6%A1%86%E6%9E%B6%E6%8E%A5%E5%8F%A3/%E9%A1%B5%E9%9D%A2/window/',title:"Window",section:"框架接口",content:"getApp ()\r#\r\rgetApp() The function is used to obtain the current application instance, generally used to obtain globalData.\nInstance\nconst app = getApp() console.log(app.globalData) note:\n Do not defined in the App()in the function, or calling Appbefore the call getApp(), by this.$scopeapp corresponding instance Get By getApp()then obtain an instance, the life cycle Do not attempt to call the function. The v3 mode accelerates the nvuestartup speed of the homepage , and when used on the homepage nvue, it getApp()may not be possible to obtain real Appobjects. For this v3 version, it is const app = getApp({allowDefault: true})used to obtain the original Appobject, which can be used to globalDatainitialize on the home page .  getCurrentPages()\r#\r\rgetCurrentPages() The function is used to obtain the instance of the current page stack, which is given in the order of the stack in the form of an array, the first element is the home page, and the last element is the current page.\nNote: It getCurrentPages() is only used to display the page stack. Please do not modify the page stack to avoid causing page status errors.\nList of method attributes for each page instance:\n   method description Platform description     page.$getAppWebview() Get the webview object instance of the current page App   page.route Get the route of the current page     Tips：\n navigateTo, redirectToOnly non-tabBar pages can be opened. switchTabYou can only open tabBarthe page. reLaunch Any page can be opened. Bottom of the page tabBarby the page decision, that is, as long as it is defined as tabBara page, at the bottom there tabBar. You can not App.vuebe the page jump inside.  $getAppWebview()\r#\r\runi-appIn getCurrentPages()page obtained in a built-in method $getAppWebview()can be an object instance of the current webview, webview order to achieve greater control. In html5Plus, plus.webview has powerful control capabilities.\nBut the uni-appframework has its own window management mechanism, please do not create and destroy the webview yourself.\nNote: This method is only supported by App\nExample:\nGet the object instance of the current page webview\nexport default { data() { return { title: \u0026#39;Hello\u0026#39; } }, onLoad() { // #ifdef APP-PLUS  const currentWebview = this.$scope.$getAppWebview(); //This object is equivalent to the html5plus plus. Webview. CurrentWebview (). In uni - app directly using the vue page plus. Webview. CurrentWebview () is invalid, the v3 compilation mode using this. $mp. Page $getAppWebview ()  currentWebview.setBounce({position:{top:\u0026#39;100px\u0026#39;},changeoffset:{top:\u0026#39;0px\u0026#39;}}); //Dynamically reset the bounce effect  // #endif  } } Get the object instance of the webview of the specified page\ngetCurrentPages()You can get all the page objects, and then according to the array, you can get the specified page webview object\nvar pages = getCurrentPages(); var page = pages[pages.length - 1]; // #ifdef APP-PLUS var currentWebview = page.$getAppWebview(); console.log(currentWebview.id);//Get the ID of the current WebView console.log(currentWebview.isVisible());//Query whether the current WebView is visible ); // #endif The web-view component that comes with uni-app is a new sub-webview inserted in the page. For the method of obtaining this object.\n"}),a.add({id:65,href:'/docs/%E6%A1%86%E6%9E%B6/%E6%A1%86%E6%9E%B6%E6%8E%A5%E5%8F%A3/%E9%A1%B5%E9%9D%A2%E9%80%9A%E8%AE%AF/communication/',title:"Communication",section:"框架接口",content:"  Since HBuilderX 2.0.0, custom component compilation mode support.\n uni.$emit(eventName,OBJECT)\r#\r\rTrigger global custom events. Additional parameters will be passed to the listener callback.\n   Attributes Types of description     eventName String Event name   OBJECT Object Additional parameters carried by the trigger event    Code example\nuni.$emit(\u0026#39;update\u0026#39;,{msg:\u0026#39;Page updates\u0026#39;}) uni.$on(eventName,callback)\r#\r\rListen to global custom events. The event can be triggered by uni.$emit, and the callback function will receive all the extra parameters of the incoming event trigger function.\n   Attributes Types of description     eventName String Event name   callback Function Event callback function    Code example\nuni.$on(\u0026#39;update\u0026#39;,function(data){ console.log(\u0026#39;Listen for an event from UPDATE with parameter MSG as：\u0026#39; + data.msg); }) uni.$once(eventName,callback)\r#\r\rListen to global custom events. The event can be triggered by uni.$emit, but only once, the listener is removed after the first trigger.\n   Attributes Types of description     eventName String Event name   callback Function Event callback function    Code example\nuni.$once(\u0026#39;update\u0026#39;,function(data){ console.log(\u0026#39;Listen for an event from UPDATE with parameter MSG as：\u0026#39; + data.msg); }) uni.$off([eventName, callback])\r#\r\rRemove the global custom event listener.\n   Attributes Types of description     eventName Array＜String＞ Event name   callback Function Event callback function    Tips\n If no parameters are provided, all event listeners are removed; If only an event is provided, remove all listeners for that event; If both events and callbacks are provided, only the listener for this callback will be removed; The provided callback must be the same as the callback of $on to remove the listener of this callback;  Code example\n$emit, $on, $offCommonly used in the cross-page, cross-component communication, demonstrated here on the same page in order to facilitate\n\u0026lt;template\u0026gt; \u0026lt;view class=\u0026#34;content\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;data\u0026#34;\u0026gt; \u0026lt;text\u0026gt;{{val}}\u0026lt;/text\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;button type=\u0026#34;primary\u0026#34; @click=\u0026#34;comunicationOff\u0026#34;\u0026gt;The end of the listening\u0026lt;/button\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { val: 0 } }, onLoad() { setInterval(()=\u0026gt;{ uni.$emit(\u0026#39;add\u0026#39;, { data: 2 }) },1000) uni.$on(\u0026#39;add\u0026#39;, this.add) }, methods: { comunicationOff() { uni.$off(\u0026#39;add\u0026#39;, this.add) }, add(e) { this.val += e.data } } } \u0026lt;/script\u0026gt; \u0026lt;style\u0026gt; .content { display: flex; flex-direction: column; align-items: center; justify-content: center; } .data { text-align: center; line-height: 40px; margin-top: 40px; } button { width: 200px; margin: 20px 0; } \u0026lt;/style\u0026gt; Precautions\n The events triggered by uni.$emit, uni.$on, uni.$once, uni.$off are all App global level, across any component, page, nvue, vue, etc. When using, pay attention to destroy event listeners in time, for example, uni.$on registration listeners in onLoad of the page, uni.$off removal in onUnload, or one-time events, directly use uni.$once listeners   "}),a.add({id:66,href:'/docs/%E6%A1%86%E6%9E%B6/%E9%85%8D%E7%BD%AE/app.vue/app/',title:"App",section:"配置",content:"App.vueIs uni-app main assembly, all the pages are in App.vuethe switch is a page entry file. But it App.vueis not a page itself, and view elements cannot be written here.\nThe role of this file includes: calling application life cycle functions, configuring global styles, configuring global storage globalData\nThe application life cycle can only be App.vuemonitored in , and monitoring on the page is invalid.\nApplication life cycle\r#\r\runi-appSupport application life cycle functions such as onLaunch, onShow, onHide, etc.\n\u0026lt;script\u0026gt; export default { onLaunch: function() { console.log(\u0026#39;App Launch，The app launched\u0026#39;) }, onShow: function() { console.log(\u0026#39;App Show，The app is displayed in the foreground\u0026#39;) }, onHide: function() { console.log(\u0026#39;App Hide，Apps no longer appear in the foreground\u0026#39;) } } \u0026lt;/script\u0026gt; note\n The application life cycle can only be App.vuemonitored in , and monitoring on other pages is invalid . App.vue Cannot write templates  globalData\r#\r\rThe applet has globalData, which is a simple global variable mechanism. This mechanism can also be used in uni-app, and it is universal.\nThe following is the relevant configuration of globalData defined in App.vue:\n\u0026lt;script\u0026gt; export default { globalData: { text: \u0026#39;text\u0026#39; } } \u0026lt;/script\u0026gt; The way to manipulate globalData in js is as follows: getApp().globalData.text = 'test'\nWhen applying onLaunch, the getApp object has not been obtained yet, temporarily you can use this.$scope.globalData to obtain globalData.\nIf you need to bind globalData data to the page, you can perform variable reassignment during the onShow page life cycle of the page.\nIf you use globalData in the weex compilation mode of nvue, because the weex life cycle does not support onShow, but if you are familiar with 5+, you can use the addEventListener show event of the webview to monitor the onShow effect, or use the beforeCreate in the weex life cycle directly. However, it is recommended that developers use uni-app compilation mode instead of weex compilation mode.\nglobalData is a simple global variable, if you use state management, please use vuex(defined in main.js)\nGlobal style\r#\r\rIn App.vue, you can define some global general styles, for example, you need to add a general background color, and the animation of the first screen page rendering can be written in App.vue.\nNote that if there are both vue and nvue files under the project, all css of the global style will be applied to all files, and the css supported by nvue is limited, the compiler will alarm in the console, prompting that some css cannot be supported in nvue. At this time, you need to write the css that nvue does not support in a separate conditional compilation. Such as:\n\u0026lt;style\u0026gt; /* #ifndef APP-PLUS-NVUE */ @import \u0026#39;./common/uni.css\u0026#39;; /* #endif*/ \u0026lt;/style\u0026gt; \u0026lt;style\u0026gt; /* #ifndef APP-PLUS-NVUE */ @import \u0026#39;./common/uni.css\u0026#39;; /* #endif*/ \u0026lt;/style\u0026gt; "}),a.add({id:67,href:'/docs/%E6%A1%86%E6%9E%B6/%E9%85%8D%E7%BD%AE/main.js/main/',title:"Main",section:"配置",content:"main.jsIt is the entry file of uni-app. Its main function is to initialize vueinstances, define global components, and use required plug-ins such as vuex.\nFirst introduced the Vuelibrary and App.vue, created an vueinstance, and mounted the vueinstance.\nimport Vue from 'vue'\rimport App from './App'\rimport pageHead from './components/page-head.vue' //Global reference to the page-head component\rVue.config.productionTip = false\rVue.component('page-head', pageHead) //Globally register the page-head component, which each page will be able to use directly\rApp.mpType = 'app'\rconst app = new Vue({\r...App\r})\rapp.$mount() //Mount the Vue instance\rUse Vue.usereference plugins, use Vue.prototypeadd global variables, and use Vue.componentregister global components.\nIt can be cited vuex, because multiple files are involved, no examples are provided here, please refer to the hello uni-appexample project for details .\nCannot be used vue-router, routing must pages.jsonbe configured in.\nnote\n nvue does not currently support registering global components in main.js  "}),a.add({id:68,href:'/docs/%E6%A1%86%E6%9E%B6/%E9%85%8D%E7%BD%AE/manifest.json/manifest/',title:"Manifest",section:"配置",content:"manifest.jsonThe file is the configuration file of the application, used to specify the name, icon, permissions, etc. of the application. The project created by HBuilderX is in the root directory, and the project created by CLI is in the src directory.\nList of configuration items\r#\r\r   Attributes Types of Defaults description Minimum version     name String  Application Name    appid String When creating a new uni-app project, DCloud will assign it. Application ID    screenOrientation Array  Gravity sensing, horizontal and vertical screen configuration, possible values: \u0026ldquo;portrait-primary\u0026rdquo;: vertical screen forward direction; \u0026ldquo;portrait-secondary\u0026rdquo;: vertical screen reverse direction; \u0026ldquo;landscape-primary\u0026rdquo;: horizontal screen forward direction; \u0026ldquo;landscape-secondary\u0026rdquo;: The reverse direction of horizontal screen.    description String  Application description    versionName String  Version name, for example: 1.0.0. See the Tips description below for details    versionCode String  Version number, for example: 36    transformPx Boolean true Whether to convert the px of the project, when true, convert px to rpx, when false, px is the traditional actual pixel    networkTimeout Object  Network timeout time    debug Boolean false Debug mode is turned on, after opening the debug information infogiven in the form, the information pages have registered, page routing, data updates, event triggers, etc.    uniStatistics Object  Whether to enable uni statistics, global configuration 2.2.3+    Tips\n uni-app of appidthe cloud DCloud allocated, mainly for DCloud related cloud service, do not modify. Note the distinction between uni-app appidwith other platforms WeChat applets, iOS like distribution appid, and the third party SDK appid. versionName is used when cloud packaging App and generating wgt application resources. If you need to upgrade the App version, first modify this and then cloud packaging. Exporting wgt resources for offline packaging and hot updates will also be based on this version. During local packaging and hot update, the App version and wgt application resource version will no longer be consistent. By this time plus.runtime.version available App version, by plus.runtime.getProperty get wgt resource version.  networkTimeout\r#\r\rThe timeout period of various network requests, in milliseconds.\n   Attributes Types of Required Defaults Description     request Number no 60000 The timeout period of uni.request, in milliseconds.   connectSocket Number no 60000 Uni.connectSocket timeout time, in milliseconds.   uploadFile Number no 60000 The timeout period of uni.uploadFile, in milliseconds.   downloadFile Number no 60000 The timeout period of uni.downloadFile, in milliseconds.    Since HBuilderX 2.5.10then, the above-mentioned default timeout period has been changed from 6 seconds to 60 seconds, aligning with the WeChat applet platform.\nuniStatistics\r#\r\runi statistics configuration items\n   Attributes Types of Required Defaults Description     enable Boolean Yes true Whether to enable uni statistics    optimization\r#\r\rThe subcontracting of the applet can reduce the number of js loaded at startup and increase the startup speed in addition to the segmented download on the Internet.\nStarting from uni-app 2.7.12+, the App-vue platform is also compatible with the sub-package configuration of applets, but it is not enabled by default.\nConfigure the following nodes in the manifest to start subcontracting on the App side.\n   Attributes Types of Description     subPackages Boolean Whether to enable subcontracting optimization    \u0026quot;app-plus\u0026quot;: {\r\u0026quot;optimization\u0026quot;: {\r\u0026quot;subPackages\u0026quot;: true\r},\r\u0026quot;runmode\u0026quot; : \u0026quot;liberate\u0026quot; // After the subcontracting optimization is enabled, the resource release mode must be configured\r}\rAfter starting the subpackage in the manifest, you need to configure specific subpackage rules in pages.json, which are the same as the configuration of the applet.\nThat is, once subcontracting is configured in pages.json, the applet must take effect, and whether the app takes effect depends on whether it is enabled in the manifest.\nnote:\n After the app is sub-packaged, each sub-package is separately compiled into a js file (all included in the app and will not be downloaded on the Internet). When the home page of the App is vue, the startup loading file size can be reduced and the startup speed can be improved. When the homepage is nvue, subcontracting will not increase the startup speed, and the startup speed of nvue itself is faster than vue, and faster than the application whose homepage is vue after opening the subcontracting. If you pursue the ultimate startup speed, you should still use nvue as the home page and enable fast mode in the manifest. When there are few App pages, the optimization of startup speed by subcontracting is not obvious.  nvue\r#\r\rnvue Initial page layout settings\n   Attributes Types of description     flex-direction String The arrangement direction of flex member items, support items, row: from left to right; row-reverse: from right to left; column: from top to bottom; column-reverse: opposite to column, the default value is column.    "}),a.add({id:69,href:'/docs/%E6%A1%86%E6%9E%B6/%E9%85%8D%E7%BD%AE/pages.json/pages/',title:"Pages",section:"配置",content:"pages.json The file is used to configure uni-app globally, determine the path of the page file, window style, native navigation bar, native tabbar at the bottom, etc.\nIt is similar to app.jsonthe page management part of the WeChat applet . Note that app.jsonthe content that originally belonged to the location permission application is configured in the manifest in the uni-app.\nList of configuration items\r#\r\r   Attributes Types of Required description Platform compatible     globalStyle Object no Set the window performance of the default page    pages Object Array Yes Set page path and window performance    easycom Object no Automatic component introduction rules 2.5.5+   tabBar Object no Set the performance of the bottom tab    condition Object no Start mode configuration    subPackages Object Array no Subcontract loading configuration     The following is one that includes all configuration options pages.json:\n{ \u0026#34;pages\u0026#34;: [{ \u0026#34;path\u0026#34;: \u0026#34;pages/component/index\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;navigationBarTitleText\u0026#34;: \u0026#34;component\u0026#34; } }, { \u0026#34;path\u0026#34;: \u0026#34;pages/API/index\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;navigationBarTitleText\u0026#34;: \u0026#34;interface\u0026#34; } }, { \u0026#34;path\u0026#34;: \u0026#34;pages/component/view/index\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;navigationBarTitleText\u0026#34;: \u0026#34;view\u0026#34; } }], \u0026#34;condition\u0026#34;: { //Pattern configuration, effective only during development  \u0026#34;current\u0026#34;: 0, //The currently active schema (List\u0026#39;s index entries)  \u0026#34;list\u0026#34;: [{ \u0026#34;name\u0026#34;: \u0026#34;test\u0026#34;, //Model name  \u0026#34;path\u0026#34;: \u0026#34;pages/component/view/index\u0026#34; //Startup page, required  }] }, \u0026#34;globalStyle\u0026#34;: { \u0026#34;navigationBarTextStyle\u0026#34;: \u0026#34;black\u0026#34;, \u0026#34;navigationBarTitleText\u0026#34;: \u0026#34;demo\u0026#34;, \u0026#34;navigationBarBackgroundColor\u0026#34;: \u0026#34;#F8F8F8\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;#F8F8F8\u0026#34;, \u0026#34;usingComponents\u0026#34;:{ \u0026#34;collapse-tree-item\u0026#34;:\u0026#34;/components/collapse-tree-item\u0026#34; }, \u0026#34;rpxCalcMaxDeviceWidth\u0026#34;: 960, \u0026#34;rpxCalcBaseDeviceWidth\u0026#34;: 375, \u0026#34;rpxCalcIncludeWidth\u0026#34;: 750 }, \u0026#34;tabBar\u0026#34;: { \u0026#34;color\u0026#34;: \u0026#34;#7A7E83\u0026#34;, \u0026#34;selectedColor\u0026#34;: \u0026#34;#3cc51f\u0026#34;, \u0026#34;borderStyle\u0026#34;: \u0026#34;black\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;#ffffff\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;50px\u0026#34;, \u0026#34;fontSize\u0026#34;: \u0026#34;10px\u0026#34;, \u0026#34;iconWidth\u0026#34;: \u0026#34;24px\u0026#34;, \u0026#34;spacing\u0026#34;: \u0026#34;3px\u0026#34;, \u0026#34;list\u0026#34;: [{ \u0026#34;pagePath\u0026#34;: \u0026#34;pages/component/index\u0026#34;, \u0026#34;iconPath\u0026#34;: \u0026#34;static/image/icon_component.png\u0026#34;, \u0026#34;selectedIconPath\u0026#34;: \u0026#34;static/image/icon_component_HL.png\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;component\u0026#34; }, { \u0026#34;pagePath\u0026#34;: \u0026#34;pages/API/index\u0026#34;, \u0026#34;iconPath\u0026#34;: \u0026#34;static/image/icon_API.png\u0026#34;, \u0026#34;selectedIconPath\u0026#34;: \u0026#34;static/image/icon_API_HL.png\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;interface\u0026#34; }], \u0026#34;midButton\u0026#34;: { \u0026#34;width\u0026#34;: \u0026#34;80px\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;50px\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;The text\u0026#34;, \u0026#34;iconPath\u0026#34;: \u0026#34;static/image/midButton_iconPath.png\u0026#34;, \u0026#34;iconWidth\u0026#34;: \u0026#34;24px\u0026#34;, \u0026#34;backgroundImage\u0026#34;: \u0026#34;static/image/midButton_backgroundImage.png\u0026#34; } }, \u0026#34;easycom\u0026#34;: { \u0026#34;autoscan\u0026#34;: true, //Whether to automatically scan components  \u0026#34;custom\u0026#34;: {//Custom scanning rules  \u0026#34;^uni-(.*)\u0026#34;: \u0026#34;@/components/uni-$1.vue\u0026#34; } }, \u0026#34;topWindow\u0026#34;: { \u0026#34;path\u0026#34;: \u0026#34;responsive/top-window.vue\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;height\u0026#34;: \u0026#34;44px\u0026#34; } }, \u0026#34;leftWindow\u0026#34;: { \u0026#34;path\u0026#34;: \u0026#34;responsive/left-window.vue\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;width\u0026#34;: \u0026#34;300px\u0026#34; } }, \u0026#34;rightWindow\u0026#34;: { \u0026#34;path\u0026#34;: \u0026#34;responsive/right-window.vue\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;width\u0026#34;: \u0026#34;300px\u0026#34; }, \u0026#34;matchMedia\u0026#34;: { \u0026#34;minWidth\u0026#34;: 768 } } } globalStyle\r#\r\rUsed to set the status bar, navigation bar, title, window background color of the application, etc.\n   Attributes Types of Defaults description     navigationBarBackgroundColor HexColor # F7F7F7 Navigation bar background color (same as status bar background color)   navigationBarTextStyle String white Navigation bar title color and status bar foreground color, only black/white supported   navigationBarTitleText String  Navigation bar title text content   enablePullDownRefresh Boolean false Whether to enable pull-down refresh   onReachBottomDistance Number 50 The distance from the bottom of the page when the page pull-down event is triggered, the unit only supports px   usingComponents Object  References small program components    note\n The picture link address that titleImagemust be used when using httpsthe Alipay applet , it needs to be debugged on the real machine to see the effect, there is no effect in the Alipay developer tool globalStyleThe setting in -\u0026gt; titleImagewill also override the setting text title inpages``style Use maxWidth, the fixed elements within the page need to use \u0026ndash;window-left, - window-right layout to ensure the correct position  topWindow\r#\r\runi-app 2.9+ adds leftWindow, topWindow, and rightWindow configurations. Used to solve the problem of widescreen adaptation.\nTaking the existing mobile application as the mainWindow, new page display windows can be added to the left, top, and right.\n   Attributes Types of Defaults description     path String  Configure page path   style Object  Configure page window performance   matchMedia Object  Configure the rules for displaying this window    note\n Currently the style node only supports the configuration of CSS style related attributes such as width and height  matchMedia\r#\r\r   Attributes Types of Defaults description     minWidth Number 768 When the visible area width of the device \u0026gt;= minWidth, the window is displayed    Through the adjustment of matchMedia, you can adaptively display the specified window on different screens.\n{ \u0026#34;pages\u0026#34;: [ { \u0026#34;path\u0026#34;: \u0026#34;pages/login/login\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;topWindow\u0026#34;: false // The current page is not displayed topWindow  \u0026#34;leftWindow\u0026#34;: false // The current page is not displayed leftWindow  \u0026#34;rightWindow\u0026#34;: false // The current page is not displayed rightWindow  } } ], \u0026#34;topWindow\u0026#34;: { \u0026#34;path\u0026#34;: \u0026#34;responsive/top-window.vue\u0026#34;, // Specify the TopWindow page file  \u0026#34;style\u0026#34;: { \u0026#34;height\u0026#34;: \u0026#34;44px\u0026#34; } }, \u0026#34;leftWindow\u0026#34;: { \u0026#34;path\u0026#34;: \u0026#34;responsive/left-window.vue\u0026#34;, // Specify the leftWindow page file  \u0026#34;style\u0026#34;: { \u0026#34;width\u0026#34;: \u0026#34;300px\u0026#34; } }, \u0026#34;rightWindow\u0026#34;: { \u0026#34;path\u0026#34;: \u0026#34;responsive/right-window.vue\u0026#34;, // Specify the rightWindow page file  \u0026#34;style\u0026#34;: { \u0026#34;width\u0026#34;: \u0026#34;300px\u0026#34; // The page width  }, \u0026#34;matchMedia\u0026#34;: { \u0026#34;minWidth\u0026#34;: 768 //Valid condition, when the window width is greater than 768px  } } } pages\r#\r\runi-app Configure which pages the application consists of through the pages node. The pages node receives an array. Each item in the array is an object. Its attribute values are as follows:\n   Attributes Types of Defaults description     path String  Configure page path   style Object  Configure page window performance    Tips：\n The first item of the pages node is the application entry page (the home page) To add/reduce pages in the application , you need to modify the pages array The file name does not need to write a suffix , the framework will automatically find the page resource under the path  Code example:\nThe development directory is:\n┌─pages │ ├─index\r│ │ └─index.vue │ └─login\r│ └─login.vue ├─static ├─main.js ├─App.vue ├─manifest.json └─pages.json You need to fill in pages.json\n{ \u0026#34;pages\u0026#34;: [ { \u0026#34;path\u0026#34;: \u0026#34;pages/index/index\u0026#34;, \u0026#34;style\u0026#34;: { ... } }, { \u0026#34;path\u0026#34;: \u0026#34;pages/login/login\u0026#34;, \u0026#34;style\u0026#34;: { ... } } ] } style\r#\r\rUsed to set the status bar, navigation bar, title, window background color, etc. of each page.\nThe configuration items in the page will override the same configuration items in globalStyle\n   Attributes Types of Defaults description     navigationBarBackgroundColor HexColor #000000 Navigation bar background color (same as status bar background color), such as \u0026ldquo;#000000\u0026rdquo;   navigationBarTextStyle String white Navigation bar title color and status bar foreground color, only black/white supported   navigationBarTitleText String  Navigation bar title text content   navigationBarShadow Object  Navigation bar shadow, configuration reference below the navigation bar shadow   backgroundTextStyle String dark Drop-down loading style, only supports dark/light   enablePullDownRefresh Boolean false Whether to enable pull-down refresh   onReachBottomDistance Number 50 The distance from the bottom of the page when the page pull-down event is triggered, the unit only supports px    note\n Use maxWidth, the fixed elements within the page need to use \u0026ndash;window-left, - window-right layout to ensure the correct position  Code example:\n{ \u0026#34;pages\u0026#34;: [{ \u0026#34;path\u0026#34;: \u0026#34;pages/index/index\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;navigationBarTitleText\u0026#34;: \u0026#34;Home page \u0026#34;,// Set the page title text  \u0026#34;enablePullDownRefresh\u0026#34;:true//Turn on drop-down refresh  } }, ... ] } note\n The picture link address that titleImagemust be used when using httpsthe Alipay applet , it needs to be debugged on the real machine to see the effect, there is no effect in the Alipay developer tool  Note on the use of custom navigation bars\r#\r\rWhen navigationStyle is set to custom or titleNView is set to false, the native navigation bar is not displayed. At this time, there are several issues to be aware of:\n  For non-H5 devices, the status bar area at the top of the phone will be covered by the page content. This is because the form is immersive, that is, full-screen writable content. uni-app provides a css variable for the height of the status bar\n\u0026ndash;status-bar-height\n. If you need to let the position of the status bar out of the foreground, you can write a placeholder div with the height set as the css variable.\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view class=\u0026#34;status_bar\u0026#34;\u0026gt; \u0026lt;!-- Here\u0026#39;s the status bar --\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view\u0026gt; Text under the status bar \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;style\u0026gt; .status_bar { height: var(--status-bar-height); width: 100%; } \u0026lt;/style\u0026gt;   If the native navigation bar cannot meet the needs, it is recommended to use uni ui\u0026rsquo;s custom navigation bar NavBar. This front-end navigation bar automatically handles the height occupancy of the status bar.\n  For non-H5 terminals, the front-end navigation cannot cover native components. If the page has\nnative components\nsuch as video, map, textarea (small programs only) , it will cover the navigation bar when scrolling\n You can use cover-view as the navigation bar to avoid overwriting problems    The rendering speed of the front-end components is not as good as the native navigation bar. The native navigation can be rendered during the animation to ensure that the screen is not white during the animation. However, when the front-end navigation bar is used, the entire page may be white during the animation when the new form enters. The lower end The more obvious the phone.\n  The above discussion is the front-end custom navigation bar, but on the App side, the native navigation bar also provides more customization than the mini program navigation\n titleNView: Provides more configurations for the native navigation bar, including custom buttons, scrolling gradient effects, search boxes, etc. subNView: Use nvue native rendering, all layouts are developed by yourself, with all customization flexibility.    After the native navigation bar is disabled on the page, if you want to change the foreground font style of the status bar, you can still set the navigationBarTextStyle property of the page (only black or white). If you want to set the status bar color separately, you can use plus.navigator.setStatusBarStyle to set the App . Note that some low-end Android phones (4.4) do not support setting the foreground color of the status bar.\n  In view of the above problems, when native navigation can solve business needs, try to use native navigation. Sometimes it is even necessary to sacrifice some less important requirements. Under App and H5, uni-app provides flexible solutions: titleNView , subNVue , or nvue for the entire page. But under the small program, because of its own limitations, there is no good solution. If necessary, you can also use conditional compilation to deal with it separately.\nNavigation Bar\r#\r\r   Attributes Types of Defaults description Version compatibility     backgroundColor String # F7F7F7 The background color, the color value format is \u0026ldquo;#RRGGBB\u0026rdquo;. When using a semi-transparent title bar, you can also set the rgba format    buttons Array  Custom buttons Pure nvue is render: not currently supported when native   titleColor String #000000 Title text color    titleOverflow String ellipsis The processing method when the title text exceeds the display area. \u0026ldquo;clip\u0026rdquo;-the content is clipped when it exceeds the display area; \u0026ldquo;ellipsis\u0026rdquo;-an ellipsis (\u0026hellip;) is displayed at the end when it exceeds the display area.    titleText String  Title text content    titleSize String  Title text font size    type String default Navigation bar style. \u0026ldquo;default\u0026rdquo;-default style; \u0026ldquo;transparent\u0026rdquo;-scrolling transparent gradient; \u0026ldquo;float\u0026rdquo;-floating navigation bar. App-nvue 2.4.4+ support   tags Array  Native View enhancement    searchInput Object  The search box configuration on the native navigation bar 1.6.0   homeButton Boolean false Whether the title bar control displays the Home button    autoBackButton Boolean true Whether the title bar control displays the left back button 2.6.3   backButton Object  The style of the back button 2.6.3   backgroundImage String  The following types are supported: Background image path-such as \u0026ldquo;./img/t.png\u0026rdquo;, only supports local file path, relative path, relative to the host location of the current page, drawn according to the actual title bar width and height; gradient color-only Support linear gradient, two-color gradient, such as \u0026ldquo;linear-gradient(to top, #a80077, #66ff00)\u0026rdquo;, where the first parameter is the direction of the gradient, which can be a value: \u0026ldquo;to right\u0026rdquo; means gradient from left to right , \u0026ldquo;To left\u0026rdquo; means gradient from right to left, \u0026ldquo;to bottom\u0026rdquo; means gradient from top to bottom, \u0026ldquo;to top\u0026rdquo; means gradient from bottom to top, \u0026ldquo;to bottom right\u0026rdquo; means from upper left corner to lower right corner, \u0026ldquo;to top\u0026rdquo; \u0026ldquo;left\u0026rdquo; means from the lower right corner to the upper left corner 2.6.3   backgroundRepeat String  Only valid when backgroundImage is set to the image path. Possible values: \u0026ldquo;repeat\u0026rdquo;-the background image is tiled vertically and horizontally; \u0026ldquo;repeat-x\u0026rdquo;-the background image is tiled horizontally and stretched vertically; \u0026ldquo;repeat-y\u0026rdquo;-the background image is tiled vertically Shop, stretch horizontally; \u0026ldquo;no-repeat\u0026rdquo;-the background image stretches both vertically and horizontally. \u0026ldquo;No-repeat\u0026rdquo; is used by default 2.6.3   titleAlign String \u0026ldquo;auto\u0026rdquo; Possible values: \u0026ldquo;center\u0026rdquo;-align to the center; \u0026ldquo;left\u0026rdquo;-align to the left; \u0026ldquo;auto\u0026rdquo;-automatically select according to the platform (left-aligned on Android platform, center-aligned on iOS platform) 2.6.3   blurEffect String \u0026ldquo;none\u0026rdquo; This effect will display the content behind the title bar in a Gaussian blur. It is only effective when the type is \u0026ldquo;transparent\u0026rdquo; or \u0026ldquo;float\u0026rdquo;. Possible values: \u0026ldquo;dark\u0026rdquo;-dark style blur, corresponding to iOS native UIBlurEffectStyleDark effect; \u0026ldquo;extralight\u0026rdquo;-highlight style blur, corresponding to iOS native UIBlurEffectStyleExtraLight effect; \u0026ldquo;light\u0026rdquo;-bright style blur, corresponding to iOS native UIBlurEffectStyleLight effect; \u0026ldquo;none\u0026rdquo; -No blur effect. Note: Avoid setting the background color when using the blur effect. Setting the background color may cover the blur effect. 2.4.3   coverage String \u0026ldquo;132px\u0026rdquo; The change scope of the title bar control is only valid when the type value is transparent. The transparency of the title bar background will change when the page is scrolled. The title bar background becomes completely opaque when the page scrolls to the specified offset. Support percentage, pixel value    splitLine Boolean false The bottom split line of the title bar (SplitLineStyles), set this property to display the split line at the bottom of the title bar control, and the color value and height can be configured. Set this property to undefined or null to hide the dividing line. The bottom dividing line is not displayed by default 2.6.6   subtitleColor String  The color of the subtitle text. The color value format is \u0026ldquo;#RRGGBB\u0026rdquo; and \u0026ldquo;rgba(R,G,B,A)\u0026rdquo;. For example, \u0026ldquo;#FF0000\u0026rdquo; means the color of the title text is red. The default value is the same as the main title text color 2.6.6   subtitleSize String \u0026ldquo;auto\u0026rdquo; The font size of the subtitle text. The font size unit is pixels. For example, \u0026ldquo;14px\u0026rdquo; means the font size is 14 pixels, and the default value is 12 pixels. 2.6.6   subtitleOverflow String \u0026ldquo;ellipsis\u0026rdquo; The processing method when the title text exceeds the display area, the possible values are: \u0026ldquo;clip\u0026rdquo;-the content is clipped when it exceeds the display area; \u0026ldquo;ellipsis\u0026rdquo;-the ellipsis (\u0026hellip;) is displayed at the end when it exceeds the display area. 2.6.6   subtitleText String  Subtitle text content. After setting the subtitle, two lines of title will be displayed, and the subtitle will be displayed below the main title (titleText). Note: After setting the subtitle, it will be displayed on the left 2.6.6   titleIcon String  Title icon, icon path such as \u0026ldquo;./img/t.png\u0026rdquo;, only supports local file path, relative path, relative to the host position of the current page, fixed width and height are logical pixel value \u0026ldquo;34px\u0026rdquo;. The width and height of the pictures must be the same. Note: The title will be displayed on the left after setting the title icon. 2.6.6   titleIconRadius String No rounded corners The rounded corners of the title icon, the value format is \u0026ldquo;XXpx\u0026rdquo;, where XX is the pixel value (logical pixels), for example, \u0026ldquo;10px\u0026rdquo; means a 10-pixel radius rounded corner. 2.6.6    SplitLineStyles\r#\r\r   Attributes Types of Defaults description Version compatibility     color String #CCCCCC The color of the bottom dividing line, which can take the value: \u0026ldquo;#RRGGBB\u0026rdquo; format string, such as \u0026ldquo;#FF0000\u0026rdquo; means drawing a red dividing line; \u0026ldquo;rgba(R,G,B,A)\u0026rdquo;, where R/G/B stands for red respectively Value/green value/blue value, positive integer type, value range is 0-255, A is transparency, floating point type, value range is 0-1 (0 is fully transparent, 1 is opaque), such as \u0026ldquo;rgba (255,0,0,0.5)\u0026rdquo;, which means red translucent    height String \u0026ldquo;1px\u0026rdquo; Possible values: pixel value (logical pixel), decimal point is supported, such as \u0026ldquo;1px\u0026rdquo; means 1 pixel high; percentage, such as \u0026ldquo;1%\u0026rdquo;, relative to the height of the title bar control.     Tips\n The page supports disabling the native navigation bar by configuring navigationStyle to custom or titleNView to false. titleNViewThe typevalue of transparenttime, the navigation bar to scroll transparent gradient navigation bar, only the default button, and scroll the title bar gradient background and title text will appear; typeas float, the navigation bar title bar for the suspension, this time on top of the top of the screen to page content , Including the status bar, but the navigation bar is floating over the top of the page. Generally, in this scenario, the background color of the navigation bar will be set to the semi-transparent color of rgba. titleNViewThe typevalue of transparenttime, App-nvue 2.4.4+ support In the titleNViewconfiguration buttons, the monitor button click event, vue page and nvue of weex compilation mode reference: uni.onNavigationBarButtonTap In the titleNViewconfiguration searchInput, the related event listener Reference: onNavigationBarSearchInputChanged etc. Can [\u0026lt;navigation-bar\u0026gt;(/component/navigation-bar)]configure If the buttons of the native navigation bar under the App use font icons, pay attention to check whether the name of the font library (font-family) uses the default iconfont. This name is a reserved word and cannot be used as the name of an externally imported font library. It needs to be adjusted to self The defined name, otherwise it cannot be displayed.  Custom button\r#\r\r   Attributes Types of Defaults description     type String none Button style, see   color String The default color is the same as the title text Text color on button   background String The default value is gray translucent The background color of the button, only takes effect when the title bar type=transparent   colorPressed String The default value is the color attribute value and the transparency is automatically adjusted to 0.3 Press state button text color   float String right The display position of the button on the title bar, the values can be \u0026ldquo;left\u0026rdquo;, \u0026ldquo;right\u0026rdquo;   fontWeight String normal The thickness of the text on the button. Possible values are \u0026ldquo;normal\u0026rdquo;-standard font, \u0026ldquo;bold\u0026rdquo;-bold font.   fontSize String  The size of the text on the button   fontSrc String  The font file path used for the text on the button. Network addresses are not supported, please use local addresses uniformly.   select String false Whether to display the selection indicator icon (down arrow), often used for city selection   text String  The text displayed on the button. When using font icons, unicode characters must start with'\\u', such as \u0026ldquo;\\ue123\u0026rdquo; (note that it cannot be written as \u0026ldquo;\\e123\u0026rdquo;).   width String 44px The width of the button, possible values: \u0026ldquo;*px\u0026rdquo;-logical pixel value, such as \u0026ldquo;10px\u0026rdquo; means 10 logical pixel value, rpx is not supported. The content of the button is displayed in the center; \u0026ldquo;auto\u0026rdquo;-customize the calculated width, and automatically adjust the button width according to the content    Customize the style of the back button\r#\r\rIt takes effect when autoBackButton is set to true. Through this property, you can customize the style of the return button, such as icon size, red dot, corner label, title, etc.\nHBuilderX 2.6.3+ support\n   Attributes Types of Defaults description     background String none The background color is only effective when the title bar type=transparent. The background color of the button when the title bar is transparent. Possible values are #RRGGBB and rgba format color strings. The default value is gray and semi-transparent.   badgeText String  Subscript text, display up to 3 characters, if it exceeds, it will be displayed as\u0026hellip;   color String The title text color of the window title bar control. Icon and title color, possible values: \u0026ldquo;#RRGGBB\u0026rdquo; format string, such as \u0026ldquo;#FF0000\u0026rdquo; means red; \u0026ldquo;rgba(R,G,B,A)\u0026rdquo;, where R/G/B stands for red value/green respectively Value/blue value, positive integer type, value range is 0-255, A is transparency, floating point type, value range is 0-1 (0 is fully transparent, 1 is opaque), such as \u0026ldquo;rgba(255, 0,0,0.5)\u0026rdquo;, which means red translucent.   colorPressed String  Press the status button text color, the value can be: \u0026ldquo;#RRGGBB\u0026rdquo; format string, such as \u0026ldquo;#FF0000\u0026rdquo; means red; \u0026ldquo;rgba(R,G,B,A)\u0026rdquo;, where R/G/B respectively represent the red value /Green value/blue value, positive integer type, the value range is 0-255, A is transparency, floating point type, the value range is 0-1 (0 is fully transparent, 1 is opaque), such as \u0026ldquo;rgba( 255,0,0,0.5)\u0026rdquo;, which means red translucent. The default value is the color attribute value and the transparency is automatically adjusted to 0.3.   fontWeight String \u0026ldquo;normal\u0026rdquo; Returns the thickness of the icon. Possible values: \u0026ldquo;normal\u0026rdquo;-standard font; \u0026ldquo;bold\u0026rdquo;-bold font.   fontSize String  Returns the icon text size, possible values: font height pixel value, number plus \u0026ldquo;px\u0026rdquo; format string, such as \u0026ldquo;22px\u0026rdquo;. When the window title bar is a transparent style (type=\u0026ldquo;transparent\u0026rdquo;), the default value is \u0026ldquo;22px\u0026rdquo;; when the window title bar is a default style (type=\u0026ldquo;default\u0026rdquo;), the default value is \u0026ldquo;27px\u0026rdquo;.   redDot Boolean false Whether to display the red dot, set to true to display the red dot, false to not display the red dot. The default value is false. Note: The red dot is not displayed when the corner mark text is set.   title String  The title on the back button, displayed after the back icon (font icon), is an empty string by default.   ftitleWeight String \u0026ldquo;normal\u0026rdquo; The thickness of the title on the return button, the possible values are: \u0026ldquo;normal\u0026rdquo;-standard font; \u0026ldquo;bold\u0026rdquo;-bold font.   fontSize String \u0026ldquo;16px\u0026rdquo; The font size of the title. Possible values: font height pixel value, number plus \u0026ldquo;px\u0026rdquo; format string, such as \u0026ldquo;22px\u0026rdquo;.    Button style\r#\r\rWhen using the type value to style the button, the fontSrc and text attributes are ignored.\n   value Description     forward Forward button   back Back button   share Share button   favorite Favorite button   home Home button   menu Menu button   close Close button   none No style, you need to set the content displayed on the button through the text property, and set the font library used through the fontSrc property.    Search box configuration\r#\r\rsearchInput can place a search box on the native navigation bar of titleNView. Its width adapts to surrounding elements.\n   Attributes Types of Defaults description     autoFocus Boolean false Whether to automatically get focus   align String center The alignment of the text in the non-input state. Possible values: \u0026ldquo;left\u0026rdquo;-align to the left; \u0026ldquo;right\u0026rdquo;-align to the right; \u0026ldquo;center\u0026rdquo;-align to the center.   backgroundColor String rgba (255,255,255,0.5) background color   borderRadius String 0px The fillet radius of the input box, the value format is \u0026ldquo;XXpx\u0026rdquo;, where XX is the pixel value (logical pixel), rpx is not supported.   placeholder String  Prompt text.   placeholderColor String #CCCCCC Prompt text color   disabled Boolean false Can input    searchInput Tips\nThe life cycle of searchInput click input box onNavigationBarSearchInputClicked, text change onNavigationBarSearchInputChanged, click search button onNavigationBarSearchInputConfirmed, etc.\n Through the parameter e.text in the life cycle, the content of the input box can be obtained. For details, see the template in the hello uni-app-the example in the top navigation bar If you need to modify searchInput dynamically, or get the placehold of searchInput  Common titleNView configuration code examples\nSome configurations are listed below. Regarding the comprehensive navigation bar configuration, here is a complete demonstration project that demonstrates the various effects of the navigation bar.\n{ \u0026#34;pages\u0026#34;: [{ \u0026#34;path\u0026#34;: \u0026#34;pages/index/index\u0026#34;, //Home page  \u0026#34;style\u0026#34;: { \u0026#34;app-plus\u0026#34;: { \u0026#34;titleNView\u0026#34;: false //Disable native navigation  } } }, { \u0026#34;path\u0026#34;: \u0026#34;pages/log/log\u0026#34;, //Log pages  \u0026#34;style\u0026#34;: { \u0026#34;app-plus\u0026#34;: { \u0026#34;bounce\u0026#34;: \u0026#34;none\u0026#34;, //Turn off window bounces  \u0026#34;titleNView\u0026#34;: { \u0026#34;buttons\u0026#34;: [ //Native title bar button configuration,  { \u0026#34;text\u0026#34;: \u0026#34;Share\u0026#34; // Add a Share button to the native title bar. Clicking events can be monitored by the onNavigationBarButtonTap function of the page  } ], \u0026#34;backButton\u0026#34;: { //Custom backButton  \u0026#34;background\u0026#34;: \u0026#34;#00FF00\u0026#34; } } } } }, { \u0026#34;path\u0026#34;: \u0026#34;pages/detail/detail\u0026#34;, //Details page  \u0026#34;style\u0026#34;: { \u0026#34;navigationBarTitleText\u0026#34;: \u0026#34;Details\u0026#34;, \u0026#34;app-plus\u0026#34;: { \u0026#34;titleNView\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;transparent\u0026#34;//Transparent gradient navigation bar app-nvue 2.4.4+ support  } } } }, { \u0026#34;path\u0026#34;: \u0026#34;pages/search/search\u0026#34;, //Search page  \u0026#34;style\u0026#34;: { \u0026#34;app-plus\u0026#34;: { \u0026#34;titleNView\u0026#34;: { \u0026#34;type\u0026#34;: \u0026#34;transparent\u0026#34;,//Transparent gradient navigation bar app-nvue 2.4.4+ support  \u0026#34;searchInput\u0026#34;: { \u0026#34;backgroundColor\u0026#34;: \u0026#34;#fff\u0026#34;, \u0026#34;borderRadius\u0026#34;: \u0026#34;6px\u0026#34;, // Rounded corner of input box  \u0026#34;placeholder\u0026#34;: \u0026#34;Please enter your search \u0026#34;, \u0026#34;disabled\u0026#34;: true //When Disable, click the input box out of focus, can jump to the new page search  } } } } } ... ] } Tips\n It is recommended to use font icons for the text of buttons. If you use Chinese or English, it is recommended to change the font size smaller, otherwise the text length will increase and the distance to the right of the screen will be too close.  Native child form\r#\r\rsubNVuesIt is the native child form of the vue page. Used to solve the hierarchical coverage in the vue page in the App and the flexible customization of the native interface.\nIt is not a full-screen page, nor a component, but a native child form. It is an nvue page, rendered using the weex engine, and provides more powerful native typesetting capabilities than cover-view and plus.nativeObj.view, which is convenient for customizing native navigation or covering native maps, videos, etc.\nsubNVueIt can also be used in the nvue page. But currently it is not supported under pure nvue (render is native).\n   Attributes Types of description     id String The identity of subNVue native subform   path String Configure the nvue file path, the nvue file needs to be placed in the page file directory using subNvue   type String Native child window built-in style, possible values:\u0026lsquo;popup\u0026rsquo;, pop-up layer; \u0026ldquo;navigationBar\u0026rdquo;, navigation bar   style Object The style of subNVue native sub-form, the configuration items refer to subNVuesStyle below    Tips\n subNVuesThe idglobally unique, can not be repeated By uni.getSubNVueById ( \u0026lsquo;id\u0026rsquo;) acquired subNVuesinstance subNVuesThe pathproperty is only nvuea file path  Native child form style\r#\r\r   Attributes Types of Defaults description     position String absolute The layout position of the native child form. The layout position determines the positioning method of the native child form in the parent window. Possible values: \u0026ldquo;static\u0026rdquo;, the native subform is positioned normally on the page, if the page has a scroll bar, it will scroll with the window content; \u0026ldquo;absolute\u0026rdquo;, the native subform is absolutely positioned on the page, if the page has a scroll bar, it will not follow the window Content scrolling; \u0026ldquo;dock\u0026rdquo;, the native child form is docked in the page, and the docking position is determined by the value of the dock property. The default value is \u0026ldquo;absolute\u0026rdquo;.   though String bottom The docking method of the native child form takes effect only when the native child form’s \u0026ldquo;position\u0026rdquo; property value is set to \u0026ldquo;dock\u0026rdquo;, the value can be: \u0026ldquo;top\u0026rdquo;, the native child form is docked at the top of the page; \u0026ldquo;bottom\u0026rdquo;, native The subform is docked at the bottom of the page; \u0026ldquo;right\u0026rdquo;, the native subform is docked on the right side of the page; \u0026ldquo;left\u0026rdquo;, the native subform is docked on the left side of the page. The default value is \u0026ldquo;bottom\u0026rdquo;.   mask HexColor rgba (0,0,0,0.5) The mask layer of the native subform will only take effect when the \u0026ldquo;type\u0026rdquo; attribute value of the native subform is set to \u0026ldquo;popup\u0026rdquo;. Values are: rgba format string, which defines the solid color mask layer style, such as \u0026ldquo;rgba(0 ,0,0,0.5)\u0026rdquo;, which means black translucent;   width String 100% The width of the native child form supports percentages and pixel values. The default is 100%. When the width attribute value is not set, the left and right attribute values can be set at the same time to change the default width of the window.   height String 100% The height of the native child form, supports percentage, pixel value, the default is 100%. When the height attribute value is not set, the top and bottom attribute values are given priority to calculate the height of the native child form.   top String 0px The vertical downward offset of the native child form. It supports percentage and pixel value. The default value is 0px. When the top attribute value is not set, the bottom and height attribute values are first used to calculate the top position of the native child form.   bottom String  The vertical upward offset of the native child form supports percentages and pixel values. The default value has no value (automatically calculated based on the top and height attribute values). When the top and height values are set at the same time, this attribute value is ignored; when the height value is not set, the height of the native child form can be determined by the top and bottom attribute values.   left String 0px The horizontal leftward offset of the native child form. It supports percentage and pixel value. The default value is 0px. When the left attribute value is not set, the left position of the native child form is calculated by the right and width attribute values first.   right String  The horizontal offset of the native child form to the right, supports percentages, pixel values, and no value by default (automatically calculated based on the left and width attribute values). When the left and width values are set, this property value is ignored; when the width value is not set, the width of the native child form can be determined by the left and bottom property values.   margin String  The margin of the native child form is used to locate the position of the native child form. It supports auto, which means centering. If left, right, top, bottom are set, the corresponding margin value is invalid.   zindex Number  The stacking order value of the windows of the native child form. A window with a higher stacking order will always be in front of a window with a lower stacking order, and a window with the same stacking order will be in front after the show method is called.   background String #FFFFFF For the background color of the window, the \u0026ldquo;transparent\u0026rdquo; background transparent style is only supported by Android platform 4.0 and above. For example, when subnvue is rounded, it needs to be set to transparent to see the correct effect.    Code example\n{ \u0026#34;pages\u0026#34;: [{ \u0026#34;path\u0026#34;: \u0026#34;pages/index/index\u0026#34;, //Home page  \u0026#34;style\u0026#34;: { \u0026#34;app-plus\u0026#34;: { \u0026#34;titleNView\u0026#34;: false , //Disable native navigation  \u0026#34;subNVues\u0026#34;:[{//Lateral spreads menu  \u0026#34;id\u0026#34;: \u0026#34;drawer\u0026#34;, //The ID of the subNVUE can be obtained via uni.getSubNVUEBYID (\u0026#39;drawer\u0026#39;)  \u0026#34;path\u0026#34;: \u0026#34;pages/index/drawer.nvue\u0026#34;, // Nvue path  \u0026#34;style\u0026#34;: { //WebView Style subsets, documents can be temporarily opened out of location, size - dependent configuration  \u0026#34;position\u0026#34;: \u0026#34;popup\u0026#34;, //Other than POPUP, refer to the 5+ WebView Position document for value fields  \u0026#34;width\u0026#34;: \u0026#34;50%\u0026#34; } }, {//Pop-up layer  \u0026#34;id\u0026#34;: \u0026#34;popup\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;pages/index/popup\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;position\u0026#34;: \u0026#34;popup\u0026#34;, \u0026#34;margin\u0026#34;:\u0026#34;auto\u0026#34;, \u0026#34;width\u0026#34;: \u0026#34;150px\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;150px\u0026#34; } }, {//The custom head  \u0026#34;id\u0026#34;: \u0026#34;nav\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;pages/index/nav\u0026#34;, \u0026#34;style\u0026#34;: { \u0026#34;position\u0026#34;: \u0026#34;dock\u0026#34;, \u0026#34;height\u0026#34;: \u0026#34;44px\u0026#34; } }] } } }] } Pull down to refresh\r#\r\rUnder the App platform, you can customize the partial pull-down refresh configuration page-\u0026gt;app-plus-\u0026gt;pullToRefresh.\n   Attributes Types of Defaults description     support Boolean false Whether to enable the pull-down refresh function of the window   color String # 2BD009 The color value format is \u0026ldquo;#RRGGBB\u0026rdquo;. Only the \u0026ldquo;circle\u0026rdquo; style pull-down refresh supports this attribute.   style String The Android platform is circle; the iOS platform is default. Possible values: \u0026ldquo;default\u0026rdquo;-classic pull-down refresh style (the page content follows when the pull-down is dragged); \u0026ldquo;circle\u0026rdquo;-circle style pull-down refresh control style (only the refresh control follows when the pull-down drags).   height String  The pull-down height of the window\u0026rsquo;s pull-down refresh control to enter the refresh state. Support percentage, such as \u0026ldquo;10%\u0026quot;; pixel value, such as \u0026ldquo;50px\u0026rdquo;, does not support rpx.   range String  The window can be dragged down and dropped. Support percentage, such as \u0026ldquo;10%\u0026quot;; pixel value, such as \u0026ldquo;50px\u0026rdquo;, does not support rpx.   offset String 0px Pull down to refresh the starting position of the control. It is only valid for the \u0026ldquo;circle\u0026rdquo; style pull-down refresh control, and is used to define the starting position when the refresh control pulls down. Support percentage, such as \u0026ldquo;10%\u0026quot;; pixel value, such as \u0026ldquo;50px\u0026rdquo;, does not support rpx. If you use a non-native title and need to pull down to refresh, generally use the circle method and adjust the offset to the height of the custom title   contentdown Object  Currently supports one attribute: caption-pull down to refresh the title content displayed on the control when the pull-down can be refreshed. Only valid for \u0026ldquo;default\u0026rdquo; style pull-down refresh control.   contentover Object  Currently supports one attribute: caption-pull down to refresh the title content displayed on the control when the refreshable state is released. Only valid for \u0026ldquo;default\u0026rdquo; style pull-down refresh control.   contentrefresh Object  Currently supports one attribute: caption-pull down to refresh the title content displayed on the control when the state is being refreshed. Only valid for \u0026ldquo;default\u0026rdquo; style pull-down refresh control.    Pull down to refresh use note\n enablePullDownRefreshAnd pullToRefresh-\u0026gt;supportsetting at the same time, which is a higher priority. If it is desired on the App and open the drop-down refresh applets are then configure the page enablePullDownRefreshattribute to true. If only expect to open the drop-down refresh on the App, you do not configure the page enablePullDownRefreshattributes, but the configuration pullToRefresh-\u0026gt;supportis true. When the native pull-down refresh is turned on, the full-screen high scroll-view should not be used in the page. When the content is dragged down, the pull-down refresh will be triggered first instead of the scroll-view scroll The starting position of the native pull-down refresh is below the native navigation bar. If you cancel the native navigation bar and use a custom navigation bar, the position of the native pull-down refresh will be at the top of the screen. If you want to pull below the custom navigation bar, you can only use the circle method to pull down to refresh, and set the offset parameter to adjust the starting position of the circle circle to the bottom of the custom navigation bar. There are examples in the extension component of hello uni-app. If you want to achieve more complex pull-down refresh on the app side, such as the Meituan and Jingdong App, you can use nvue\u0026rsquo;sComponents. Starting from HBuilderX 2.0.3+, you can experience new projects by choosing news templates If you want to implement pull-down refresh on the vue page through web front-end technology, there are examples in the plug-in market, but the performance of the front-end pull-down refresh is not as good as the original one, and the complex long list will be very stuck On iOS, the default mode pull-down refresh and bounce rebound are bound. If bounce:none is set, the default pull-down refresh cannot be used.  Code example\n{ \u0026#34;pages\u0026#34;: [ { \u0026#34;path\u0026#34;: \u0026#34;pages/index/index\u0026#34;, //Home page  \u0026#34;style\u0026#34;: { \u0026#34;app-plus\u0026#34;: { \u0026#34;pullToRefresh\u0026#34;: { \u0026#34;support\u0026#34;: true, \u0026#34;color\u0026#34;: \u0026#34;#ff3333\u0026#34;, \u0026#34;style\u0026#34;: \u0026#34;default\u0026#34;, \u0026#34;contentdown\u0026#34;: { \u0026#34;caption\u0026#34;: \u0026#34;Drop down to refresh the custom text\u0026#34; }, \u0026#34;contentover\u0026#34;: { \u0026#34;caption\u0026#34;: \u0026#34;Releases refreshable custom text\u0026#34; }, \u0026#34;contentrefresh\u0026#34;: { \u0026#34;caption\u0026#34;: \u0026#34;正在刷新自定义文本\u0026#34; } } } } } ] } Navigation Bar\r#\r\r   Attributes Types of Defaults description Minimum version     backgroundColor String # F7F7F7 The background color, the color value format is \u0026ldquo;#RRGGBB\u0026rdquo;.    buttons Array  Custom buttons    titleColor String #000000 Title text color    titleText String  Title text content    titleSize String  Title text font size    type String default Navigation bar style. \u0026ldquo;default\u0026rdquo;-default style; \u0026ldquo;transparent\u0026rdquo;-transparent gradient.    searchInput Object  The style of the search box on the navigation bar 1.6.5    Custom button\r#\r\r   Attributes Types of Defaults description     type String none Button style   color String The default color is the same as the title text Text color on button   background String The default value is gray translucent The background color of the button, only takes effect when the title bar type=transparent   badgeText String  The subscript text displayed on the button, up to 3 characters, will be displayed as\u0026hellip;   colorPressed (not currently supported) String The default value is the color attribute value and the transparency is automatically adjusted to 0.3 Press state button text color   float String right The display position of the button on the title bar, the values can be \u0026ldquo;left\u0026rdquo;, \u0026ldquo;right\u0026rdquo;   fontWeight String normal The thickness of the text on the button. Possible values are \u0026ldquo;normal\u0026rdquo;-standard font, \u0026ldquo;bold\u0026rdquo;-bold font.   fontSize String  The size of the text on the button   fontSrc String  The font file path used for the text on the button.   select String false Whether to display the selection indicator icon (down arrow)   text String  The text displayed on the button. When using font icons, unicode characters must start with'\\u', such as \u0026ldquo;\\ue123\u0026rdquo; (note that it cannot be written as \u0026ldquo;\\e123\u0026rdquo;).   width String 44px The width of the button, possible values: \u0026ldquo;*px\u0026rdquo;-logical pixel value, such as \u0026ldquo;10px\u0026rdquo; means 10 logical pixel value, rpx is not supported, the content of the button is displayed in the center; \u0026ldquo;auto\u0026rdquo;-self-calculated width, automatically adjusted according to the content Button width    Button style\r#\r\rWhen using the type value to style the button, the fontSrc and text attributes are ignored.\n   value Description     forward Forward button   back Back button   share Share button   favorite Favorite button   home Home button   menu Menu button   close Close button   none No style, you need to set the content displayed on the button through the text property, and set the font library used through the fontSrc property.    Pull down to refresh\r#\r\rThe h5 platform pulls down to refresh the animation, only the circle type.\n   Attributes Types of Defaults description     color String # 2BD009 The color value format is \u0026ldquo;#RRGGBB\u0026rdquo;   offset String 0px Pull down to refresh the starting position of the control. Support percentage, such as \u0026ldquo;10%\u0026quot;; pixel value, such as \u0026ldquo;50px\u0026rdquo;, does not support rpx.    Search box style\r#\r\r   Attributes Types of Defaults description     autoFocus Boolean false Whether to automatically get focus   align String center The alignment of the text in the non-input state. Possible values: \u0026ldquo;left\u0026rdquo;-align to the left; \u0026ldquo;right\u0026rdquo;-align to the right; \u0026ldquo;center\u0026rdquo;-align to the center.   backgroundColor String rgba (255,255,255,0.5) background color   borderRadius String 0px The fillet radius of the input box, the value format is \u0026ldquo;XXpx\u0026rdquo;, where XX is the pixel value (logical pixel), rpx is not supported.   placeholder String  Prompt text   placeholderColor String #CCCCCC Prompt text color   disabled Boolean false Can input    Precautions:\n If the h5node is not configured, it will use the default app-plusconfiguration of. Configured h5nodes will override the app-plusconfiguration of.  navigationBarShadow\r#\r\r   Attributes Types of description     colorType String The color of the shadow, support: grey, blue, green, orange, red, yellow    easycom\r#\r\r HBuilderX 2.5.5Starting to support easycomcomponent mode.\n Traditional vue components need to be installed, referenced, and registered, and the components can be used after three steps. easycomReduce it to one step. As long as the components are installed in the components directory of the project and conform to the components/component name/component name.vuedirectory structure. You can use it directly on the page without quoting or registering. as follows:\n\u0026lt;template\u0026gt; \u0026lt;view class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;uni-list\u0026gt; \u0026lt;uni-list-item title=\u0026#34;The first line\u0026#34;\u0026gt;\u0026lt;/uni-list-item\u0026gt; \u0026lt;uni-list-item title=\u0026#34;The second line\u0026#34;\u0026gt;\u0026lt;/uni-list-item\u0026gt; \u0026lt;/uni-list\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; // There is no need to import, nor to register uni-list components with Components. Template can be used directly  export default { data() { return { } } } \u0026lt;/script\u0026gt; No matter how many components are installed in the components directory, easycomunused components will be automatically removed after packaging, which is particularly friendly to the use of component libraries.\nThe component library is installed in batches, used at will, and automatically packaged on demand. Take the official uni-uiexample, to select a uni-uiproject template in the HBuilderX new project interface , just hit u in the page to pull out a large number of component code blocks, select directly, and you can use it. Significantly improve development efficiency and lower the threshold for use.\nDownload components that conform to the directory structure in the components/ component name/component name.vue use them directly.\neasycomIt is automatically turned on and does not need to be turned on manually. You can perform personalized settings at pages.jsonthe easycomnode when you need it , such as turning off automatic scanning, or customizing the strategy of scanning matching components. The setting parameters are as follows:\n   Attributes Types of Defaults description     autoscan Boolean true Whether to enable automatic scanning, components/组件名称/组件名称.vuethe components that conform to the directory structure will be automatically scanned after opening   custom Object - Customize component matching rules in a regular manner. If you autoscancan’t meet your needs, you can use customcustom matching rules    Example of custom easycom configuration\nIf you need to match the vue file in node_modules, you need to use packageName/path/to/vue-file-$1.vuethe matching rule of the form, where packageNameis the installed package name and /path/to/vue-file-$1.vuethe path of the vue file in the package.\n\u0026quot;easycom\u0026quot;: {\r\u0026quot;autoscan\u0026quot;: true,\r\u0026quot;custom\u0026quot;: {\r\u0026quot;^uni-(.*)\u0026quot;: \u0026quot;@/components/uni-$1.vue\u0026quot;, // Matches the VUE file in the Components directory\r\u0026quot;^vue-file-(.*)\u0026quot;: \u0026quot;packageName/path/to/vue-file-$1.vue\u0026quot; // Matches the VUE file in node_modules\r}\r}\rDescription\n easycomComponents of the way without having to introduce within the page import, do not need to componentsdeclare within, you can use any page easycomThe way to introduce components is not global introduction, but local introduction. For example, on the H5 side, the components used will only be loaded when the corresponding page is loaded In the case that the component names are exactly the same, easycomthe priority of introduction is lower than manual introduction (distinguish between hyphenated form and camel case form) Considering the compilation speed, directly in the pages.jsonmodification within easycomnot trigger recompilation, trigger the need to change the page content. easycomOnly vue components are processed, not small program-specific components (such as WeChat\u0026rsquo;s wxml format components). Components with the suffix .nvue are not processed. But vue components can also be run at all ends, including small programs and app-nvue. You can refer to uni ui, use the vue suffix, and be compatible with nvue pages. nvue``.vueThe components that refer to the suffix on the page will use native rendering in the nvue way, and the unsupported css will be ignored. This situation also supportseasycom  tabBar\r#\r\rIf the application is a multi-tab application, you can specify the first-level navigation bar through the tabBar configuration item, and the corresponding page displayed when the tab is switched.\nProviding tabBar configuration in pages.json is not only to facilitate rapid development and navigation, but more importantly, to improve performance on App and applet terminals. On these two platforms, the underlying native engine can directly read the tabBar information configured in pages.json and render the native tab without waiting for the js engine to initialize at startup.\nTips\n When the position is set to top, the icon will not be displayed The list in the tabBar is an array, and only at least 2 tabs and at most 5 tabs can be configured. The tabs are sorted in the order of the array. The tabbar switch may not render in time when it is loaded for the first time. You can pop up a waiting snowflake in the onLoad life cycle of each tabbar page (hello uni-app uses this method) After the tabbar page is displayed once, it remains in the memory. Switching the tabbar page again will only trigger the onShow of each page, and will not trigger the onLoad again. The tabbar at the top is currently only supported on WeChat Mini Programs. If you need to use the top tab, it is recommended not to use the top setting of the tabbar, but to make the top tab yourself, please refer to hello uni-app-\u0026gt;template-\u0026gt;top tab.  Property description:\n   Attributes Types of Required Defaults description     color HexColor Yes  Default color of text on tab   selectedColor HexColor Yes  The color of the text on the tab when selected   backgroundColor HexColor Yes  tab background color   borderStyle String no black The color of the upper border of the tabbar, optional black/white   blurEffect String no none iOS Gaussian blur effect, optional value dark/extralight/light/none   list Array Yes  The list of tabs, see the list attribute description for details, at least 2 tabs and at most 5 tabs    Among them, list receives an array, each item in the array is an object, and its attribute values are as follows:\n   Attributes Types of Required Description     pagePath String Yes Page path, must be defined in pages   text String Yes The button text on the tab is not required in App and H5 platform. For example, you can put a + icon with no text in the middle   iconPath String no The image path, the icon size is limited to 40kb, and the recommended size is 81px * 81px. When the postion is top, this parameter is invalid. Network pictures and font icons are not supported   selectedIconPath String no The image path when selected, the icon size is limited to 40kb, and the recommended size is 81px * 81px. When the postion is top, this parameter is invalid    midButton property description\n   Attributes Types of Required Defaults description     width String no 80px The width of the middle button. Other tabBar items are divided equally after subtracting this width. The default value is divided equally with other items.   height String no 50px The height of the middle button can be greater than the height of the tabBar to achieve the effect of convex middle   text String no  Middle button text   iconPath String no  The image path of the middle button   iconWidth String no 24px Picture width (height proportional zoom)   backgroundImage String no  The background image path of the middle button    midButton does not have a pagePath, it needs to listen to the click event and handle the behavior logic after the click. To monitor the click event is to call the API: uni.onTabBarMidButtonTap\nTabbar FAQ\r#\r\r For the js api of the tabbar, see Interface-Interface-tabbar, which can realize functions such as dynamic display and hiding (such as the pop-up layer cannot cover the tabbar), content modification (such as internationalization), and item addition. There are also examples in hello uni-app. For the item click event of the tabbar, see onTabItemTap of the page life cycle The code jumps to the tabbar page. The api can only use uni.switchTab, not uni.navigateTo, uni.redirectTo; when using the navigator component to jump, open-type=\u0026ldquo;switchTab\u0026quot;must be set The default height of the tabbar is different on different platforms. The default height of the App has been adjusted from 56px to 50px since HBuilderX 2.3.4, which is unified with the H5 end. Developers can also set the height by themselves and adjust it back to 56px. The tabbar is div-simulated on the H5 end, which is part of the front-end screen window. If you want to use the bottom positioning method, you should use css variables --window-bottom, such as a button floating 10px above the tabbar, the style is as followsbottom: calc(var(--window-bottom) + 10px) An example of a tabbar template with a + sign in the middle . Can cross the end, but the + sign is not raised. If you need a middle bump, configure the midButton of the tabbar. If you need to log in first and then enter the tab page, you don’t need to set the login page as the home page. The home page is still the tabbar page. You can refer to the login template when creating a uni-app project in HBuilderX. The front-end pop-up mask layer cannot block the problem of the tabbar, and the tabbar is dynamically hidden during cross-end processing. You can use plus.nativeObj.view or subNVue for popup and masking on the App side. There is a bug in the WeChat applet simulator version 1.02.1904090. After zooming the percentage of the simulator page, the tabbar will freeze after multiple clicks. The real machine is unobstructed, pay attention when using it. On PC widescreen, when the page has multiple window structures such as topWindow, leftWindow, or rightWindow, the tabBar is automatically hidden (HBuilderX 2.9.9).  Code example\n\u0026#34;tabBar\u0026#34;: { \u0026#34;color\u0026#34;: \u0026#34;#7A7E83\u0026#34;, \u0026#34;selectedColor\u0026#34;: \u0026#34;#3cc51f\u0026#34;, \u0026#34;borderStyle\u0026#34;: \u0026#34;black\u0026#34;, \u0026#34;backgroundColor\u0026#34;: \u0026#34;#ffffff\u0026#34;, \u0026#34;list\u0026#34;: [{ \u0026#34;pagePath\u0026#34;: \u0026#34;pages/component/index\u0026#34;, \u0026#34;iconPath\u0026#34;: \u0026#34;static/image/icon_component.png\u0026#34;, \u0026#34;selectedIconPath\u0026#34;: \u0026#34;static/image/icon_component_HL.png\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;组件\u0026#34; }, { \u0026#34;pagePath\u0026#34;: \u0026#34;pages/API/index\u0026#34;, \u0026#34;iconPath\u0026#34;: \u0026#34;static/image/icon_API.png\u0026#34;, \u0026#34;selectedIconPath\u0026#34;: \u0026#34;static/image/icon_API_HL.png\u0026#34;, \u0026#34;text\u0026#34;: \u0026#34;接口\u0026#34; }] } Custom tabbar\r#\r\rThe native tabBar is a relatively fixed configuration method, which may not meet all scenarios, which involves custom tabBar.\nBut note that except for the H5 end, the performance experience of the custom tabBar will be lower than that of the native tabBar. Do not customize apps and applets unless necessary.\n Custom tabBar component on H5 side: There is no concept of higher performance of native tabBar on H5 side, and the common tabBar in widescreen is at the top instead of the bottom. At this time, you can use custom-tab-bar component to Ordinary custom tabBar: Use view to draw tabBar by yourself. If the page is in multi-page mode, switching tabBar will not keep the bottom tabBar always displayed. Therefore, it is recommended to use the single page method in this case. Single page mode, if it is a complex page, the application performance will decrease significantly, and the page complexity needs to be reduced. If it is the App side, the performance of the nvue single page will be significantly higher than the vue page WeChat applet custom tabbar: WeChat provides a solution to customize tabbar based on webview. This feature has a poor experience and is not recommended. If you want to use it, refer to the WeChat document and create a custom-tab-bar directory in the project root. Note that the code inside is wxml, wxss, not vue. The uni-app compiler will directly copy this directory to the WeChat applet There is one and only one native tabbar and it is on the homepage. If you need a tab for the secondary page, you need to write a view to achieve it. Generally, the more suitable navigation for secondary pages is the segment component  condition\r#\r\rThe startup mode configuration takes effect only during the development period and is used to simulate the scenario of a direct page, such as: after a small program is forwarded, the user clicks on the opened page.\nProperty description:\n   Attributes Types of Is it required description     current Number Yes The currently active mode, the index value of the list node   list Array Yes Start mode list    List description:\n   Attributes Types of Is it required description     name String Yes Start mode name   path String Yes Start page path   query String no Startup parameters can be obtained in the onLoad function of the page    Code example:\n\u0026#34;condition\u0026#34;: { //Pattern configuration, effective only during development  \u0026#34;current\u0026#34;: 0, //The currently active schema (List\u0026#39;s index entries)  \u0026#34;list\u0026#34;: [{ \u0026#34;name\u0026#34;: \u0026#34;swiper\u0026#34;, //Model name  \u0026#34;path\u0026#34;: \u0026#34;pages/component/swiper/swiper\u0026#34;, //Startup page, required  \u0026#34;query\u0026#34;: \u0026#34;interval=4000\u0026amp;autoplay=false\u0026#34; //The startup parameters are found in the onLoad function of the page.  }, { \u0026#34;name\u0026#34;: \u0026#34;test\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;pages/component/switch/switch\u0026#34; } ] } subPackages\r#\r\rSub-package loading configuration, this configuration is the sub-package loading mechanism of the applet.\nDue to the size and resource loading limitations of applets, each applet platform provides a subcontracting method to optimize the download and start speed of applets.\nThe so-called main package is to place the default startup page/TabBar page, and some common resources/JS scripts are required for all sub-packages; the sub-packages are divided according to the configuration of pages.json.\nWhen the applet is started, the main package will be downloaded by default and the page in the main package will be launched. When the user enters a page in the sub-package, the corresponding sub-package will be automatically downloaded and displayed after the download is complete. At this time, there will be a waiting prompt on the terminal interface.\nApp defaults to the whole package. Starting from uni-app 2.7.12+, it is also compatible with the sub-package configuration of small programs. Its purpose is not to speed up the download, but to speed up the startup when the home page is vue. To enable subcontracting under the app, in addition to configuring subcontracting rules in pages.json, you also need to set in the manifest to enable subcontracting settings on the app side.\nThe subPackages node receives an array. Each item in the array is an applied subpackage. Its attribute values are as follows:\n   Attributes Types of Is it required description     root String Yes The root directory of the subpackage   pages Array Yes Which pages the sub-package consists of, the parameters are the same as pages    note:\n  subPackagesPath in the pages of a rootrelative path, not the full path.\n  The size of each sub-package of the WeChat Mini Program is 2M, and the total volume cannot exceed 16M.\n  The size of each sub-package of Baidu Mini Program is 2M, and the total volume cannot exceed 8M.\n  The size of each sub-package of Alipay Mini Program is 2M, and the total volume cannot exceed 4M.\n  The size of each sub-package of the QQ applet is 2M, and the total volume cannot exceed 24M.\n  The size of each sub-package of the byte applet is 2M, and the total volume cannot exceed 16M (the byte applet basic library version 1.88.0 and above is supported. Please use the byte applet developer tool greater than or equal to 2.0.6 and Versions less than 3.0.0).\n  Pro-independence under sub- staticdirectory for static resources subcontractors.\n  uni-appInternal support WeChat applet, QQ small program,Baidu applet, Pay treasure small program, Byte small program(HBuilderX 3.0.3+)sub-optimization, static resources or will soon do not take into js file within the main package size subcontracting.\n  vendor.js\rRun-time compression code can be used for too large cases\n HBuilderXCheck the created itemRun -- --\u0026gt; runs to the small program emulator -- -- BBB\u0026gt;ns whether to compress the code cliYou can pacakge.jsonadd parameters to the created project --minimize, example:\u0026quot;dev:mp-weixin\u0026quot;: \u0026quot;cross-env NODE_ENV=development UNI_PLATFORM=mp-weixin vue-cli-service uni-build --watch --minimize\u0026quot;    Instructions:\nAssume support subcontracting uni-appdirectory structure is as follows:\n┌─pages │ ├─index\r│ │ └─index.vue │ └─login\r│ └─login.vue ├─pagesA │ ├─static\r│ └─list\r│ └─list.vue ├─pagesB │ ├─static\r│ └─detail\r│ └─detail.vue ├─static ├─main.js ├─App.vue ├─manifest.json └─pages.json You need to fill in pages.json\n{ \u0026#34;pages\u0026#34;: [{ \u0026#34;path\u0026#34;: \u0026#34;pages/index/index\u0026#34;, \u0026#34;style\u0026#34;: { ...} }, { \u0026#34;path\u0026#34;: \u0026#34;pages/login/login\u0026#34;, \u0026#34;style\u0026#34;: { ...} }], \u0026#34;subPackages\u0026#34;: [{ \u0026#34;root\u0026#34;: \u0026#34;pagesA\u0026#34;, \u0026#34;pages\u0026#34;: [{ \u0026#34;path\u0026#34;: \u0026#34;list/list\u0026#34;, \u0026#34;style\u0026#34;: { ...} }] }, { \u0026#34;root\u0026#34;: \u0026#34;pagesB\u0026#34;, \u0026#34;pages\u0026#34;: [{ \u0026#34;path\u0026#34;: \u0026#34;detail/detail\u0026#34;, \u0026#34;style\u0026#34;: { ...} }] }], \u0026#34;preloadRule\u0026#34;: { \u0026#34;pagesA/list/list\u0026#34;: { \u0026#34;network\u0026#34;: \u0026#34;all\u0026#34;, \u0026#34;packages\u0026#34;: [\u0026#34;__APP__\u0026#34;] }, \u0026#34;pagesB/detail/detail\u0026#34;: { \u0026#34;network\u0026#34;: \u0026#34;all\u0026#34;, \u0026#34;packages\u0026#34;: [\u0026#34;pagesA\u0026#34;] } } } preloadRule\r#\r\rSubcontract preload configuration.\nAfter configuring the preloadRule, when entering a page of the applet, the framework will automatically pre-download the sub-packages that may be needed to improve the startup speed when entering the subsequent sub-package pages\npreloadRuleMiddle, keyis the page path, valueis the pre-download configuration to enter this page, each configuration has the following items:\n   Field Types of Required Defaults Description     packages StringArray Yes no Pre-download subcontracting enter the page rootor name. __APP__Represents the main package.   network String no wifi Pre-download under designated network, optional values: all (unlimited network), wifi (only pre-download under wifi)    App subcontracting also supports preloadRule, but the network rules are invalid.\n "}),a.add({id:70,href:'/docs/%E6%A1%86%E6%9E%B6/%E9%85%8D%E7%BD%AE/uni.scss/uni-scss/',title:"Uni Scss",section:"配置",content:"uni.scssThe purpose of the file is to facilitate overall control of the style of the application. For example, button color, border style, uni.scssa batch of scss variable presets are preset in the file.\nuni-appThe official extension (uni ui) have used these tripartite plug-style variables, if you are a plugin developer, I suggest you use scss pretreatment, and use these variables (no need to import this file) directly in the plug-in code , It is convenient for users to develop apps with the same overall style by building blocks.\nuni.scssIt is a special file. You can use the style variable in scss code without importing this file in the code. The uni-app compiler specially handles this uni.scss in the webpack configuration, so that every scss file is injected into this uni.scss to achieve a globally available effect. If developers want the global use of less and stylus, they need to configure the webpack strategy in vue.config.js.\nnote:\n  If you want to use these commonly used variables, you need to install the scss plugin in HBuilderX;\n  It needs to be added to the style node when using it\nlang=\u0026quot;scss\u0026quot;\r.\n\u0026lt;style lang=\u0026quot;scss\u0026quot;\u0026gt;\r\u0026lt;/style\u0026gt;\r  pages.json does not support scss, the dynamic modification of the native navigation bar and tabbar can only use js api\n  The following are the relevant variables of uni.scss:\n/* Color variable */\r/* Behavior dependent color */\r$uni-color-primary: #007aff;\r$uni-color-success: #4cd964;\r$uni-color-warning: #f0ad4e;\r$uni-color-error: #dd524d;\r/* Text base color */\r$uni-text-color:#333;//The basic color\r$uni-text-color-inverse:#fff;//The color\r$uni-text-color-grey:#999;//Auxiliary grays, such as loading more prompts\r$uni-text-color-placeholder: #808080;\r$uni-text-color-disable:#c0c0c0;\r/* The background color */\r$uni-bg-color:#ffffff;\r$uni-bg-color-grey:#f8f8f8;\r$uni-bg-color-hover:#f1f1f1;//Click Status Color\r$uni-bg-color-mask:rgba(0, 0, 0, 0.4);//Mask color\r/* Border color */\r$uni-border-color:#c8c7cc;\r/* Variable size */\r/* Text size */\r$uni-font-size-sm:24rpx;\r$uni-font-size-base:28rpx;\r$uni-font-size-lg:32rpx;\r/* Image size */\r$uni-img-size-sm:40rpx;\r$uni-img-size-base:52rpx;\r$uni-img-size-lg:80rpx;\r/* Border Radius */\r$uni-border-radius-sm: 4rpx;\r$uni-border-radius-base: 6rpx;\r$uni-border-radius-lg: 12rpx;\r$uni-border-radius-circle: 50%;\r/* Horizontal spacing */\r$uni-spacing-row-sm: 10px;\r$uni-spacing-row-base: 20rpx;\r$uni-spacing-row-lg: 30rpx;\r/* The vertical distance between */\r$uni-spacing-col-sm: 8rpx;\r$uni-spacing-col-base: 16rpx;\r$uni-spacing-col-lg: 24rpx;\r/* transparency */\r$uni-opacity-disabled: 0.3; // Transparency of the disabled state of the component\r/* Article Scene Related */\r$uni-color-title: #2C405A; // Title Color\r$uni-font-size-title:40rpx;\r$uni-color-subtitle: #555555; // Secondary title color\r$uni-font-size-subtitle:36rpx;\r$uni-color-paragraph: #3F536E; // Paragraph color\r$uni-font-size-paragraph:30rpx;\r\r"}),a.add({id:71,href:'/docs/%E6%A1%86%E6%9E%B6/%E9%85%8D%E7%BD%AE/vue.config.js/vue-config/',title:"Vue Config",section:"配置",content:"vue.config.js is an optional configuration file. If this file exists in the root directory of the project, it will be automatically loaded. It is generally used to configure compilation options such as webpack. For specific specifications, refer to: vue.config.js\n**Support situation**\r- CLI project\r- HBuilderX 2.1.5 and above\r**Precautions**\r- Only the vue page takes effect\rSome configuration items will be overwritten by the compiled configuration, for example:\r- PublicPath does not support. If you need to configure it, please configure it in manifest.json-\u0026gt;h5-\u0026gt;router-\u0026gt;base\r- outputDir does not support\r- assetsDir fixed static\r- pages not supported\r- runtimeCompiler fixed false\r- productionSourceMap fixed false\r- css.extract H5 platform fixed false, other platforms fixed true\r- parallel fixed false\r- When using the cli project, babel-loader will ignore all files in node_modules by default. If you want to explicitly translate a dependency through Babel, you can list it in transpileDependencies. [For details](https://cli.vuejs.org/config/#transpiledependencies)\r**Usage example**\r**Custom static resource directory**\r```js\rconst path = require('path')\rconst CopyWebpackPlugin = require('copy-webpack-plugin') //The latest version of the copy-webpack-plugin is currently not compatible. V5.0.0 is recommended\rmodule.exports = {\rconfigureWebpack: {\rplugins: [\rnew CopyWebpackPlugin([\r{\rfrom: path.join(__dirname, 'src/images'),\rto: path.join(__dirname, 'dist', process.env.NODE_ENV === 'production' ? 'build' : 'dev', process.env.UNI_PLATFORM, 'images')\r}\r])\r]\r}\r}\r```\r**Inject global dependencies**\r```js\rconst webpack = require('webpack')\rmodule.exports = {\rconfigureWebpack: {\rplugins: [\rnew webpack.ProvidePlugin({\r'localStorage': ['mp-storage', 'localStorage'],\r'window.localStorage': ['mp-storage', 'localStorage']\r})\r]\r}\r}\r```\r**Delete console when publishing**\r`HBuilderX 2.6.8+`stand by\r```js\rmodule.exports = {\rchainWebpack: (config) =\u0026gt; {\r// This takes effect when compression is enabled at release or runtime\rconfig.optimization.minimizer('terser').tap((args) =\u0026gt; {\rconst compress = args[0].terserOptions.compress\r// Non-App platforms remove Console code (including all Console methods, such as log,debug,info...)\rcompress.drop_console = true\rcompress.pure_funcs = [\r'__f__', // App platform VUE removes logging code\r// 'console.debug' //Removes the specified Console method\r]\rreturn args\r})\r}\r}\r```\rHow to enable compression:\r- The project created by HBuilderX is checked to run--\u0026gt;Run to the Mini Program Simulator--\u0026gt;Whether to compress the code during runtime\r- The project created by cli can `pacakge.json`add parameters `--minimize`, example:`\u0026quot;dev:mp-weixin\u0026quot;: \u0026quot;cross-env NODE_ENV=development UNI_PLATFORM=mp-weixin vue-cli-service uni-build --watch --minimize\u0026quot;`\r "}),a.add({id:72,href:'/docs/%E7%BB%84%E4%BB%B6/webview/web-view/web-view/',title:"Web View",section:"Webview",content:"web-view\r#\r\rweb-view It is a web browser component that can be used to host a web page container, which will automatically fill the entire page (nvue use requires manual specification of width and height).\n For each applet platform, the URL loaded by the web-view needs to configure the domain name whitelist in the background, including other URLs embedded in the iframe again.\n Property description\n   Attribute name Types of Description Platform difference description     src String webview links to web pages    allow String Used to specify the characteristic strategy for the iframe    sandbox String This attribute enables some additional restrictions on the content rendered in the iframe frame.    webview-styles Object webview style App-vue   @onPostMessage EventHandler Web page to application real-time postMessage App-nvue    webview-styles\n   Attributes Types of Description     progress Object/Boolean The style of the progress bar. It takes effect only when the network load HTML, set to falsedisable the progress bar.    progress\n   Attributes Types of Defaults Description     color String #00FF00 Progress bar color    \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;web-view :webview-styles=\u0026#34;webviewStyles\u0026#34; src=\u0026#34;https://uniapp.dcloud.io/static/web-view.html\u0026#34;\u0026gt;\u0026lt;/web-view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { webviewStyles: { progress: { color: \u0026#39;#FF3333\u0026#39; } } } } } \u0026lt;/script\u0026gt; \u0026lt;style\u0026gt; \u0026lt;/style\u0026gt; ┌─components ├─hybrid │ └─html\r│ ├─css\r│ │ └─test.css\r│ ├─img\r│ │ └─icon.png\r│ ├─js\r│ │ └─test.js\r│ └─local.html\r├─pages │ └─index\r│ └─index.vue ├─static ├─main.js ├─App.vue ├─manifest.json └─pages.json \r\rExample\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;web-view src=\u0026#34;/hybrid/html/local.html\u0026#34;\u0026gt;\u0026lt;/web-view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;web-view\u0026gt; Some uni interfaces are supported in the loaded webpage:\n   Method name Description Platform difference description     uni.navigateTo navigateTo    uni.redirectTo redirectTo    uni.reLaunch reLaunch    uni.switchTab switchTab    uni.navigateBack navigateBack    uni.getEnv Get the current environment     uni.postMessage(OBJECT)\r#\r\rPage, in a message sent to the application \u0026lt;web-view\u0026gt;\u0026rsquo;s messageevent callback event.detail.datareceives the message.\nTips\n The message information passed must be written in the data object. event.detail.data The data in each post is received in the form of an array.。  uni.getEnv(CALLBACK)\r#\r\rExample\nIn the \u0026lt;web-view\u0026gt;loaded HTML, add the following code:\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Web page\u0026lt;/title\u0026gt; \u0026lt;style type=\u0026#34;text/css\u0026#34;\u0026gt; .btn { display: block; margin: 20px auto; padding: 5px; background-color: #007aff; border: 0; color: #ffffff; height: 40px; width: 200px; } .btn-red { background-color: #dd524d; } .btn-yellow { background-color: #f0ad4e; } .desc { padding: 10px; color: #999999; } .post-message-section { visibility: hidden; } \u0026lt;/style\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p class=\u0026#34;desc\u0026#34;\u0026gt;The web-view component loads the web html example. Click the button below to jump to other pages.\u0026lt;/p\u0026gt; \u0026lt;div class=\u0026#34;btn-list\u0026#34;\u0026gt; \u0026lt;button class=\u0026#34;btn\u0026#34; type=\u0026#34;button\u0026#34; data-action=\u0026#34;navigateTo\u0026#34;\u0026gt;navigateTo\u0026lt;/button\u0026gt; \u0026lt;button class=\u0026#34;btn\u0026#34; type=\u0026#34;button\u0026#34; data-action=\u0026#34;redirectTo\u0026#34;\u0026gt;redirectTo\u0026lt;/button\u0026gt; \u0026lt;button class=\u0026#34;btn\u0026#34; type=\u0026#34;button\u0026#34; data-action=\u0026#34;navigateBack\u0026#34;\u0026gt;navigateBack\u0026lt;/button\u0026gt; \u0026lt;button class=\u0026#34;btn\u0026#34; type=\u0026#34;button\u0026#34; data-action=\u0026#34;reLaunch\u0026#34;\u0026gt;reLaunch\u0026lt;/button\u0026gt; \u0026lt;button class=\u0026#34;btn\u0026#34; type=\u0026#34;button\u0026#34; data-action=\u0026#34;switchTab\u0026#34;\u0026gt;switchTab\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;post-message-section\u0026#34;\u0026gt; \u0026lt;p class=\u0026#34;desc\u0026#34;\u0026gt;The webpage sends a message to the application. Note: The applet-side application will receive the message when the page is backed.\u0026lt;/p\u0026gt; \u0026lt;div class=\u0026#34;btn-list\u0026#34;\u0026gt; \u0026lt;button class=\u0026#34;btn btn-red\u0026#34; type=\u0026#34;button\u0026#34; id=\u0026#34;postMessage\u0026#34;\u0026gt;postMessage\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script type=\u0026#34;text/javascript\u0026#34;\u0026gt; var userAgent = navigator.userAgent; if (userAgent.indexOf(\u0026#39;AlipayClient\u0026#39;) \u0026gt; -1) { // The JS-SDK of the Alipay applet prevents the 404 from being dynamically loaded. If you do not need to be compatible with the Alipay applet, you do not need to quote this JS file.  document.writeln(\u0026#39;\u0026lt;script src=\u0026#34;https://appx/web-view.min.js\u0026#34;\u0026#39; + \u0026#39;\u0026gt;\u0026#39; + \u0026#39;\u0026lt;\u0026#39; + \u0026#39;/\u0026#39; + \u0026#39;script\u0026gt;\u0026#39;); } else if (/QQ/i.test(userAgent) \u0026amp;\u0026amp; /miniProgram/i.test(userAgent)) { // QQ applet  document.write( \u0026#39;\u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;https://qqq.gtimg.cn/miniprogram/webview_jssdk/qqjssdk-1.0.0.js\u0026#34;\u0026gt;\u0026lt;\\/script\u0026gt;\u0026#39; ); } else if (/miniProgram/i.test(userAgent) \u0026amp;\u0026amp; /micromessenger/i.test(userAgent)) { // WeChat Mini Program JS-SDK If you do not need to be compatible with WeChat Mini Program, you do not need to quote this JS file.  document.write(\u0026#39;\u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;https://res.wx.qq.com/open/js/jweixin-1.4.0.js\u0026#34;\u0026gt;\u0026lt;\\/script\u0026gt;\u0026#39;); } else if (/toutiaomicroapp/i.test(userAgent)) { // Toutiao Mini Program JS-SDK If you don’t need to be compatible with Toutiao Mini Program, you don’t need to quote this JS file.  document.write( \u0026#39;\u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;https://s3.pstatp.com/toutiao/tmajssdk/jssdk-1.0.1.js\u0026#34;\u0026gt;\u0026lt;\\/script\u0026gt;\u0026#39;); } else if (/swan/i.test(userAgent)) { // Baidu Mini Program JS-SDK If you do not need to be compatible with Baidu Mini Program, you do not need to quote this JS file.  document.write( \u0026#39;\u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;https://b.bdstatic.com/searchbox/icms/searchbox/js/swan-2.0.18.js\u0026#34;\u0026gt;\u0026lt;\\/script\u0026gt;\u0026#39; ); } else if (/quickapp/i.test(userAgent)) { // quickapp  document.write(\u0026#39;\u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;https://quickapp/jssdk.webview.min.js\u0026#34;\u0026gt;\u0026lt;\\/script\u0026gt;\u0026#39;); } if (!/toutiaomicroapp/i.test(userAgent)) { document.querySelector(\u0026#39;.post-message-section\u0026#39;).style.visibility = \u0026#39;visible\u0026#39;; } \u0026lt;/script\u0026gt; \u0026lt;!-- uni\u0026#39;s SDK --\u0026gt; \u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;https://js.cdn.aliyun.dcloud.net.cn/dev/uni-app/uni.webview.1.5.2.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script type=\u0026#34;text/javascript\u0026#34;\u0026gt; // After the `UniAppJSBridgeReady` event is triggered, uni\u0026#39;s API can be called.  document.addEventListener(\u0026#39;UniAppJSBridgeReady\u0026#39;, function() { uni.postMessage({ data: { action: \u0026#39;message\u0026#39; } }); uni.getEnv(function(res) { console.log(\u0026#39;Current environment：\u0026#39; + JSON.stringify(res)); }); document.querySelector(\u0026#39;.btn-list\u0026#39;).addEventListener(\u0026#39;click\u0026#39;, function(evt) { var target = evt.target; if (target.tagName === \u0026#39;BUTTON\u0026#39;) { var action = target.getAttribute(\u0026#39;data-action\u0026#39;); switch (action) { case \u0026#39;switchTab\u0026#39;: uni.switchTab({ url: \u0026#39;/pages/tabBar/API/API\u0026#39; }); break; case \u0026#39;reLaunch\u0026#39;: uni.reLaunch({ url: \u0026#39;/pages/tabBar/component/component\u0026#39; }); break; case \u0026#39;navigateBack\u0026#39;: uni.navigateBack({ delta: 1 }); break; default: uni[action]({ url: \u0026#39;/pages/component/button/button\u0026#39; }); break; } } }); document.getElementById(\u0026#39;postMessage\u0026#39;).addEventListener(\u0026#39;click\u0026#39;, function() { uni.postMessage({ data: { action: \u0026#39;message\u0026#39; } }); }); }); \u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; App-side web-view extension\r#\r\rThe webview on the App side is very powerful and can be controlled more flexibly and has a richer API.\nEach vue page is actually a webview, and the web-view component in the vue page is actually a sub-webview in the webview. This child webview is appended to the parent webview.\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;web-view src=\u0026#34;https://www.xxx.com\u0026#34;\u0026gt;\u0026lt;/web-view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; var wv;//Plan to create webview export default { onReady() { // #ifdef APP-PLUS 	var currentWebview = this.$scope.$getAppWebview() //This object is equivalent to plus.webview.currentWebview() in html5plus. It is invalid to use plus.webview.currentWebview() directly on the vue page in uni-app, and use this.$mp.page.$getAppWebview() in non-v3 compilation mode 	setTimeout(function() { wv = currentWebview.children()[0] wv.setStyle({top:150,height:300}) }, 1000); //If it is the page initialization call, you need to delay 	// #endif 	} }; \u0026lt;/script\u0026gt; You can even web-viewcreate a sub-webview directly to load html without using components. For example, if you don\u0026rsquo;t want the remote webpage to use the plus API, whether for security reasons or because of back monitoring conflicts, you can use the following code:\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; var wv;//Plan to create webview export default { onLoad() { // #ifdef APP-PLUS 	wv = plus.webview.create(\u0026#34;\u0026#34;,\u0026#34;custom-webview\u0026#34;,{ plusrequire:\u0026#34;none\u0026#34;, //Forbid remote webpages to use the plus API. Some webpages made with mui may listen to plus.key and cause confusion when closing the page. You can disable it in this way  \u0026#39;uni-app\u0026#39;: \u0026#39;none\u0026#39;, //Do not load the uni-app rendering layer framework to avoid style conflicts 	top:uni.getSystemInfoSync().statusBarHeight+44 //Place it below titleNView. If you want to add an address bar or something above the webview, you can continue to lower the TOP value 	}) wv.loadURL(\u0026#34;https://www.baidu.com\u0026#34;) var currentWebview = this.$scope.$getAppWebview(); //This object is equivalent to plus.webview.currentWebview() in html5plus. It is invalid to use plus.webview.currentWebview() directly on the vue page in uni-app, and use this.$mp.page.$getAppWebview() in non-v3 compilation mode 	currentWebview.append(wv);//Be sure to append to the current page! ! ! In order to animate with the current page and close together 	setTimeout(function() { console.log(wv.getStyle()) }, 1000);//If the onload call of the home page needs to be delayed, the secondary page does not need to be delayed, and can be obtained directly 	// #endif 	} }; \u0026lt;/script\u0026gt; If you want to set the web-view component to zoom with two fingers, you can refer to the following code:\nonReady() { // #ifdef APP-PLUS 	var currentWebview = this.$mp.page.$getAppWebview() //Get the webview object of the current page 	setTimeout(function() { wv = currentWebview.children()[0] wv.setStyle({scalable:true}) }, 1000); //If it is the page initialization call, you need to delay 	// #endif 	} }; web-viewComponent level problem solving\r#\r\rThe web-view component has a higher level in App and applet. If you need to write code in the vue page to cover the content of the web-view component, the applet has no solution, and the div can only be popped up by the web-view component. There are several solutions on the App side:\n The simpler way is native pop-up menus such as actionsheet (small programs can also use this scheme) Use plus.nativeObj.view. Raw child window used subNvue You can pop up a div with a higher z-index in the webpage embedded in the web-view component. If it is an external webpage, after obtaining the sub-webview object in vue, inject a section of js into this sub-webview through evalJS , and operate it to pop up the div layer.  Precautions\n \u0026lt;web-view\u0026gt;By default, the components fill the full screen and are higher level than the front-end components. If you want to adjust the size or overwrite content on the App, you need to use the plus specification. \u0026lt;web-view\u0026gt;The title of the components of the window, the page following the \u0026lt;title\u0026gt;variation value changes . web-viewThe html page loaded by App-vue can run the plus API, but note that if the page calls the plus.key API to monitor the back button (or uses mui encapsulation), it will cause back monitoring conflicts. The html page needs to remove the back monitoring. Or follow the example code above to prohibit web pages from using the plus object. The web-viewcomponents of the app-nvue page cannot run the plus API. uni.webview.jsThe latest version address: https://js.cdn.aliyun.dcloud.net.cn/dev/uni-app/uni.webview.1.5.2.js Applet platform, the individual types of small type with overseas programs use web-viewcomponents, submit review attention to micro-channel platforms such as whether to allow the use of  FAQ\r#\r\rQ: How do web-view pages interact with pages in the application? A: Call uni-related APIs to switch pages and send messages.\nQ: Can the 5+ capabilities be used in the HTML loaded by the web-view? A: There are 5+ environments in the loaded HTML, which can be called after plusready.\nuni.webView.navigateTo example, note that uni sdk is placed under the body\n\u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html lang=\u0026quot;zh-CN\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r...\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;noscript\u0026gt;\r\u0026lt;strong\u0026gt;Please enable JavaScript to continue.\u0026lt;/strong\u0026gt;\r\u0026lt;/noscript\u0026gt;\r\u0026lt;div id=\u0026quot;app\u0026quot;\u0026gt;\u0026lt;/div\u0026gt;\r\u0026lt;!-- built files will be auto injected --\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;!-- uni's SDK --\u0026gt;\r\u0026lt;script type=\u0026quot;text/javascript\u0026quot; src=\u0026quot;https://js.cdn.aliyun.dcloud.net.cn/dev/uni-app/uni.webview.1.5.2.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;script\u0026gt;\rdocument.addEventListener('UniAppJSBridgeReady', function() {\runi.webView.getEnv(function(res) {\rconsole.log('Current environment：' + JSON.stringify(res));\r});\r// uni.webView.navigateTo(...)\r});\r\u0026lt;/script\u0026gt;\r\u0026lt;/html\u0026gt;\r"}),a.add({id:73,href:'/docs/%E7%BB%84%E4%BB%B6/%E5%9C%B0%E5%9B%BE/map/map/',title:"Map",section:"地图",content:"map\r#\r\rMap component.\nThe map component is used to display the map, and the positioning API just gets the coordinates, don\u0026rsquo;t confuse the two.\nProperty description\n   Attribute name Types of Defaults Description     longitude Number  Center longitude   latitude Number  Center latitude   scale Number 16 Zoom level, the value range is 3-20   min-scale Number 3 Minimum zoom level   max-scale Number 20 Maximum zoom level   layer-style Number 1 Personalized map   markers Array  Mark point   polyline Array  route   circles Array  round   controls Array  Control   include-points Array  Zoom the field of view to include all given coordinate points   enable-3D Boolean false Whether to display 3D blocks   show-compass Boolean false Whether to show the compass   enable-zoom Boolean true Whether to support zoom   enable-scroll Boolean true Whether to support drag   enable-rotate Boolean false Whether to support rotation   enable-overlooking Boolean false Whether to open the top view   enable-satellite Boolean false Whether to open the satellite image   enable-traffic Boolean false Whether to enable real-time traffic   enable-poi Boolean false Whether to show POI points   enable-building Boolean false Whether to display the building   polygons Array.\u0026lt;polygon\u0026gt;  Polygon   enable-indoorMap Boolean false Whether to display the indoor map   @markertap EventHandle  Triggered when the marker is clicked, e.detail = {markerId}   @callouttap EventHandle  Triggered when the bubble corresponding to the marker point is clicked, e.detail = {markerId}   @controltap EventHandle  Triggered when the control is clicked, e.detail = {controlId}   @tap EventHandle  Triggered when the map is clicked; App-nuve, WeChat Mini Program 2.9 support returning longitude and latitude   @anchorpointtap EventHandle  Triggered when you click the locator, e.detail = {longitude, latitude}    note\n \u0026lt;map\u0026gt; The width/height of the component is recommended to be written directly, such as 750rpx, do not set a percentage value. uni-appOnly supports gcj02coordinates App Platform layer-styleattributes need to create a map service provider background, details  markers\nMarker points are used to display the marked location on the map\n   Attributes Description Types of Required Remarks     id Marker id Number Yes The marker click event callback will return this id. It is recommended to set the Number type id for each marker to ensure better performance when updating the marker. Maximum limit of 9 digits   latitude latitude Number Yes Floating point number, range -90 ~ 90   longitude longitude Number Yes Floating point number, range -180 ~ 180   title Mark roll call String no Displayed when clicked, will be ignored when callout exists   iconPath Icon displayed String Yes The image path under the project directory supports relative path writing, starting with'/' means relative Mini Program root directory; temporary path is also supported   rotate Rotation angle Number no Angle of clockwise rotation, range 0 ~ 360, default is 0   alpha Labeled transparency Number no Default 1, no transparency, range 0 ~ 1   width Label icon width Number no The default is the actual width of the picture   height Label icon height Number no The default is the actual height of the picture   callout Customize the bubble window above the marker Object no The supported attributes are shown in the following table, and line breaks can be recognized.   label Add a label next to the marker Object no The supported attributes are shown in the following table, and line breaks can be recognized.   anchor The latitude and longitude are at the anchor point of the label icon, the default bottom midpoint Object no {x, y}, x means horizontal (0-1), y means vertical (0-1). {x: .5, y: 1} represents the midpoint of the bottom edge   joinCluster Whether to participate in point aggregation Boolean no    clusterId Use when customizing the point aggregation cluster effect Number no    customCallout Custom bubble window Object no    aria-label Accessibility, additional description of (attribute) elements String no     bubble callout on the marker\n   Attributes Description Types of     content text String   color Text color String   fontSize font size Number   borderRadius callout border rounded corners Number   bgColor Background color String   padding Margins of text Number   display \u0026lsquo;BYCLICK\u0026rsquo;: click to show;\u0026lsquo;ALWAYS\u0026rsquo;: always show String   textAlign Text alignment. Valid values: left, right, center String    label on the marker\n   Attributes Description Types of     content text String   color Text color String   fontSize font size Number   x The coordinates of the label, the origin is the latitude and longitude corresponding to the marker Number   Y The coordinates of the label, the origin is the latitude and longitude corresponding to the marker Number   borderRadius Rounded corners Number   bgColor Background color String   padding Margins of text Number   textAlign Text alignment. Valid values: left, right, center String   joinCluster Whether to participate in point aggregation Boolean   clusterId Use when customizing the point aggregation cluster effect Number   customCallout Custom bubble window Object   aria-label Accessibility, additional description of (attribute) elements String    polyline\nSpecify a series of coordinate points, connecting from the first item to the last item of the array\n   Attributes Description Types of Required Remarks     points Latitude and longitude array Array Yes [{latitude: 0, longitude: 0}]   color Line color String no 8-digit hexadecimal representation, the last two digits represent the alpha value, such as: #0000AA   width Line width Number no    dottedLine Whether it is dashed Boolean no Default false   arrowLine Line with arrow Boolean no The default is false, the WeChat Mini Program Developer Tool does not support this attribute temporarily   arrowIconPath Change arrow icon String no Effective when arrowLine is true   borderColor Border color of the line String no    borderWidth Line thickness Number no    colorList Rainbow line Array false Ignore the color value if it exists    polygon specifies a series of coordinate points, and generates a closed polygon according to the points coordinate data\n   Attributes Description Types of Required Remarks     points Latitude and longitude array array Yes [{latitude: 0, longitude: 0}]   strokeWidth Stroke width Number no    strokeColor Stroke color String no Hexadecimal   fillColor Fill color String no Hexadecimal   zIndex Set the polygon Z axis value Number no     circles\nShow circle on the map\n   Attributes Description Types of Required Remarks     latitude latitude Number Yes Floating point number, range -90 ~ 90   longitude longitude Number Yes Floating point number, range -180 ~ 180   color Stroke color String no 8-digit hexadecimal representation, the last two digits represent the alpha value, such as: #0000AA   fillColor Fill color String no 8-digit hexadecimal representation, the last two digits represent the alpha value, such as: #0000AA   radius radius Number Yes    strokeWidth Stroke width Number no     controls\nDisplay the control on the map, the control does not move with the map\n   Attributes Description Types of Required Remarks     id Control id Number no In the control click event callback will return this id   position The location of the control on the map Object Yes Control relative map position   iconPath Icon displayed String Yes The image path in the project directory supports relative path writing, starting with'/' means relative project root directory; temporary path is also supported   clickable Clickable Boolean no Not clickable by default    position\n   Attributes Description Types of Required Remarks     left How far is it from the left border of the map Number no Default is 0   top How far is it from the upper border of the map Number no Default is 0   width Control width Number no The default is the image width   height Control height Number no The default is the image height    The latitude and longitude of the map component are required. If the latitude and longitude are not filled, the default value is the latitude and longitude of Beijing.\nExample view example\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view class=\u0026#34;page-body\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;page-section page-section-gap\u0026#34;\u0026gt; \u0026lt;map style=\u0026#34;width: 100%; height: 300px;\u0026#34; :latitude=\u0026#34;latitude\u0026#34; :longitude=\u0026#34;longitude\u0026#34; :markers=\u0026#34;covers\u0026#34;\u0026gt; \u0026lt;/map\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; export default { data() { return { id:0, // Use marker to click event, need to fill in id 	title: \u0026#39;map\u0026#39;, latitude: 39.909, longitude: 116.39742, covers: [{ latitude: 39.909, longitude: 116.39742, iconPath: \u0026#39;../../../static/location.png\u0026#39; }, { latitude: 39.90, longitude: 116.39, iconPath: \u0026#39;../../../static/location.png\u0026#39; }] } }, methods: { } } JS API for map component related operations: uni.createMapContext\nPrecautions\n In app-vue, \u0026lt;map\u0026gt;components are native components created by the engine. Its level is the highest and cannot be controlled by z-index. To \u0026lt;map\u0026gt;draw content on top, you can use the marker, controls and other attributes that come with the \u0026lt;cover-view\u0026gt;component , or you can use the component. App side can also use plus.nativeObj.view or subNVue to draw native content, for reference . In addition, there is no hierarchical problem with nvue files on the App side. The map and applet of the nvue file on the App side are more aligned. The map in vue has the same function as plus.map, which is slightly different from the map in the applet. Nvue is recommended to use map on the App side. If you use a local image on the App side, you need to set the resource to release mode before packaging. Add a runmode node to app-plus in the manifest file and set the value to liberate. And app-vue, do not use the scroll-view, swiper, picker- view, movable-view in the hierarchy problem involving a small program in \u0026lt;map\u0026gt;assembly. App-vue in, css animated \u0026lt;map\u0026gt;component is invalid. The latitude and longitude used by the map component are the coordinates of the National Bureau of Survey and Measurement, and calling the uni.getLocation interface needs to specify the type as gcj02. \u0026lt;map\u0026gt;The underlying engines of the components on different platforms are different: App applets are Gaode maps; App-vue can also use Baidu map, which is configured in the manifest and takes effect after packaging, but app-nvue only supports Gaode maps. In addition, the API for selecting the map and viewing the map location only supports Gaode maps. If there is no special need on the App side, it is recommended to use Gaode map. The default api of the map component refers to the WeChat applet. If you need to use plus.map, you can $getAppMapobtain the native map object. See details . Note that the map component of nvue is not a plus.map object and cannot be used$getAppMap To obtain location information on the H5 side, it needs to be deployed on the https service. The local preview (localhost) can still use the http protocol. When using the Chrome browser on a PC device without a GPS module or GPS signal, the location information is obtained by connecting to the Google server, and domestic users may fail to obtain the location information. To use the map component on the App side, you need to apply for SDK qualification from third-party service providers such as AutoNavi or Baidu to obtain the AppKey. When packaging, you need to check the corresponding module in the manifest file and fill in the Appkey in the SDK configuration. Note that the application package name must match the package name when packaging, and the certificate information must match . There is a detailed application guide in the manifest visualization interface. To use maps and positioning on the H5 terminal, you need to apply for a key on the Tencent Maps Open Platform and fill in the manifest.json. ios nvue Color does not support ARGB hexadecimal, use rgba(r,g,b,a) instead  FAQ\r#\r\rQ: applications using \u0026lt;map\u0026gt;the component, packaged as App, suggesting a lack of permissions module how to do? A: The native map on the App side relies on a third-party SDK. Therefore, when packaging a mobile application, you need to check the relevant permissions in the manifest and fill in the key information.\nQ: What should I do if foreign applications want to use Google Maps/Google Maps? A: 1. You can call Google\u0026rsquo;s web map under web-view; 2. You can write a native plug-in to encapsulate Google\u0026rsquo;s native map. For details, please refer to the native plug-in development tutorial of uni-app plug-in market. There are already map plugins written by three parties in the plugin market .\n"}),a.add({id:74,href:'/docs/%E7%BB%84%E4%BB%B6/%E5%9F%BA%E7%A1%80%E5%86%85%E5%AE%B9/icon/icon/',title:"Icon",section:"基础内容",content:"icon\r#\r\ricon.\nTips\n Due to differences in each end of the icon component performance, by using the Fonts icon to compensate for differences in the way each end.  Property description\n   Attribute name Types of Defaults Description     type String  icon type   size Number twenty three icon size, unit px   color Color  icon color, same as css color    \u0026lt;view class=\u0026#34;item\u0026#34; v-for=\u0026#34;(value,index) in iconType\u0026#34; :key=\u0026#34;index\u0026#34;\u0026gt; \u0026lt;icon :type=\u0026#34;value\u0026#34; size=\u0026#34;26\u0026#34;/\u0026gt; \u0026lt;text\u0026gt;{{value}}\u0026lt;/text\u0026gt; \u0026lt;/view\u0026gt; export default { data() { return { iconType: [\u0026#39;success\u0026#39;] } }, onLoad() { // #ifdef APP-PLUS|| MP-WEIXIN  this.iconType = [\u0026#39;success\u0026#39;, \u0026#39;success_no_circle\u0026#39;, \u0026#39;info\u0026#39;, \u0026#39;warn\u0026#39;, \u0026#39;waiting\u0026#39;, \u0026#39;cancel\u0026#39;, \u0026#39;download\u0026#39;, \u0026#39;search\u0026#39;,\u0026#39;clear\u0026#39;] // #endif  // #ifdef MP-ALIPAY  this.iconType = [\u0026#39;info\u0026#39;, \u0026#39;warn\u0026#39;, \u0026#39;waiting\u0026#39;, \u0026#39;cancel\u0026#39;, \u0026#39;download\u0026#39;, \u0026#39;search\u0026#39;, \u0026#39;clear\u0026#39;, \u0026#39;success\u0026#39;, \u0026#39;success_no_circle\u0026#39;, \u0026#39;loading\u0026#39;] // #endif  // #ifdef MP-BAIDU  this.iconType = [\u0026#39;success\u0026#39;, \u0026#39;info\u0026#39;, \u0026#39;warn\u0026#39;, \u0026#39;waiting\u0026#39;, \u0026#39;success_no_circle\u0026#39;, \u0026#39;clear\u0026#39;, \u0026#39;search\u0026#39;, \u0026#39;personal\u0026#39;, \u0026#39;setting\u0026#39;, \u0026#39;top\u0026#39;, \u0026#39;close\u0026#39;, \u0026#39;cancel\u0026#39;, \u0026#39;download\u0026#39;, \u0026#39;checkboxSelected\u0026#39;, \u0026#39;radioSelected\u0026#39;, \u0026#39;radioUnselect\u0026#39;] // #endif  } } "}),a.add({id:75,href:'/docs/%E7%BB%84%E4%BB%B6/%E5%9F%BA%E7%A1%80%E5%86%85%E5%AE%B9/progress/progress/',title:"Progress",section:"基础内容",content:"progress\r#\r\rprogress bar.\nProperty description\n   Attribute name Types of Defaults Description     percent Float no Percentage 0~100   show-info Boolean false Show percentage on the right side of the progress bar   border-radius number/string 0 Fillet size   font-size number/string 16 Percentage font size on the right   stroke-width Number 6 The width of the progress bar, in px   activeColor Color #09BB07 (Baidu is #E6E6E6) The color of the selected progress bar   backgroundColor Color #EBEBEB The color of the unselected progress bar   active Boolean false Animation of the progress bar from left to right   active-mode String backwards backwards: the animation is played from the beginning; forwards: the animation is played from the last end point   duration number 30 The number of milliseconds required to increase the progress by 1%    Example view demo\nThe following sample code comes from the hello uni-app project . It is recommended to use HBuilderX to create a new uni-app project and choose the hello uni-app template to directly experience the complete example.\n\u0026lt;!-- This example does not include the complete css, please refer to the above to obtain the external css, check it in the hello uni-app project --\u0026gt; \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view class=\u0026#34;uni-padding-wrap uni-common-mt\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;progress-box\u0026#34;\u0026gt; \u0026lt;progress percent=\u0026#34;20\u0026#34; show-info stroke-width=\u0026#34;3\u0026#34; /\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;progress-box\u0026#34;\u0026gt; \u0026lt;progress percent=\u0026#34;40\u0026#34; active stroke-width=\u0026#34;3\u0026#34; /\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;progress-box\u0026#34;\u0026gt; \u0026lt;progress percent=\u0026#34;60\u0026#34; active stroke-width=\u0026#34;3\u0026#34; backgroundColor=\u0026#34;#999\u0026#34;/\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;progress-box\u0026#34;\u0026gt; \u0026lt;progress percent=\u0026#34;80\u0026#34; activeColor=\u0026#34;red\u0026#34; active stroke-width=\u0026#34;8\u0026#34; /\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; "}),a.add({id:76,href:'/docs/%E7%BB%84%E4%BB%B6/%E5%9F%BA%E7%A1%80%E5%86%85%E5%AE%B9/rich-text/rich-text/',title:"Rich Text",section:"基础内容",content:"rich-text\r#\r\rRich text.\nProperty description\n   Attribute name Types of Defaults Description     nodes Array / String [] Node list / HTML String    note\n The app-nvue platform nodes property only supports the Array type  If you need to support HTML String, you need to convert HTML String to nodes array by yourself, you can use html-parser to convert.\nSupport default events, including: click, touchstart, touchmove, touchcancel, touchend, longpress.\nThe Array type is recommended for the nodes attribute. Since the component converts the String type to the Array type, the performance will decrease.\nnodes\r#\r\rNow supports two kinds of nodes, distinguished by type, which are element node and text node. The default is element node, which is the HTML node displayed in the rich text area.\nElement node: type = node\n   Attributes Description Types of Required Remarks     name Label name String Yes Support for partially trusted HTML nodes   attrs Attributes Object no Support some trusted attributes, follow Pascal nomenclature   children Child node list Array no The structure is consistent with nodes    Text node: type = text\n   Attributes Description Types of Required Remarks     text text String Yes Support entities    Trusted HTML nodes and attributes\r#\r\rThe class and style attributes are globally supported, but the id attribute is not supported .\n   node Attributes     a    abbr    b    blockquote    br    code    with the span，width   colgroup span，width   dd    of the    div    dl    DT    in    fieldset    h1    h2    h3    h4    h5    h6    hr    i    img alt，src，height，width   ins    label    legend    li    be start，type   p    q    span    strong    sub    sup    table width   tbody    e.g. colspan，height，rowspan，width   tfoot    th colspan，height，rowspan，width   thead    tr    ul     Example view demo\nThe following sample code comes from the hello uni-app project . It is recommended to use HBuilderX to create a new uni-app project and choose the hello uni-app template to directly experience the complete example.\n\u0026lt;!-- This example does not include the complete css, please refer to the above to obtain the external css, check it in the hello uni-app project --\u0026gt; \u0026lt;template\u0026gt; \u0026lt;view class=\u0026#34;content\u0026#34;\u0026gt; \u0026lt;page-head :title=\u0026#34;title\u0026#34;\u0026gt;\u0026lt;/page-head\u0026gt; \u0026lt;view class=\u0026#34;uni-padding-wrap\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-title uni-common-mt\u0026#34;\u0026gt; Array \u0026lt;text\u0026gt;\\nThe nodes attribute is Array\u0026lt;/text\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-common-mt\u0026#34; style=\u0026#34;background:#FFF; padding:20rpx;\u0026#34;\u0026gt; \u0026lt;rich-text :nodes=\u0026#34;nodes\u0026#34;\u0026gt;\u0026lt;/rich-text\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-title uni-common-mt\u0026#34;\u0026gt; String \u0026lt;text\u0026gt;\\nThe nodes attribute is String\u0026lt;/text\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-common-mt\u0026#34; style=\u0026#34;background:#FFF; padding:20rpx;\u0026#34;\u0026gt; \u0026lt;rich-text :nodes=\u0026#34;strings\u0026#34;\u0026gt;\u0026lt;/rich-text\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; export default { data() { return { nodes: [{ name: \u0026#39;div\u0026#39;, attrs: { class: \u0026#39;div-class\u0026#39;, style: \u0026#39;line-height: 60px; color: red; text-align:center;\u0026#39; }, children: [{ type: \u0026#39;text\u0026#39;, text: \u0026#39;Hello\u0026amp;nbsp;uni-app!\u0026#39; }] }], strings: \u0026#39;\u0026lt;div style=\u0026#34;text-align:center;\u0026#34;\u0026gt;\u0026lt;img src=\u0026#34;https://xxx.xxx.xxx.com/VKCEYUGU-uni-app-doc/d8590190-4f28-11eb-b680-7980c8a877b8.png\u0026#34;/\u0026gt;\u0026lt;/div\u0026gt;\u0026#39; } } }  Tips  The String type is not recommended for nodes, and performance will decrease. The rich-text component shields the events of all nodes. Therefore, if there are links or images in the content that need to be clicked, rich-text cannot be used. At this time, you can search for the parse plugin in the uni-app plugin market . The rich-text component of app-nvue supports click on link images. The attrs attribute does not support id, but supports class. The name attribute is not case sensitive. If an untrusted HTML node is used, the node and all its children will be removed. The img tag only supports web pictures. If the rich-text component is used in the custom component, only the css style of the custom component will take effect for the class in the rich-text.    "}),a.add({id:77,href:'/docs/%E7%BB%84%E4%BB%B6/%E5%9F%BA%E7%A1%80%E5%86%85%E5%AE%B9/text/text/',title:"Text",section:"基础内容",content:"text\r#\r\rText component.\nUsed to wrap text content.\nProperty description\n   Attribute name Types of Defaults Description     selectable Boolean false Whether the text is optional   space String  Show consecutive spaces   decode Boolean false Whether to decode    space value description\n   value Description     ensp Half size of Chinese character space   emsp Chinese character space size   nbsp Space size set according to font    Tips\n \u0026lt;text\u0026gt;Only nesting is supported within \u0026lt;text\u0026gt;components, other components or custom components are not supported, otherwise it will cause rendering differences on different platforms. Under app-nvue, only \u0026lt;text\u0026gt;text content can be wrapped. Unable to \u0026lt;view\u0026gt;wrap text in component. Decode can be parsed   \u0026lt; \u0026gt; \u0026amp; '    . The space standards of various operating systems are not consistent. Except for the text node, no other nodes can be selected by long pressing. Support \\nway wrap. If you are using \u0026lt;span\u0026gt;it will be converted to component compiler \u0026lt;text\u0026gt;.  Example view demo\nThe following sample code comes from the hello uni-app project . It is recommended to use HBuilderX to create a new uni-app project and choose the hello uni-app template to directly experience the complete example.\n\u0026lt;!-- This example does not include the complete css, please refer to the above to obtain the external css, check it in the hello uni-app project --\u0026gt; \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view class=\u0026#34;uni-padding-wrap uni-common-mt\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;text-box\u0026#34; scroll-y=\u0026#34;true\u0026#34;\u0026gt; \u0026lt;text\u0026gt;{{text}}\u0026lt;/text\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-btn-v\u0026#34;\u0026gt; \u0026lt;button type=\u0026#34;primary\u0026#34; :disabled=\u0026#34;!canAdd\u0026#34; @click=\u0026#34;add\u0026#34;\u0026gt;add line\u0026lt;/button\u0026gt; \u0026lt;button type=\u0026#34;warn\u0026#34; :disabled=\u0026#34;!canRemove\u0026#34; @click=\u0026#34;remove\u0026#34;\u0026gt;remove line\u0026lt;/button\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; export default { data() { return { texts: [ \u0026#39;HBuilder, the IDE chosen by 5 million developers\u0026#39;, \u0026#39;MUI, a lightweight and beautiful front-end open source framework\u0026#39;, \u0026#39;wap2app, the app that quickly converts native experience to station M\u0026#39;, \u0026#39;5+Runtime, add native wings to HTML5\u0026#39;, \u0026#39;HBuilderX, lightweight, fast, geek editor\u0026#39;, \u0026#39;uni-app, the ultimate cross-platform solution\u0026#39;, \u0026#39;HBuilder, the IDE chosen by 5 million developers\u0026#39;, \u0026#39;MUI, a lightweight and beautiful front-end open source framework\u0026#39;, \u0026#39;wap2app, the app that quickly converts native experience to station M\u0026#39;, \u0026#39;5+Runtime, add native wings to HTML5\u0026#39;, \u0026#39;HBuilderX, lightweight, fast, geek editor\u0026#39;, \u0026#39;uni-app, the ultimate cross-platform solution\u0026#39;, \u0026#39;......\u0026#39; ], text: \u0026#39;\u0026#39;, canAdd: true, canRemove: false, extraLine: [] } }, methods: { add: function(e) { this.extraLine.push(this.texts[this.extraLine.length % 12]); this.text = this.extraLine.join(\u0026#39;\\n\u0026#39;); this.canAdd = this.extraLine.length \u0026lt; 12; this.canRemove = this.extraLine.length \u0026gt; 0; }, remove: function(e) { if (this.extraLine.length \u0026gt; 0) { this.extraLine.pop(); this.text = this.extraLine.join(\u0026#39;\\n\u0026#39;); this.canAdd = this.extraLine.length \u0026lt; 12; this.canRemove = this.extraLine.length \u0026gt; 0; } } } } "}),a.add({id:78,href:'/docs/%E7%BB%84%E4%BB%B6/%E5%AA%92%E4%BD%93%E7%BB%84%E4%BB%B6/audio/audio/',title:"Audio",section:"媒体组件",content:"audio\r#\r\rAudio.\nProperty description\n   Attribute name Types of Defaults Description     id String  Unique identifier of the audio component   src String  Resource address to play audio   loop Boolean false Whether to loop   controls Boolean false Whether to show the default controls   poster String  The image resource address of the audio cover on the default control. If the value of the controls attribute is false, setting the poster is invalid   name String Unknown audio The audio name on the default control. If the value of the controls attribute is false, setting the name is invalid   author String Unknown author The name of the author on the default control. If the value of the controls attribute is false, setting the author is invalid   @error EventHandle  When an error occurs, the error event is triggered, detail = {errMsg: MediaError.code}   @play EventHandle  Trigger play event when start/continue playing   @pause EventHandle  The pause event is triggered when the playback is paused   @timeupdate EventHandle  The timeupdate event is triggered when the playback progress changes, detail = {currentTime, duration}   @ended EventHandle  Triggers the end event when playing to the end    MediaError.code\n   Return error code description     1 Access to resources is prohibited by the user   2 Network Error   3 Decoding error   4 Inappropriate resources    Example:\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view class=\u0026#34;page-body\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;page-section page-section-gap\u0026#34; style=\u0026#34;text-align: center;\u0026#34;\u0026gt; \u0026lt;audio style=\u0026#34;text-align: left\u0026#34; :src=\u0026#34;current.src\u0026#34; :poster=\u0026#34;current.poster\u0026#34; :name=\u0026#34;current.name\u0026#34; :author=\u0026#34;current.author\u0026#34; :action=\u0026#34;audioAction\u0026#34; controls\u0026gt;\u0026lt;/audio\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; export default { data() { return { current: { poster: \u0026#39;https://vkceyugu.cdn.bspapp.com/VKCEYUGU-uni-app-doc/7fbf26a0-4f4a-11eb-b680-7980c8a877b8.png\u0026#39;, name: \u0026#39;To Alice\u0026#39;, author: \u0026#39;No\u0026#39;, src: \u0026#39;1. https://vkceyugu.cdn.bspapp.com/VKCEYUGU-hello-uniapp/2cc220e0-c27a-11ea-9dfb-6da8e309e0d8.mp3\u0026#39;, }, audioAction: { method: \u0026#39;pause\u0026#39; } } } } "}),a.add({id:79,href:'/docs/%E7%BB%84%E4%BB%B6/%E5%AA%92%E4%BD%93%E7%BB%84%E4%BB%B6/image/image/',title:"Image",section:"媒体组件",content:"image\r#\r\rimage.\n   Attribute name Types of Defaults Description Platform difference description     src String  Image resource address    mode String \u0026lsquo;scaleToFill\u0026rsquo; Image cropping and zooming mode    lazy-load Boolean false Images are lazy loading. Only valid for image under page and scroll-view App   fade-show Boolean true Picture shows animation effect Only App-nvue 2.3.4+ Android is valid   @error HandleEvent  When an error occurs, the name of the event posted to AppService, event object event.detail = {errMsg:\u0026lsquo;something wrong\u0026rsquo;}    @load HandleEvent  When the image is loaded, the name of the event posted to AppService, event object event.detail = {height:\u0026lsquo;image height px\u0026rsquo;, width:\u0026lsquo;image width px\u0026rsquo;}     Tips\n \u0026lt;image\u0026gt; The default component width is 300px, height is 225px;app-nvue平台，暂时默认为屏幕宽度 src Only support relative path, absolute path, support base64 code; If the page structure is complicated and there are too many css styles, the use of image may cause the style to take effect slowly, causing a \u0026ldquo;flicker\u0026rdquo; situation. At this time, the setting image{will-change: transform}can optimize this problem. Custom components to use inside \u0026lt;image\u0026gt;when, if the srcsituation Pathfinder failure may occur using a relative path, it is recommended to use absolute paths. Images in webp format are built-in support on Android. Different platforms on iOS are different. The details are as follows: under app-vue, iOS does not support; under app-nvue, iOS supports; svg format images are supported differently on different platforms. Specifically: app-nvue does not support pictures in svg format, and only network addresses are supported on the applet.  Mode valid values:\nThere are 13 modes in mode, 4 of which are zoom modes and 9 are crop modes.\n   mode value Description     Zoom scaleToFill Scaling the image without maintaining the aspect ratio, so that the width and height of the image are fully stretched to fill the image element   Zoom aspectFit Keep the aspect ratio and zoom the picture so that the long side of the picture can be fully displayed. In other words, the picture can be displayed completely.   Zoom aspectFill Keep the aspect ratio of the zoomed picture, and only ensure that the short side of the picture is fully displayed. In other words, the picture is usually only in the horizontal or vertical direction is complete, the other direction will be intercepted.   Zoom widthFix The width does not change, the height changes automatically, keeping the original image aspect ratio unchanged   Zoom heightFix The height does not change, the width changes automatically, and the original image aspect ratio remains unchanged App and H5 platform HBuilderX 2.9.3+ support   Crop top Do not zoom the picture, only show the top area of the picture   Crop bottom Do not zoom the picture, only show the bottom area of the picture   Crop center Do not zoom the picture, only show the middle area of the picture   Crop left Do not zoom the picture, only show the left area of the picture   Crop right Do not zoom the picture, only display the right area of the picture   Crop top left Do not zoom the picture, only display the upper left area of the picture   Crop top right Do not zoom the picture, only display the upper right area of the picture   Crop bottom left Do not zoom the picture, only display the lower left area of the picture   Crop bottom right Do not zoom the picture, only display the lower right area of the picture    Example:\n\u0026lt;template\u0026gt; \u0026lt;view class=\u0026#34;page\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;image-list\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;image-item\u0026#34; v-for=\u0026#34;(item,index) in array\u0026#34; :key=\u0026#34;index\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;image-content\u0026#34;\u0026gt; \u0026lt;image style=\u0026#34;width: 200px; height: 200px; background-color: #eeeeee;\u0026#34; :mode=\u0026#34;item.mode\u0026#34; :src=\u0026#34;src\u0026#34; @error=\u0026#34;imageError\u0026#34;\u0026gt;\u0026lt;/image\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;image-title\u0026#34;\u0026gt;{{item.text}}\u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; export default { data() { return { array: [{ mode: \u0026#39;scaleToFill\u0026#39;, text: \u0026#39;scaleToFill：Scaling the picture without maintaining the aspect ratio, so that the picture fits perfectly\u0026#39; }, { mode: \u0026#39;aspectFit\u0026#39;, text: \u0026#39;aspectFit：Keep the aspect ratio and zoom the picture so that the long side of the picture can be fully displayed\u0026#39; }, { mode: \u0026#39;aspectFill\u0026#39;, text: \u0026#39;aspectFill：Keep the aspect ratio zoomed in and out of the picture, and only ensure that the short side of the picture can be fully displayed\u0026#39; }, { mode: \u0026#39;top\u0026#39;, text: \u0026#39;top：Do not zoom the picture, only show the top area of the picture\u0026#39; }, { mode: \u0026#39;bottom\u0026#39;, text: \u0026#39;bottom：Do not zoom the picture, only show the bottom area of the picture\u0026#39; }, { mode: \u0026#39;center\u0026#39;, text: \u0026#39;center：Do not zoom the picture, only show the middle area of the picture\u0026#39; }, { mode: \u0026#39;left\u0026#39;, text: \u0026#39;left：Do not zoom the picture, only show the left area of the picture\u0026#39; }, { mode: \u0026#39;right\u0026#39;, text: \u0026#39;right：Do not zoom the picture, only display the right side area of the picture\u0026#39; }, { mode: \u0026#39;top left\u0026#39;, text: \u0026#39;top left：Do not zoom the picture, only display the upper left area of the picture\u0026#39; }, { mode: \u0026#39;top right\u0026#39;, text: \u0026#39;top right：Do not zoom the picture, only display the upper right area of the picture\u0026#39; }, { mode: \u0026#39;bottom left\u0026#39;, text: \u0026#39;bottom left：Do not zoom the picture, only display the lower left area of the picture\u0026#39; }, { mode: \u0026#39;bottom right\u0026#39;, text: \u0026#39;bottom right：Do not zoom the picture, only display the lower right area of the picture\u0026#39; }], src: \u0026#39;https://vkceyugu.cdn.bspapp.com/VKCEYUGU-uni-app-doc/6acec660-4f31-11eb-a16f-5b3e54966275.jpg\u0026#39; } }, methods: { imageError: function(e) { console.error(\u0026#39;An error event occurs in the image, and the value carried is\u0026#39; + e.detail.errMsg) } } } "}),a.add({id:80,href:'/docs/%E7%BB%84%E4%BB%B6/%E5%AA%92%E4%BD%93%E7%BB%84%E4%BB%B6/video/video/',title:"Video",section:"媒体组件",content:"video\r#\r\rVideo playback component.\nProperty description\n   Attribute name Types of Defaults Description Platform difference description     src String  The resource address of the video to be played    autoplay Boolean false Whether to play automatically    loop Boolean false Whether to loop    muted Boolean false Whether to play silently    initial-time Number  Specify the initial playback position of the video, in seconds (s).    duration Number  Specify the video duration in seconds (s).    controls Boolean true Whether to display the default playback controls (play/pause button, playback progress, time)    danmu-list Object Array  Barrage list    danmu-btn Boolean false Whether to display the barrage button, it is only valid during initialization and cannot be changed dynamically    enable-danmu Boolean false Whether to display the barrage, it is only valid during initialization and cannot be changed dynamically    direction Number  Set the direction of the video in full screen. If it is not specified, it will be automatically judged according to the aspect ratio. Valid values are 0 (normal vertical orientation), 90 (screen 90 degrees counterclockwise), -90 (screen 90 degrees clockwise)    show-progress Boolean true If not set, it will only be displayed when the width is greater than 240    show-fullscreen-btn Boolean true Whether to show the full screen button    show-play-btn Boolean true Whether to display the play button in the control bar at the bottom of the video    show-center-play-btn Boolean true Whether to show the play button in the middle of the video    show-loading Boolean true Whether to display the loading control app 2.8.12+   enable-progress-gesture Boolean true Whether to enable gestures for controlling progress    object-fit String contain When the video size is inconsistent with the video container size, the form of the video. contain: contain, fill: fill, cover: cover    poster String  The image network resource address of the video cover, if the value of the controls attribute is false, setting the poster is invalid    show-mute-btn Boolean false Whether to show the mute button    title String  Title of the video, shown at the top when full screen    codec String hardware Decoder selection, hardware: hard decoding (hard decoding can increase decoding power and improve video clarity. Some hardware may have compatibility issues); software: ffmpeg soft decoding; App 3.1.0+   http-cache Boolean true Whether to enable local caching for http and https video sources. Cache strategy: The video source with this switch turned on will save the cache file locally during video playback. If the local cache pool exceeds 100M, the previous cache will be cleared before caching App 3.1.0+   play-strategy Number 0 Play strategy, 0: default strategy; 1: smooth playback mode (video sources with this mode enabled will increase buffering, and use open sl to decode audio to avoid the problem of audio and video derailment, which may reduce the first screen display speed. Applicable The scene of playing high-definition video online.); App 3.1.0+   @play EventHandle  Trigger play event when start/continue playing    @pause EventHandle  The pause event is triggered when the playback is paused    @ended EventHandle  Triggers the end event when playing to the end    @timeupdate EventHandle  Triggered when the playback progress changes, event.detail = {currentTime, duration}. Trigger frequency 250ms once    @fullscreenchange EventHandle  Triggered when the video enters and exits the full screen, event.detail = {fullScreen, direction}, direction is taken as vertical or horizontal    @waiting EventHandle  Triggered when the video has buffer    @error EventHandle  Triggered when the video playback error    @progress EventHandle  Triggered when the loading progress changes, only one segment of loading is supported. event.detail = {buffered}, percentage    @loadedmetadata EventHandle  Fires when the video metadata is loaded. event.detail = {width, height, duration}    @fullscreenclick EventHandle  Click event when the video is playing in full screen. event.detail = {screenX: \u0026ldquo;Number type, the X coordinate of the click point relative to the left edge of the screen\u0026rdquo;, screenY: \u0026ldquo;Number type, the Y coordinate of the click point relative to the top edge of the screen\u0026rdquo;, screenWidth: \u0026ldquo;Number type, Total screen width\u0026rdquo;, screenHeight:\u0026ldquo;Number type, total screen height\u0026rdquo;} App 2.6.3+    \u0026lt;video\u0026gt; The default width is 300px, height is 225px, and the width and height can be set through css.\nlegal value of direction\r#\r\r   value Description     0 Normal vertical   90 Screen 90 degrees counterclockwise   -90 Screen 90 degrees clockwise    Legal value of object-fit\r#\r\r   value Description      contain   fill filling   cover cover    Legal value of play-btn-position\r#\r\r   value Description     bottom on the controls bar   center Video middle    Example\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view class=\u0026#34;uni-padding-wrap uni-common-mt\u0026#34;\u0026gt; \u0026lt;view\u0026gt; \u0026lt;video id=\u0026#34;myVideo\u0026#34; src=\u0026#34;https://img.cdn.aliyun.dcloud.net.cn/guide/uniapp/%E7%AC%AC1%E8%AE%B2%EF%BC%88uni-app%E4%BA%A7%E5%93%81%E4%BB%8B%E7%BB%8D%EF%BC%89-%20DCloud%E5%AE%98%E6%96%B9%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B@20200317.mp4\u0026#34; @error=\u0026#34;videoErrorCallback\u0026#34; :danmu-list=\u0026#34;danmuList\u0026#34; enable-danmu danmu-btn controls\u0026gt;\u0026lt;/video\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;!-- #ifndef MP-ALIPAY --\u0026gt; \u0026lt;view class=\u0026#34;uni-list uni-common-mt\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-list-cell\u0026#34;\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view class=\u0026#34;uni-label\u0026#34;\u0026gt;Barrage content\u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-list-cell-db\u0026#34;\u0026gt; \u0026lt;input v-model=\u0026#34;danmuValue\u0026#34; class=\u0026#34;uni-input\u0026#34; type=\u0026#34;text\u0026#34; placeholder=\u0026#34;在此处输入弹幕内容\u0026#34; /\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-btn-v\u0026#34;\u0026gt; \u0026lt;button @click=\u0026#34;sendDanmu\u0026#34; class=\u0026#34;page-body-button\u0026#34;\u0026gt;Send barrage\u0026lt;/button\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;!-- #endif --\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; export default { data() { return { src: \u0026#39;\u0026#39;, danmuList: [{ text: \u0026#39;Barrage appeared in 1s\u0026#39;, color: \u0026#39;#ff0000\u0026#39;, time: 1 }, { text: \u0026#39;Barrage appearing in 3s\u0026#39;, color: \u0026#39;#ff00ff\u0026#39;, time: 3 } ], danmuValue: \u0026#39;\u0026#39; } }, onReady: function(res) { // #ifndef MP-ALIPAY  this.videoContext = uni.createVideoContext(\u0026#39;myVideo\u0026#39;) // #endif  }, methods: { sendDanmu: function() { this.videoContext.sendDanmu({ text: this.danmuValue, color: this.getRandomColor() }); this.danmuValue = \u0026#39;\u0026#39;; }, videoErrorCallback: function(e) { uni.showModal({ content: e.target.errMsg, showCancel: false }) }, getRandomColor: function() { const rgb = [] for (let i = 0; i \u0026lt; 3; ++i) { let color = Math.floor(Math.random() * 256).toString(16) color = color.length == 1 ? \u0026#39;0\u0026#39; + color : color rgb.push(color) } return \u0026#39;#\u0026#39; + rgb.join(\u0026#39;\u0026#39;) } } } "}),a.add({id:81,href:'/docs/%E7%BB%84%E4%BB%B6/%E5%AF%BC%E8%88%AA%E7%B1%BB%E7%BB%84%E4%BB%B6/navigation-bar/navigation-bar/',title:"Navigation Bar",section:"导航类组件",content:"navigation-bar\r#\r\rThe page navigation bar configuration node is used to specify some properties of the navigation bar. It can only be the first node in the page-meta component, and it needs to be used together.\nProperty description\n   Attributes Types of Defaults Required Description     title-icon string  no Title icon, icon path such as \u0026ldquo;./img/t.png\u0026rdquo;, only supports local file path, relative path, relative to the host position of the current page, fixed width and height are logical pixel value \u0026ldquo;34px\u0026rdquo;. The width and height of the pictures must be the same. Note: The title will be displayed on the left after setting the title icon.   title-icon-radius string No rounded corners no The rounded corners of the title icon, the value format is \u0026ldquo;XXpx\u0026rdquo;, where XX is the pixel value (logical pixels), for example, \u0026ldquo;10px\u0026rdquo; means a 10-pixel radius rounded corner.   subtitle-text string  no Subtitle text content. After setting the subtitle, two lines of title will be displayed, and the subtitle will be displayed below the main title (titleText). Note: After setting the subtitle, it will be displayed on the left   subtitle-size string \u0026ldquo;auto\u0026rdquo; no The font size of the subtitle text. The font size unit is pixels. For example, \u0026ldquo;14px\u0026rdquo; means the font size is 14 pixels, and the default value is 12 pixels.   subtitle-color string  no The color of the subtitle text. The color value format is \u0026ldquo;#RRGGBB\u0026rdquo; and \u0026ldquo;rgba(R,G,B,A)\u0026rdquo;. For example, \u0026ldquo;#FF0000\u0026rdquo; means that the title text color is red. The default value is the same as the main title text color   subtitle-overflow string \u0026ldquo;ellipsis\u0026rdquo; no The processing method when the title text exceeds the display area, the possible values are: \u0026ldquo;clip\u0026rdquo;-the content is clipped when it exceeds the display area; \u0026ldquo;ellipsis\u0026rdquo;-an ellipsis (\u0026hellip;) is displayed at the end when it exceeds the display area.   title-align string \u0026ldquo;auto\u0026rdquo; no Possible values: \u0026ldquo;center\u0026rdquo;-align to the center; \u0026ldquo;left\u0026rdquo;-align to the left; \u0026ldquo;auto\u0026rdquo;-automatically select according to the platform (left-aligned on Android platform, center-aligned on iOS platform)   background-image string  no The following types are supported: Background image path-such as \u0026ldquo;./img/t.png\u0026rdquo;, only supports local file path, relative path, relative to the host location of the current page, drawn according to the actual title bar width and height; gradient color-only Support linear gradient, two-color gradient, such as \u0026ldquo;linear-gradient(to top, #a80077, #66ff00)\u0026rdquo;, where the first parameter is the direction of the gradient, which can be a value: \u0026ldquo;to right\u0026rdquo; means gradient from left to right , \u0026ldquo;To left\u0026rdquo; means gradient from right to left, \u0026ldquo;to bottom\u0026rdquo; means gradient from top to bottom, \u0026ldquo;to top\u0026rdquo; means gradient from bottom to top, \u0026ldquo;to bottom right\u0026rdquo; means from upper left corner to lower right corner, \u0026ldquo;to top\u0026rdquo; \u0026ldquo;left\u0026rdquo; means from the lower right corner to the upper left corner   background-repeat string  no Only valid when backgroundImage is set to the image path. Possible values: \u0026ldquo;repeat\u0026rdquo;-the background image is tiled vertically and horizontally; \u0026ldquo;repeat-x\u0026rdquo;-the background image is tiled horizontally and stretched vertically; \u0026ldquo;repeat-y\u0026rdquo;-the background image is tiled vertically Shop, stretch horizontally; \u0026ldquo;no-repeat\u0026rdquo;-the background image stretches both vertically and horizontally. \u0026ldquo;No-repeat\u0026rdquo; is used by default   blur-effect string \u0026ldquo;none\u0026rdquo; no This effect will display the content behind the title bar in a Gaussian blur. It is only effective when the type is \u0026ldquo;transparent\u0026rdquo; or \u0026ldquo;float\u0026rdquo;. Possible values: \u0026ldquo;dark\u0026rdquo;-dark style blur, corresponding to iOS native UIBlurEffectStyleDark effect; \u0026ldquo;extralight\u0026rdquo;-highlight style blur, corresponding to iOS native UIBlurEffectStyleExtraLight effect; \u0026ldquo;light\u0026rdquo;-bright style blur, corresponding to iOS native UIBlurEffectStyleLight effect; \u0026ldquo;none\u0026rdquo; -No blur effect. Note: Avoid setting the background color when using the blur effect. Setting the background color may cover the blur effect.    Attribute description /collocation/pages?id=app-titlenview\nnote\n navigation-bar The currently supported configurations are only listed in the above table, and all the configurations of the navigation bar in page.json are not supported navigation-bar When it conflicts with the settings of pages.json, the settings of page.json will be overwritten  Sample code\r#\r\r\u0026lt;template\u0026gt; \u0026lt;page-meta\u0026gt; \u0026lt;navigation-bar :title=\u0026#34;nbTitle\u0026#34; :title-icon=\u0026#34;titleIcon\u0026#34; :title-icon-radius=\u0026#34;titleIconRadius\u0026#34; :subtitle-text=\u0026#34;subtitleText\u0026#34; :subtitle-color=\u0026#34;nbFrontColor\u0026#34; :loading=\u0026#34;nbLoading\u0026#34; :front-color=\u0026#34;nbFrontColor\u0026#34; :background-color=\u0026#34;nbBackgroundColor\u0026#34; :color-animation-duration=\u0026#34;2000\u0026#34; color-animation-timing-func=\u0026#34;easeIn\u0026#34; /\u0026gt; \u0026lt;/page-meta\u0026gt; \u0026lt;view class=\u0026#34;content\u0026#34;\u0026gt;\u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { nbTitle: \u0026#39;Title\u0026#39;, titleIcon: \u0026#39;/static/logo.png\u0026#39;, titleIconRadius: \u0026#39;20px\u0026#39;, subtitleText: \u0026#39;subtitleText\u0026#39;, nbLoading: false, nbFrontColor: \u0026#39;#000000\u0026#39;, nbBackgroundColor: \u0026#39;#ffffff\u0026#39; } }, onLoad() { }, methods: { } } \u0026lt;/script\u0026gt; "}),a.add({id:82,href:'/docs/%E7%BB%84%E4%BB%B6/%E7%94%BB%E5%B8%83/canvas/canvas/',title:"Canvas",section:"画布",content:"canvas\r#\r\rcanvas.\nProperty description\n   Attribute name Types of Defaults Description     canvas-id String  The unique identifier of the canvas component   disable-scroll Boolean false When moving in the canvas and there are bound gesture events, prohibit screen scrolling and pull-down refresh   @touchstart EventHandle  Finger touch action starts   @touchmove EventHandle  Move after finger touch   @touchend EventHandle  End of finger touch   @touchcancel EventHandle  Interrupted finger touch action, such as call reminder, pop-up window   @longtap EventHandle  Triggered after a long finger press for 500ms, moving after the long press event is triggered will not trigger the scrolling of the screen   @error EventHandle  The error event is triggered when an error occurs, detail = {errMsg:\u0026lsquo;something wrong\u0026rsquo;}    Precautions:\n The canvas tag has a default width of 300px and a height of 225px. It needs to be redrawn after dynamically changing the canvas size. The canvas-id in the same page cannot be repeated. If a canvas-id that has already appeared is used, the canvas corresponding to the canvas tag will be hidden and no longer work normally. Canvas is a native component in WeChat Mini Programs, Baidu Mini Programs, and QQ Mini Programs. It has a higher level than the front-end components. Please do not use it embedded in scroll-view, swiper, picker-view, and movable-view. To solve the problem that the canvas level is too high and cannot be covered, refer to native-component. The canvas of other applets is still the canvas in the webview. The canvas in app-vue is still the canvas of webview. If you need to use canvas under app-nvue, you need to download the plug-in, see the chapter at the bottom of the document for details. Although the canvas of app-vue is the canvas that comes with webview, it has higher performance than the native canvas of nvue and WeChat applets. Note that not native = faster. The key to the smoothness of canvas animation is not the speed of the rendering engine, but the reduction of the loss caused by frequent communication from the logic layer to the view layer. Small programs and app-nvue, because of communication blockage, it is difficult to draw very smooth canvas animation. h5 and app-vue do not have this problem. But note that if you want to draw canvas animation smoothly under app-vue, you need to use renderjs technology to put the js logic that operates the canvas in the view layer to run, avoiding frequent communication between the logic layer and the view layer. The canvas example of hello uni-app is very typical. Running the example on the same mobile phone shows that it is very smooth on both the h5 and app sides, while the applet terminal cannot achieve such smooth animation because it does not have renderjs technology.  Example: View the demo\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;canvas style=\u0026#34;width: 300px; height: 200px;\u0026#34; canvas-id=\u0026#34;firstCanvas\u0026#34; id=\u0026#34;firstCanvas\u0026#34;\u0026gt;\u0026lt;/canvas\u0026gt; \u0026lt;canvas style=\u0026#34;width: 400px; height: 500px;\u0026#34; canvas-id=\u0026#34;secondCanvas\u0026#34; id=\u0026#34;secondCanvas\u0026#34;\u0026gt;\u0026lt;/canvas\u0026gt; \u0026lt;canvas style=\u0026#34;width: 400px; height: 500px;\u0026#34; canvas-id=\u0026#34;secondCanvas\u0026#34; id=\u0026#34;secondCanvas\u0026#34; @error=\u0026#34;canvasIdErrorCallback\u0026#34;\u0026gt;\u0026lt;/canvas\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; export default { onReady: function (e) { var context = uni.createCanvasContext(\u0026#39;firstCanvas\u0026#39;) context.setStrokeStyle(\u0026#34;#00ff00\u0026#34;) context.setLineWidth(5) context.rect(0, 0, 200, 200) context.stroke() context.setStrokeStyle(\u0026#34;#ff0000\u0026#34;) context.setLineWidth(2) context.moveTo(160, 100) context.arc(100, 100, 60, 0, 2 * Math.PI, true) context.moveTo(140, 100) context.arc(100, 100, 40, 0, Math.PI, false) context.moveTo(85, 80) context.arc(80, 80, 5, 0, 2 * Math.PI, true) context.moveTo(125, 80) context.arc(120, 80, 5, 0, 2 * Math.PI, true) context.stroke() context.draw() }, methods: { canvasIdErrorCallback: function (e) { console.error(e.detail.errMsg) } } } Related api: uni.createCanvasContext\nExtended reading\ncanvas Common uses include charts and image processing, plug-in uni-app market has a large number of plug-in-based canvas, searchable chart , picture cropping, posters , two-dimensional code .\nAbout the chart\n The popular echart report on the H5 end cannot be used cross-end because it involves a large number of dom operations, and wx-chart is insufficient in cross-end and update. If you are considering small programs, it is recommended to use uChart, which is available on all ends . If you only consider the H5 end, you can continue to use regular web charts such as echart and f2. If you don\u0026rsquo;t consider small programs, App and H5 can also use echart, f2 and other web charts through renderjs technology, which has better functional performance than uchart. What is renderjs , an example of using echart based on renderjs  How to use canvas on nvue page\nStarting from HBuilderX 2.2.5 (alpha), nvue pages support Canvas and W3C WebGL API WebGL 1.0\nSample project address: NvueCanvasDemo\nOn the App side, in terms of performance, due to the problem of communication blocking, the canvas performance of nvue cannot reach the canvas of the vue page using renderjs. On the App side, Vue\u0026rsquo;s canvas is recommended.\n"}),a.add({id:83,href:'/docs/%E7%BB%84%E4%BB%B6/%E8%A1%A8%E5%8D%95%E7%BB%84%E4%BB%B6/button/button/',title:"Button",section:"表单组件",content:"Button\r#\r\rbutton.\nProperty description\n   Attribute name Types of Defaults Description Effective time     size String default Button size    type String default Button style type    plain Boolean false Whether the button is hollowed out and the background color is transparent    disabled Boolean false Whether to disable    loading Boolean false Whether there is a loading icon before the name      Note1：button-hover default is {background-color: rgba(0, 0, 0, 0.1); opacity: 0.7;}  size valid value\n   value Description     default Default size   mini Small size    type valid value\n   value Description     primary please use default instead, and then write your own style.   default white   warn red    form-type valid value\n   Value Description     submit submit Form   reset Reset Form    Button click\nThe click of the button component follows the @click event of the vue standard.\nThe button component has no url attribute. If you want to jump to the page, you can write it in @click, or you can put a layer of navigator component outside the button component. For example, if you need to jump to the about page, you can execute the following code writing methods:\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;navigator url=\u0026#34;/pages/about/about\u0026#34;\u0026gt;\u0026lt;button type=\u0026#34;default\u0026#34;\u0026gt;Jump to the about page through the navigator component\u0026lt;/button\u0026gt;\u0026lt;/navigator\u0026gt; \u0026lt;button type=\u0026#34;default\u0026#34; @click=\u0026#34;goto(\u0026#39;/pages/about/about\u0026#39;)\u0026#34;\u0026gt;Jump to the about page by function\u0026lt;/button\u0026gt; \u0026lt;button type=\u0026#34;default\u0026#34; @click=\u0026#34;navigateTo(\u0026#39;/pages/about/about\u0026#39;)\u0026#34;\u0026gt;Jump to about page\u0026lt;/button\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { methods: { goto(url) { uni.navigateTo({ url:url }) } } } \u0026lt;/script\u0026gt; Sample Code\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view class=\u0026#34;uni-padding-wrap uni-common-mt\u0026#34;\u0026gt; \u0026lt;button type=\u0026#34;primary\u0026#34;\u0026gt;Main page operation Normal\u0026lt;/button\u0026gt; \u0026lt;button type=\u0026#34;primary\u0026#34; loading=\u0026#34;true\u0026#34;\u0026gt;Main page operation Loading\u0026lt;/button\u0026gt; \u0026lt;button type=\u0026#34;primary\u0026#34; disabled=\u0026#34;true\u0026#34;\u0026gt;Main page operation Disabled\u0026lt;/button\u0026gt; \u0026lt;button type=\u0026#34;default\u0026#34;\u0026gt;Page secondary action Normal\u0026lt;/button\u0026gt; \u0026lt;button type=\u0026#34;default\u0026#34; disabled=\u0026#34;true\u0026#34;\u0026gt;Page secondary action Disabled\u0026lt;/button\u0026gt; \u0026lt;button type=\u0026#34;warn\u0026#34;\u0026gt;Warning operations Normal\u0026lt;/button\u0026gt; \u0026lt;button type=\u0026#34;warn\u0026#34; disabled=\u0026#34;true\u0026#34;\u0026gt;Warning operations Disabled\u0026lt;/button\u0026gt; \u0026lt;view class=\u0026#34;button-sp-area\u0026#34;\u0026gt; \u0026lt;button type=\u0026#34;primary\u0026#34; plain=\u0026#34;true\u0026#34;\u0026gt;button\u0026lt;/button\u0026gt; \u0026lt;button type=\u0026#34;primary\u0026#34; disabled=\u0026#34;true\u0026#34; plain=\u0026#34;true\u0026#34;\u0026gt;Non-clickable button\u0026lt;/button\u0026gt; \u0026lt;button type=\u0026#34;default\u0026#34; plain=\u0026#34;true\u0026#34;\u0026gt;button\u0026lt;/button\u0026gt; \u0026lt;button type=\u0026#34;default\u0026#34; disabled=\u0026#34;true\u0026#34; plain=\u0026#34;true\u0026#34;\u0026gt;button\u0026lt;/button\u0026gt; \u0026lt;button class=\u0026#34;mini-btn\u0026#34; type=\u0026#34;primary\u0026#34; size=\u0026#34;mini\u0026#34;\u0026gt;button\u0026lt;/button\u0026gt; \u0026lt;button class=\u0026#34;mini-btn\u0026#34; type=\u0026#34;default\u0026#34; size=\u0026#34;mini\u0026#34;\u0026gt;button\u0026lt;/button\u0026gt; \u0026lt;button class=\u0026#34;mini-btn\u0026#34; type=\u0026#34;warn\u0026#34; size=\u0026#34;mini\u0026#34;\u0026gt;button\u0026lt;/button\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; note\nThe event must use vue syntax, such as the following example of obtaining a mobile phone number\n\u0026lt;button type=\u0026#34;default\u0026#34; open-type=\u0026#34;getPhoneNumber\u0026#34; @getphonenumber=\u0026#34;decryptPhoneNumber\u0026#34;\u0026gt;get phone number\u0026lt;/button\u0026gt; "}),a.add({id:84,href:'/docs/%E7%BB%84%E4%BB%B6/%E8%A1%A8%E5%8D%95%E7%BB%84%E4%BB%B6/checkbox/checkbox/',title:"Checkbox",section:"表单组件",content:"checkbox-group\r#\r\rMultiple selector, composed of multiple checkboxes inside.\nProperty description\n   Attribute name type Defaults Describe     @change EventHandle  \u0026lt;checkbox-group\u0026gt;The change of the selected item in the middle triggers the change event, detail = {value:[array of value of the selected checkbox]}    checkbox\r#\r\rMultiple selection items.\nProperty description\n   Attribute name type Defaults Description     value String  \u0026lt;checkbox\u0026gt;Identify, select trigger \u0026lt;checkbox-group\u0026gt;the change event and carry \u0026lt;checkbox\u0026gt;the value.   disabled Boolean false Whether to disable   checked Boolean false Whether currently selected, can be used to set the default selected   color Color  The color of the checkbox, same as the color of css    Sample Code\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view class=\u0026#34;uni-padding-wrap uni-common-mt\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-title uni-common-mt\u0026#34;\u0026gt;Default style\u0026lt;/view\u0026gt; \u0026lt;view\u0026gt; \u0026lt;checkbox-group\u0026gt; \u0026lt;label\u0026gt; \u0026lt;checkbox value=\u0026#34;cb\u0026#34; checked=\u0026#34;true\u0026#34; /\u0026gt;Selected \u0026lt;/label\u0026gt; \u0026lt;label\u0026gt; \u0026lt;checkbox value=\u0026#34;cb\u0026#34; /\u0026gt;Unselected \u0026lt;/label\u0026gt; \u0026lt;/checkbox-group\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-title uni-common-mt\u0026#34;\u0026gt;Checkboxes of different colors and sizes\u0026lt;/view\u0026gt; \u0026lt;view\u0026gt; \u0026lt;checkbox-group\u0026gt; \u0026lt;label\u0026gt; \u0026lt;checkbox value=\u0026#34;cb\u0026#34; checked=\u0026#34;true\u0026#34; color=\u0026#34;#FFCC33\u0026#34; style=\u0026#34;transform:scale(0.7)\u0026#34; /\u0026gt;seleced \u0026lt;/label\u0026gt; \u0026lt;label\u0026gt; \u0026lt;checkbox value=\u0026#34;cb\u0026#34; color=\u0026#34;#FFCC33\u0026#34; style=\u0026#34;transform:scale(0.7)\u0026#34; /\u0026gt;Unselected \u0026lt;/label\u0026gt; \u0026lt;/checkbox-group\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-padding-wrap\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-title uni-common-mt\u0026#34;\u0026gt; Recommended display style \u0026lt;text\u0026gt;\\nUse uni-list layout\u0026lt;/text\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-list\u0026#34;\u0026gt; \u0026lt;checkbox-group @change=\u0026#34;checkboxChange\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;uni-list-cell uni-list-cell-pd\u0026#34; v-for=\u0026#34;item in items\u0026#34; :key=\u0026#34;item.value\u0026#34;\u0026gt; \u0026lt;view\u0026gt; \u0026lt;checkbox :value=\u0026#34;item.value\u0026#34; :checked=\u0026#34;item.checked\u0026#34; /\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view\u0026gt;{{item.name}}\u0026lt;/view\u0026gt; \u0026lt;/label\u0026gt; \u0026lt;/checkbox-group\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { title: \u0026#39;checkbox\u0026#39;, items: [{ value: \u0026#39;USA\u0026#39;, name: \u0026#39;United States\u0026#39; }, { value: \u0026#39;CHN\u0026#39;, name: \u0026#39;China\u0026#39;, checked: \u0026#39;true\u0026#39; }, { value: \u0026#39;BRA\u0026#39;, name: \u0026#39;Brazil\u0026#39; }, { value: \u0026#39;JPN\u0026#39;, name: \u0026#39;Japan\u0026#39; }, { value: \u0026#39;ENG\u0026#39;, name: \u0026#39;England\u0026#39; }, { value: \u0026#39;FRA\u0026#39;, name: \u0026#39;France\u0026#39; } ] } }, methods: { checkboxChange: function (e) { var items = this.items, values = e.detail.value; for (var i = 0, lenI = items.length; i \u0026lt; lenI; ++i) { const item = items[i] if(values.includes(item.value)){ this.$set(item,\u0026#39;checked\u0026#39;,true) }else{ this.$set(item,\u0026#39;checked\u0026#39;,false) } } } } } \u0026lt;/script\u0026gt; \u0026lt;style\u0026gt; .uni-list-cell { justify-content: flex-start } \u0026lt;/style\u0026gt; "}),a.add({id:85,href:'/docs/%E7%BB%84%E4%BB%B6/%E8%A1%A8%E5%8D%95%E7%BB%84%E4%BB%B6/editor/editor/',title:"Editor",section:"表单组件",content:"editor\r#\r\rRich text editor, you can edit and mix pictures and text formats.\nIn web development, you can use it contenteditableto implement content editing. But this is a dom API and cannot be used on non-H5 platforms. So the WeChat applet and Uni-app\u0026rsquo;s App-vue provide editorcomponents to achieve this function, and compatibility is also provided on the uni-app\u0026rsquo;s H5 platform. Technically speaking, this component is still running in the view layer webview, which also uses the contenteditablefunctions of the browser .\nEditor to export content support with labels htmland plain text text, editor uses an internal deltaformat for storage.\nBy setContentsthe time interface settings content, analytical insertion htmlmay be due to some illegal labels fail to parse, be inserted through the delta It is recommended that developers use within the application.\n   Attributes Types of Defaults Required Description     read-only boolean false no Set the editor to read-only   placeholder string  no Prompt information   show-img-size boolean false no Show picture size control when click on picture   show-img-toolbar boolean false no Show toolbar controls when you click on the picture   show-img-resize boolean false no Display the size modification control when clicking on the picture   @ready eventhandle  no Triggered when the editor is initialized   @focus eventhandle  no Triggered when the editor is focused, event.detail = {html, text, delta}   @blur eventhandle  no Triggered when the editor loses focus, detail = {html, text, delta}   @input eventhandle  no Triggered when the editor content changes, detail = {html, text, delta}   @statuschange eventhandle  no Triggered when the style in the editor is changed through the Context method, and returns the style set in the selection    The editor supports some HTML tags and inline styles, but does not support class and id\nSupported tags\r#\r\rUnsatisfied tags will be ignored and \u0026lt;div\u0026gt;will be transferred to \u0026lt;p\u0026gt;store.\n   Types of node     Elements in the line \u0026lt;span\u0026gt; \u0026lt;strong\u0026gt; \u0026lt;b\u0026gt; \u0026lt;ins\u0026gt; \u0026lt;em\u0026gt; \u0026lt;i\u0026gt; \u0026lt;u\u0026gt; \u0026lt;a\u0026gt; \u0026lt;del\u0026gt; \u0026lt;s\u0026gt; \u0026lt;sub\u0026gt; \u0026lt;sup\u0026gt; \u0026lt;img\u0026gt;   Block element \u0026lt;p\u0026gt; \u0026lt;h1\u0026gt; \u0026lt;h2\u0026gt; \u0026lt;h3\u0026gt; \u0026lt;h4\u0026gt; \u0026lt;h5\u0026gt; \u0026lt;h6\u0026gt; \u0026lt;hr\u0026gt; \u0026lt;ol\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;    Supported inline styles\r#\r\rInline styles can only be set on inline elements or block-level elements, not both. For example, font-size` is classified as an inline element attribute, and setting it on the p tag is invalid.\n   Types of style     Block style text-align direction margin margin-top margin-left margin-right margin-bottom padding padding-top padding-left padding-right padding-bottom line-height text-indent   Inline style font font-size font-style font-variant font-weight font-family letter-spacing text-decoration color background-color    Precautions\n Event bindings in the inserted html will be removed The color attribute in formats will be returned in hex format Only the plain text content will be copied into the editor when pasting When inserting html into the editor, the editor will delete some unnecessary tags to ensure the unity of the content. For example, it \u0026lt;p\u0026gt;\u0026lt;span\u0026gt;xxx\u0026lt;/span\u0026gt;\u0026lt;/p\u0026gt;will be rewritten as\u0026lt;p\u0026gt;xxx\u0026lt;/p\u0026gt; The page will be pushed up when the editor is focused, the system acts to ensure that the editing area is visible H5 end will depend on the introduction of dynamic quill.min.js , Image-resize.min.js , dependent from unpkg.com load, such as over-reliance slow to load, you can download it on your own server or CDN service provider, then self Import in the definition template head. You can’t directly insert the video. You can use the video cover to occupy the space when editing, and save the video information in the image properties, and then restore it to the video when previewing.  Sample Code\n\u0026lt;template\u0026gt; \u0026lt;view class=\u0026#34;container\u0026#34;\u0026gt; \u0026lt;editor id=\u0026#34;editor\u0026#34; class=\u0026#34;ql-container\u0026#34; :placeholder=\u0026#34;placeholder\u0026#34; @ready=\u0026#34;onEditorReady\u0026#34;\u0026gt;\u0026lt;/editor\u0026gt; \u0026lt;button type=\u0026#34;warn\u0026#34; @tap=\u0026#34;undo\u0026#34;\u0026gt;revoke\u0026lt;/button\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { placeholder: \u0026#39;Typing...\u0026#39; } }, methods: { onEditorReady() { // #ifdef MP-BAIDU 	this.editorCtx = requireDynamicLib(\u0026#39;editorLib\u0026#39;).createEditorContext(\u0026#39;editorId\u0026#39;); // #endif 	// #ifdef APP-PLUS || H5 ||MP-WEIXIN 	uni.createSelectorQuery().select(\u0026#39;#editor\u0026#39;).context((res) =\u0026gt; { this.editorCtx = res.context }).exec() // #endif 	}, undo() { this.editorCtx.undo() } } } \u0026lt;/script\u0026gt; \u0026lt;style\u0026gt; .container { padding: 10px; } #editor { width: 100%; height: 300px; background-color: #CCCCCC; } button { margin-top: 10px; } \u0026lt;/style\u0026gt; "}),a.add({id:86,href:'/docs/%E7%BB%84%E4%BB%B6/%E8%A1%A8%E5%8D%95%E7%BB%84%E4%BB%B6/form/form/',title:"Form",section:"表单组件",content:"form\r#\r\rForm, \u0026lt;switch\u0026gt; \u0026lt;input\u0026gt; \u0026lt;checkbox\u0026gt; \u0026lt;slider\u0026gt; \u0026lt;radio\u0026gt; \u0026lt;picker\u0026gt;submit the user input in the component .\nWhen you click \u0026lt;form\u0026gt;the form to submit formType of \u0026lt;button\u0026gt;the component, value value will be submitted in the form component, we need to add components to the form name as key.\nProperty description\n   Attribute name Types of Description     report-submit Boolean Whether to return formId for sending template message   report-submit-timeout number Wait for a period of time (milliseconds) to confirm whether the formId is valid. If this parameter is not specified, there is a small probability that formId is invalid (such as network failure). Specifying this parameter will check whether the formId is valid, and use the time of this parameter as the timeout period for this check. If it fails, it will return the formId starting with requestFormId:fail   @submit EventHandle Carrying the data in the form to trigger the submit event, event.detail = {value: {\u0026lsquo;name\u0026rsquo;:\u0026lsquo;value\u0026rsquo;}, formId:''}, formId will only be returned when report-submit is true   @reset EventHandle The reset event is triggered when the form is reset    Sample\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view\u0026gt; \u0026lt;form @submit=\u0026#34;formSubmit\u0026#34; @reset=\u0026#34;formReset\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-form-item uni-column\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;title\u0026#34;\u0026gt;switch\u0026lt;/view\u0026gt; \u0026lt;view\u0026gt; \u0026lt;switch name=\u0026#34;switch\u0026#34; /\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-form-item uni-column\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;title\u0026#34;\u0026gt;radio\u0026lt;/view\u0026gt; \u0026lt;radio-group name=\u0026#34;radio\u0026#34;\u0026gt; \u0026lt;label\u0026gt; \u0026lt;radio value=\u0026#34;radio1\u0026#34; /\u0026gt;\u0026lt;text\u0026gt;Option one\u0026lt;/text\u0026gt; \u0026lt;/label\u0026gt; \u0026lt;label\u0026gt; \u0026lt;radio value=\u0026#34;radio2\u0026#34; /\u0026gt;\u0026lt;text\u0026gt;Option two\u0026lt;/text\u0026gt; \u0026lt;/label\u0026gt; \u0026lt;/radio-group\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-form-item uni-column\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;title\u0026#34;\u0026gt;checkbox\u0026lt;/view\u0026gt; \u0026lt;checkbox-group name=\u0026#34;checkbox\u0026#34;\u0026gt; \u0026lt;label\u0026gt; \u0026lt;checkbox value=\u0026#34;checkbox1\u0026#34; /\u0026gt;\u0026lt;text\u0026gt;Option one\u0026lt;/text\u0026gt; \u0026lt;/label\u0026gt; \u0026lt;label\u0026gt; \u0026lt;checkbox value=\u0026#34;checkbox2\u0026#34; /\u0026gt;\u0026lt;text\u0026gt;Option two\u0026lt;/text\u0026gt; \u0026lt;/label\u0026gt; \u0026lt;/checkbox-group\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-form-item uni-column\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;title\u0026#34;\u0026gt;slider\u0026lt;/view\u0026gt; \u0026lt;slider value=\u0026#34;50\u0026#34; name=\u0026#34;slider\u0026#34; show-value\u0026gt;\u0026lt;/slider\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-form-item uni-column\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;title\u0026#34;\u0026gt;input\u0026lt;/view\u0026gt; \u0026lt;input class=\u0026#34;uni-input\u0026#34; name=\u0026#34;input\u0026#34; placeholder=\u0026#34;\u0026#34; /\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-btn-v\u0026#34;\u0026gt; \u0026lt;button form-type=\u0026#34;submit\u0026#34;\u0026gt;Submit\u0026lt;/button\u0026gt; \u0026lt;button type=\u0026#34;default\u0026#34; form-type=\u0026#34;reset\u0026#34;\u0026gt;Reset\u0026lt;/button\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { } }, methods: { formSubmit: function(e) { var formdata = e.detail.value uni.showModal({ content: \u0026#39;data：\u0026#39; + JSON.stringify(formdata), showCancel: false }); }, formReset: function(e) { } } } \u0026lt;/script\u0026gt; \u0026lt;style\u0026gt; .uni-form-item .title { padding: 20rpx 0; } \u0026lt;/style\u0026gt; Use built-in behaviors\nApplet end forminner custom assembly in inputthe form is the control, or implemented with a normal label form controls, for example , etc., can not be in formthe submitacquired form control events within a value within the assembly, it may be used at this time behaviors.\nMake custom components behave like form controls. The form component can identify these custom components, and return the field name of the component and its corresponding field value in the submit event. This will add the following two properties to it.\n   Attribute name Types of description     name String Field name in the form   value Arbitrary Field value in the form    Examples are as follows：\n\u0026lt;template\u0026gt; \u0026lt;view class=\u0026#34;content\u0026#34;\u0026gt; \u0026lt;form @submit=\u0026#34;onSubmit\u0026#34;\u0026gt; \u0026lt;comp-input name=\u0026#34;test\u0026#34; v-model=\u0026#34;testValue\u0026#34;\u0026gt;\u0026lt;/comp-input\u0026gt; \u0026lt;button form-type=\u0026#34;submit\u0026#34;\u0026gt;Submit\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { testValue: \u0026#39;Hello\u0026#39; } }, methods: { onSubmit(e) { console.log(e) } } } \u0026lt;/script\u0026gt; \u0026lt;style\u0026gt; \u0026lt;/style\u0026gt; \u0026lt;!-- /components/compInput/compInput.vue --\u0026gt; \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;input name=\u0026#34;test\u0026#34; style=\u0026#34;border: solid 1px #999999;height: 80px;\u0026#34; type=\u0026#34;text\u0026#34; @input=\u0026#34;onInput\u0026#34; :value=\u0026#34;value\u0026#34; /\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { name: \u0026#39;compInput\u0026#39;, behaviors: [\u0026#39;uni://form-field\u0026#39;], methods: { onInput(e) { this.$emit(\u0026#39;input\u0026#39;, e.detail.value) } } } \u0026lt;/script\u0026gt; \u0026lt;style\u0026gt; \u0026lt;/style\u0026gt; "}),a.add({id:87,href:'/docs/%E7%BB%84%E4%BB%B6/%E8%A1%A8%E5%8D%95%E7%BB%84%E4%BB%B6/input/input/',title:"Input",section:"表单组件",content:"input\r#\r\rInput box.\nProperty description\n   Attribute name Types of Defaults Description     value String  The initial content of the input box   type String text input type   password Boolean false Is it a password type   placeholder String  Placeholder when the input box is empty   placeholder-style String  Specify the style of the placeholder   placeholder-class String \u0026ldquo;input-placeholder\u0026rdquo; Specify the style class of the placeholder. Note that when scoped is written in the style of the page or component, you need to write /deep/ before the class name   disabled Boolean false Whether to disable   maxlength Number 140 Maximum input length, when set to -1, the maximum length is not limited   cursor Number  Specify the cursor position when focus   selection-start Number -1 The starting position of the cursor. It is valid when automatically gathering. It needs to be used with selection-end   selection-end Number -1 The end position of the cursor. It is effective when automatically gathering. It needs to be used with selection-start   @blur EventHandle  Triggered when the input box loses focus, event.detail = {value: value}   @confirm EventHandle  Triggered when the Finish button is clicked, event.detail = {value: value}    type valid value\n   value Description Platform difference description     text Text input keyboard     Precautions\n If the input component does not want to pop up the soft keyboard, it can be set to disable  Input sample\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view class=\u0026#34;uni-common-mt\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-form-item uni-column\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;title\u0026#34;\u0026gt;Auto-focusable input\u0026lt;/view\u0026gt; \u0026lt;input class=\u0026#34;uni-input\u0026#34; focus placeholder=\u0026#34;Get focus automatically\u0026#34; /\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-form-item uni-column\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;title\u0026#34;\u0026gt;The button at the bottom right corner of the keyboard is displayed as search\u0026lt;/view\u0026gt; \u0026lt;input class=\u0026#34;uni-input\u0026#34; confirm-type=\u0026#34;search\u0026#34; placeholder=\u0026#34;The button at the bottom right corner of the keyboard is displayed as search\u0026#34; /\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-form-item uni-column\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;title\u0026#34;\u0026gt;Input to control the maximum input length\u0026lt;/view\u0026gt; \u0026lt;input class=\u0026#34;uni-input\u0026#34; maxlength=\u0026#34;10\u0026#34; placeholder=\u0026#34;Maximum input length is 10\u0026#34; /\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-form-item uni-column\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;title\u0026#34;\u0026gt;Get input value in real time：{{inputValue}}\u0026lt;/view\u0026gt; \u0026lt;input class=\u0026#34;uni-input\u0026#34; @input=\u0026#34;onKeyInput\u0026#34; placeholder=\u0026#34;Input synchronization to view\u0026#34; /\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; export default { data() { return { title: \u0026#39;input\u0026#39;, focus: false, inputValue: \u0026#39;\u0026#39;, changeValue: \u0026#39;\u0026#39; } }, methods: { onKeyInput: function(event) { this.inputValue = event.target.value }, replaceInput: function(event) { var value = event.target.value; if (value === \u0026#39;11\u0026#39;) { this.changeValue = \u0026#39;2\u0026#39;; } }, hideKeyboard: function(event) { if (event.target.value === \u0026#39;123\u0026#39;) { uni.hideKeyboard(); } } } } "}),a.add({id:88,href:'/docs/%E7%BB%84%E4%BB%B6/%E8%A1%A8%E5%8D%95%E7%BB%84%E4%BB%B6/label/label/',title:"Label",section:"表单组件",content:"label\r#\r\rUsed to improve the usability of form components, use the for attribute to find the corresponding id, or place the control under the label. When clicked, the corresponding control will be triggered.\nThe priority of for is higher than internal controls. When there are multiple controls inside, the first control is triggered by default.\nCurrently controls can be bound to include: \u0026lt;button\u0026gt;, \u0026lt;checkbox\u0026gt;, \u0026lt;radio\u0026gt;, \u0026lt;switch\u0026gt;.\nProperty description\n   Attribute name Types of Description     for String The id of the bound control    Example\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view class=\u0026#34;uni-common-mt\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-form-item uni-column\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;title\u0026#34;\u0026gt;The form component is in the label\u0026lt;/view\u0026gt; \u0026lt;checkbox-group class=\u0026#34;uni-list\u0026#34; @change=\u0026#34;checkboxChange\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;uni-list-cell uni-list-cell-pd\u0026#34; v-for=\u0026#34;item in checkboxItems\u0026#34; :key=\u0026#34;item.name\u0026#34;\u0026gt; \u0026lt;view\u0026gt; \u0026lt;checkbox :value=\u0026#34;item.name\u0026#34; :checked=\u0026#34;item.checked\u0026#34;\u0026gt;\u0026lt;/checkbox\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view\u0026gt;{{item.value}}\u0026lt;/view\u0026gt; \u0026lt;/label\u0026gt; \u0026lt;/checkbox-group\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-form-item uni-column\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;title\u0026#34;\u0026gt;label uses for to identify form components\u0026lt;/view\u0026gt; \u0026lt;radio-group class=\u0026#34;uni-list\u0026#34; @change=\u0026#34;radioChange\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;uni-list-cell uni-list-cell-pd\u0026#34; v-for=\u0026#34;(item,index) in radioItems\u0026#34; :key=\u0026#34;index\u0026#34;\u0026gt; \u0026lt;view\u0026gt; \u0026lt;radio :id=\u0026#34;item.name\u0026#34; :value=\u0026#34;item.name\u0026#34; :checked=\u0026#34;item.checked\u0026#34;\u0026gt;\u0026lt;/radio\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view\u0026gt; \u0026lt;label class=\u0026#34;label-2-text\u0026#34; :for=\u0026#34;item.name\u0026#34;\u0026gt; \u0026lt;text\u0026gt;{{item.value}}\u0026lt;/text\u0026gt; \u0026lt;/label\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/label\u0026gt; \u0026lt;/radio-group\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-form-item uni-column\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;title\u0026#34;\u0026gt;Select the first one when there are multiple labels\u0026lt;/view\u0026gt; \u0026lt;checkbox-group class=\u0026#34;uni-list\u0026#34; @change=\u0026#34;checkboxChange\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;label-3\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-list-cell uni-list-cell-pd\u0026#34;\u0026gt; \u0026lt;checkbox class=\u0026#34;checkbox-3\u0026#34;\u0026gt;option 1\u0026lt;/checkbox\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-list-cell uni-list-cell-pd\u0026#34;\u0026gt; \u0026lt;checkbox class=\u0026#34;checkbox-3\u0026#34;\u0026gt;option 2\u0026lt;/checkbox\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-link uni-center\u0026#34; style=\u0026#34;margin-top:20rpx;\u0026#34;\u0026gt;Click the text under the label to select the first checkbox by default\u0026lt;/view\u0026gt; \u0026lt;/label\u0026gt; \u0026lt;/checkbox-group\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; export default { data() { return { checkboxItems: [{ name: \u0026#39;USA\u0026#39;, value: \u0026#39;United States\u0026#39; }, { name: \u0026#39;CHN\u0026#39;, value: \u0026#39;China\u0026#39;, checked: \u0026#39;true\u0026#39; } ], radioItems: [{ name: \u0026#39;USA\u0026#39;, value: \u0026#39;United States\u0026#39; }, { name: \u0026#39;CHN\u0026#39;, value: \u0026#39;China\u0026#39;, checked: \u0026#39;true\u0026#39; } ], hidden: false } }, methods: { checkboxChange: function(e) { console.log(e) var checked = e.target.value var changed = {} for (var i = 0; i \u0026lt; this.checkboxItems.length; i++) { if (checked.indexOf(this.checkboxItems[i].name) !== -1) { changed[\u0026#39;checkboxItems[\u0026#39; + i + \u0026#39;].checked\u0026#39;] = true } else { changed[\u0026#39;checkboxItems[\u0026#39; + i + \u0026#39;].checked\u0026#39;] = false } } }, radioChange: function(e) { var checked = e.target.value var changed = {} for (var i = 0; i \u0026lt; this.radioItems.length; i++) { if (checked.indexOf(this.radioItems[i].name) !== -1) { changed[\u0026#39;radioItems[\u0026#39; + i + \u0026#39;].checked\u0026#39;] = true } else { changed[\u0026#39;radioItems[\u0026#39; + i + \u0026#39;].checked\u0026#39;] = false } } } } } "}),a.add({id:89,href:'/docs/%E7%BB%84%E4%BB%B6/%E8%A1%A8%E5%8D%95%E7%BB%84%E4%BB%B6/picker-view/picker-view/',title:"Picker View",section:"表单组件",content:"picker-view\r#\r\rScroll selector embedded in the page.\nCompared with pickercomponents, it picker-viewhas more flexibility. When you need to customize the pop-up mode and UI performance, you often need to use it picker-view.\nProperty description\n   Attribute name Types of Defaults     value Array＜Number＞ The numbers in the array indicate the number of items selected by picker-view-column in picker-view (the subscript starts from 0). When the number is greater than the length of the picker-view-column option, the last item is selected.   indicator-style String Set the style of the selected box in the middle of the selector   indicator-class String Set the class name of the selected box in the selector. Note that when scoped is written in the style of the page or component, you need to write /deep/ before the class name   mask-style String Set the style of the mask   mask-class String Set the class name of the mask   @change EventHandle When scrolling selection, the change event is triggered when the value changes, event.detail = {value: value}; value is an array, which means the picker-view-column in the picker-view is currently selected (the subscript starts from 0)   @pickstart eventhandle Trigger event when scroll selection starts   @pickend eventhandle Event is triggered when scroll selection ends    Note: in which may be placed only \u0026lt;picker-view-column/\u0026gt;components, other nodes will not be displayed.\npicker-view-column\r#\r\r\u0026lt;picker-view /\u0026gt;The subassembly may be placed only in the \u0026lt;picker-view /\u0026gt;height level of the child nodes will be automatically set to the height of the picker-view is consistent with the selected frame.\nExample\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view class=\u0026#34;uni-padding-wrap\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-title\u0026#34;\u0026gt;Date：{{year}}year{{month}}month{{day}}day\u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;picker-view v-if=\u0026#34;visible\u0026#34; :indicator-style=\u0026#34;indicatorStyle\u0026#34; :value=\u0026#34;value\u0026#34; @change=\u0026#34;bindChange\u0026#34; class=\u0026#34;picker-view\u0026#34;\u0026gt; \u0026lt;picker-view-column\u0026gt; \u0026lt;view class=\u0026#34;item\u0026#34; v-for=\u0026#34;(item,index) in years\u0026#34; :key=\u0026#34;index\u0026#34;\u0026gt;{{item}}year\u0026lt;/view\u0026gt; \u0026lt;/picker-view-column\u0026gt; \u0026lt;picker-view-column\u0026gt; \u0026lt;view class=\u0026#34;item\u0026#34; v-for=\u0026#34;(item,index) in months\u0026#34; :key=\u0026#34;index\u0026#34;\u0026gt;{{item}}month\u0026lt;/view\u0026gt; \u0026lt;/picker-view-column\u0026gt; \u0026lt;picker-view-column\u0026gt; \u0026lt;view class=\u0026#34;item\u0026#34; v-for=\u0026#34;(item,index) in days\u0026#34; :key=\u0026#34;index\u0026#34;\u0026gt;{{item}}day\u0026lt;/view\u0026gt; \u0026lt;/picker-view-column\u0026gt; \u0026lt;/picker-view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data: function () { const date = new Date() const years = [] const year = date.getFullYear() const months = [] const month = date.getMonth() + 1 const days = [] const day = date.getDate() for (let i = 1990; i \u0026lt;= date.getFullYear(); i++) { years.push(i) } for (let i = 1; i \u0026lt;= 12; i++) { months.push(i) } for (let i = 1; i \u0026lt;= 31; i++) { days.push(i) } return { title: \u0026#39;picker-view\u0026#39;, years, year, months, month, days, day, value: [9999, month - 1, day - 1], visible: true, indicatorStyle: `height: 50px;` } }, methods: { bindChange: function (e) { const val = e.detail.value this.year = this.years[val[0]] this.month = this.months[val[1]] this.day = this.days[val[2]] } } } \u0026lt;/script\u0026gt; \u0026lt;style\u0026gt; .picker-view { width: 750rpx; height: 600rpx; margin-top: 20rpx; } .item { height: 50px; align-items: center; justify-content: center; text-align: center; } \u0026lt;/style\u0026gt; "}),a.add({id:90,href:'/docs/%E7%BB%84%E4%BB%B6/%E8%A1%A8%E5%8D%95%E7%BB%84%E4%BB%B6/picker/picker/',title:"Picker",section:"表单组件",content:"picker\r#\r\rThe scroll selector that pops up from the bottom. Supports five types of selectors, distinguished by mode, they are ordinary selector, multi-column selector, time selector, date selector, province/city selector, and the default is normal selector.\nNormal selector\r#\r\rmode = selector\rProperty description\n   Attribute name Types of Defaults Description     range Array / Array＜Object＞ [] When mode is selector or multiSelector, range is valid   range-key String  When range is an Array, use range-key to specify the value of key in Object as the selector display content   value Number 0 The value of value indicates which number in the range is selected (the subscript starts from 0)   selector-type String auto UI type for large screens, support picker, select, auto, by default it is displayed in picker style on iPad and select style on PC   @change EventHandle  The change event is triggered when the value changes, event.detail = {value: value}   disabled Boolean false Whether to disable   @cancel EventHandle  Triggered when you cancel the selection or click the mask layer to retract the picker    Multiple column selector\r#\r\rmode = multiSelector\rProperty description\n   Attribute name Types of Defaults Description     range Two-dimensional Array / Two-dimensional Array＜Object＞ [] When mode is selector or multiSelector, range is valid. Two-dimensional array, the length indicates how many columns, each item of the array indicates the data of each column, such as [[\u0026ldquo;a\u0026rdquo;,\u0026ldquo;b\u0026rdquo;], [\u0026ldquo;c\u0026rdquo;,\u0026ldquo;d\u0026rdquo;]]   range-key String  When range is a two-dimensional Array, use range-key to specify the value of key in Object as the selector display content   value Array [] The value of each item indicates the number of the corresponding items in the range is selected (the subscript starts from 0)   @change EventHandle  The change event is triggered when the value changes, event.detail = {value: value}   @columnchange EventHandle  The columnchange event is triggered when the value of a column changes, event.detail = {column: column, value: value}, the value of column indicates which column is changed (subscript starts from 0), and the value of value indicates the subscript of the changed value   @cancel EventHandle  Triggered when deselected   disabled Boolean false Whether to disable    Time picker\r#\r\rmode = time\rProperty description\n   Attribute name Types of Defaults Description     value String  Indicates the selected time, the format is \u0026ldquo;hh:mm\u0026rdquo;   @change EventHandle  The change event is triggered when the value changes, event.detail = {value: value}   @cancel EventHandle  Triggered when deselected   disabled Boolean false Whether to disable    Date picker\r#\r\rmode = date\rProperty description\n   Attribute name Types of Defaults Description     value String 0 Indicates the selected date, the format is \u0026ldquo;YYYY-MM-DD\u0026rdquo;   fields String day Valid values year, month, day, indicate the granularity of the selector, the default is day, the system UI is used when this item is not configured on the App side   @change EventHandle  The change event is triggered when the value changes, event.detail = {value: value}   @cancel EventHandle  Triggered when deselected   disabled Boolean false Whether to disable    valid fields\n   value Description     year Selector granularity is year   month Selector granularity is month   day Selector granularity is days    Province/city selector\r#\r\rmode = region\rProperty description\n   Attribute name Types of Defaults Description     value Array [] Indicates the selected province, municipality, and the first value of each column is selected by default   custom-item String  You can add a custom item to the top of each column   @change EventHandle  The change event is triggered when the value changes, event.detail = {value: value}   @cancel EventHandle  Triggered when deselected   disabled Boolean false Whether to disable    Example\n\u0026lt;!-- This example does not include the complete css, please refer to the above to obtain the external css, check it in the hello uni-app project --\u0026gt; \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view class=\u0026#34;uni-title uni-common-pl\u0026#34;\u0026gt;Region selector\u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-list\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-list-cell\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-list-cell-left\u0026#34;\u0026gt; Current selection \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-list-cell-db\u0026#34;\u0026gt; \u0026lt;picker @change=\u0026#34;bindPickerChange\u0026#34; :value=\u0026#34;index\u0026#34; :range=\u0026#34;array\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-input\u0026#34;\u0026gt;{{array[index]}}\u0026lt;/view\u0026gt; \u0026lt;/picker\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-title uni-common-pl\u0026#34;\u0026gt;Time selector\u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-list\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-list-cell\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-list-cell-left\u0026#34;\u0026gt; Current selection \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-list-cell-db\u0026#34;\u0026gt; \u0026lt;picker mode=\u0026#34;time\u0026#34; :value=\u0026#34;time\u0026#34; start=\u0026#34;09:01\u0026#34; end=\u0026#34;21:01\u0026#34; @change=\u0026#34;bindTimeChange\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-input\u0026#34;\u0026gt;{{time}}\u0026lt;/view\u0026gt; \u0026lt;/picker\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-title uni-common-pl\u0026#34;\u0026gt;Date picker\u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-list\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-list-cell\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-list-cell-left\u0026#34;\u0026gt; Current selection \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-list-cell-db\u0026#34;\u0026gt; \u0026lt;picker mode=\u0026#34;date\u0026#34; :value=\u0026#34;date\u0026#34; :start=\u0026#34;startDate\u0026#34; :end=\u0026#34;endDate\u0026#34; @change=\u0026#34;bindDateChange\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-input\u0026#34;\u0026gt;{{date}}\u0026lt;/view\u0026gt; \u0026lt;/picker\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; export default { data() { const currentDate = this.getDate({ format: true }) return { title: \u0026#39;picker\u0026#39;, array: [\u0026#39;China\u0026#39;, \u0026#39;United States\u0026#39;, \u0026#39;Brazil\u0026#39;, \u0026#39;Japan\u0026#39;], index: 0, date: currentDate, time: \u0026#39;12:01\u0026#39; } }, computed: { startDate() { return this.getDate(\u0026#39;start\u0026#39;); }, endDate() { return this.getDate(\u0026#39;end\u0026#39;); } }, methods: { bindPickerChange: function(e) { console.log(\u0026#39;Picker sends the selection change, and the carry value is\u0026#39;, e.target.value) this.index = e.target.value }, bindDateChange: function(e) { this.date = e.target.value }, bindTimeChange: function(e) { this.time = e.target.value }, getDate(type) { const date = new Date(); let year = date.getFullYear(); let month = date.getMonth() + 1; let day = date.getDate(); if (type === \u0026#39;start\u0026#39;) { year = year - 60; } else if (type === \u0026#39;end\u0026#39;) { year = year + 2; } month = month \u0026gt; 9 ? month : \u0026#39;0\u0026#39; + month;; day = day \u0026gt; 9 ? day : \u0026#39;0\u0026#39; + day; return `${year}-${month}-${day}`; } } } "}),a.add({id:91,href:'/docs/%E7%BB%84%E4%BB%B6/%E8%A1%A8%E5%8D%95%E7%BB%84%E4%BB%B6/radio/radio/',title:"Radio",section:"表单组件",content:"radio-group\r#\r\rSingle selector, a plurality of internal \u0026lt;radio\u0026gt;components. By putting multiple radiopackages under one radio-group, radiothe single selection of these is realized .\nProperty description\n   Attribute name Types of Defaults Description     @change EventHandle  \u0026lt;radio-group\u0026gt; The change event is triggered when the selected item in the selection changes, event.detail = {value: the value of the selected item radio}    radio\r#\r\rSingle-select items.\nProperty description\n   Attribute name Types of Defaults Description     value String  \u0026lt;radio\u0026gt;Logo. When the \u0026lt;radio\u0026gt;time is selected, \u0026lt;radio-group\u0026gt;a change event will carry \u0026lt;radio\u0026gt;a value   checked Boolean false Is currently selected   disabled Boolean false Whether to disable   color Color  The color of radio, same as the color of css    Example\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view class=\u0026#34;uni-padding-wrap\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-title\u0026#34;\u0026gt;Default style\u0026lt;/view\u0026gt; \u0026lt;view\u0026gt; \u0026lt;label class=\u0026#34;radio\u0026#34;\u0026gt;\u0026lt;radio value=\u0026#34;r1\u0026#34; checked=\u0026#34;true\u0026#34; /\u0026gt;Selected\u0026lt;/label\u0026gt; \u0026lt;label class=\u0026#34;radio\u0026#34;\u0026gt;\u0026lt;radio value=\u0026#34;r2\u0026#34; /\u0026gt;Unselected\u0026lt;/label\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-title uni-common-mt uni-common-pl\u0026#34;\u0026gt;Recommended display style\u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-list\u0026#34;\u0026gt; \u0026lt;radio-group @change=\u0026#34;radioChange\u0026#34;\u0026gt; \u0026lt;label class=\u0026#34;uni-list-cell uni-list-cell-pd\u0026#34; v-for=\u0026#34;(item, index) in items\u0026#34; :key=\u0026#34;item.value\u0026#34;\u0026gt; \u0026lt;view\u0026gt; \u0026lt;radio :value=\u0026#34;item.value\u0026#34; :checked=\u0026#34;index === current\u0026#34; /\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view\u0026gt;{{item.name}}\u0026lt;/view\u0026gt; \u0026lt;/label\u0026gt; \u0026lt;/radio-group\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; export default { data() { return { items: [{ value: \u0026#39;USA\u0026#39;, name: \u0026#39;USA\u0026#39; }, { value: \u0026#39;CHN\u0026#39;, name: \u0026#39;China\u0026#39;, checked: \u0026#39;true\u0026#39; }, { value: \u0026#39;BRA\u0026#39;, name: \u0026#39;Brazil\u0026#39; }, { value: \u0026#39;JPN\u0026#39;, name: \u0026#39;Japan\u0026#39; }, { value: \u0026#39;ENG\u0026#39;, name: \u0026#39;England\u0026#39; }, { value: \u0026#39;FRA\u0026#39;, name: \u0026#39;France\u0026#39; }, ], current: 0 } }, methods: { radioChange: function(evt) { for (let i = 0; i \u0026lt; this.items.length; i++) { if (this.items[i].value === evt.target.value) { this.current = i; break; } } } } } note\n If you need to adjust the radio size, you can adjust it through the scale method of CSS, such as reducing it to 70%style=\u0026quot;transform:scale(0.7)\u0026quot; Radio is not a checkbox, click on an already selected radio, it will not be unchecked  "}),a.add({id:92,href:'/docs/%E7%BB%84%E4%BB%B6/%E8%A1%A8%E5%8D%95%E7%BB%84%E4%BB%B6/slider/slider/',title:"Slider",section:"表单组件",content:"slider\r#\r\rSlide the selector.\nProperty description\n   Attribute name Types of Defaults Description     min Number 0 Minimum   max Number 100 Max   step Number 1 Step size, the value must be greater than 0 and divisible by (max-min)   disabled Boolean false Whether to disable   value Number 0 Current value   activeColor Color Different platforms, see below for details The line color of the selected part on the left side of the slider   backgroundColor Color # e9e9e9 The color of the background bar on the right side of the slider   block-size Number 28 The size of the slider, the value range is 12-28   block-color Color #ffffff The color of the slider   show-value Boolean false Whether to display the current value   @change EventHandle  Event triggered after completing a drag, event.detail = {value: value}   @changing EventHandle  Event triggered during dragging, event.detail = {value: value}    Example\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view class=\u0026#34;uni-padding-wrap uni-common-mt\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-title\u0026#34;\u0026gt;Set up step\u0026lt;/view\u0026gt; \u0026lt;view\u0026gt; \u0026lt;slider value=\u0026#34;60\u0026#34; @change=\u0026#34;sliderChange\u0026#34; step=\u0026#34;5\u0026#34; /\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-title\u0026#34;\u0026gt;Display current value\u0026lt;/view\u0026gt; \u0026lt;view\u0026gt; \u0026lt;slider value=\u0026#34;50\u0026#34; @change=\u0026#34;sliderChange\u0026#34; show-value /\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-title\u0026#34;\u0026gt;Set min/max\u0026lt;/view\u0026gt; \u0026lt;view\u0026gt; \u0026lt;slider value=\u0026#34;100\u0026#34; @change=\u0026#34;sliderChange\u0026#34; min=\u0026#34;50\u0026#34; max=\u0026#34;200\u0026#34; show-value /\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-title\u0026#34;\u0026gt;Sliders of different colors and sizes\u0026lt;/view\u0026gt; \u0026lt;view\u0026gt; \u0026lt;slider value=\u0026#34;50\u0026#34; @change=\u0026#34;sliderChange\u0026#34; activeColor=\u0026#34;#FFCC33\u0026#34; backgroundColor=\u0026#34;#000000\u0026#34; block-color=\u0026#34;#8A6DE9\u0026#34; block-size=\u0026#34;20\u0026#34; /\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; export default { data() { return {} }, methods: { sliderChange(e) { console.log(\u0026#39;value Change：\u0026#39; + e.detail.value) } } } "}),a.add({id:93,href:'/docs/%E7%BB%84%E4%BB%B6/%E8%A1%A8%E5%8D%95%E7%BB%84%E4%BB%B6/switch/switch/',title:"Switch",section:"表单组件",content:"switch\r#\r\rSwitch selector.\nProperty description\n   Attribute name Types of Defaults Description     checked Boolean false Whether selected   disabled Boolean false Whether to disable   type String switch Style, valid values: switch, checkbox   @change EventHandle  The change event is triggered when checked changes, event.detail={ value:checked}   color Color  The color of switch, same as the color of css    Example\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view class=\u0026#34;uni-padding-wrap uni-common-mt\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-title\u0026#34;\u0026gt;Default style\u0026lt;/view\u0026gt; \u0026lt;view\u0026gt; \u0026lt;switch checked @change=\u0026#34;switch1Change\u0026#34; /\u0026gt; \u0026lt;switch @change=\u0026#34;switch2Change\u0026#34; /\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-title\u0026#34;\u0026gt;Recommended display style\u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-list\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-list-cell uni-list-cell-pd\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-list-cell-db\u0026#34;\u0026gt;Opening\u0026lt;/view\u0026gt; \u0026lt;switch checked /\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-list-cell uni-list-cell-pd\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-list-cell-db\u0026#34;\u0026gt;shut down\u0026lt;/view\u0026gt; \u0026lt;switch /\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; export default { data() { return {} }, methods: { switch1Change: function (e) { console.log(\u0026#39;A change event occurs in switch1, and the carry value is\u0026#39;, e.target.value) }, switch2Change: function (e) { console.log(\u0026#39;switch2 has a change event, and the value carried is\u0026#39;, e.target.value) } } } note\n If you need to adjust the switch size, you can adjust it through the CSS scale method, such as reducing it to 70%style=\u0026quot;transform:scale(0.7)\u0026quot;  "}),a.add({id:94,href:'/docs/%E7%BB%84%E4%BB%B6/%E8%A1%A8%E5%8D%95%E7%BB%84%E4%BB%B6/textarea/textarea/',title:"Textarea",section:"表单组件",content:"textarea\r#\r\rMulti-line input box.\nProperty description\n   Attribute name Types of Defaults Description     value String  The content of the input box   placeholder String  Placeholder when the input box is empty   placeholder-style String  Specify the style of the placeholder   disabled Boolean false Whether to disable   maxlength Number 140 Maximum input length, when set to -1, the maximum length is not limited   focus Boolean false Get focus   auto-height Boolean false Whether to increase automatically, style.height does not take effect when auto-height is set   confirm-type String done Set the text of the button at the bottom right corner of the keyboard   selection-start Number -1 The starting position of the cursor, valid during auto focus, need to be used with selection-end   selection-end Number -1 The end position of the cursor, valid during auto focus, need to be used with selection-start   auto-blur boolean false Whether the keyboard automatically loses focus when the keyboard is retracted   @input EventHandle  When keyboard input, the input event is triggered, event.detail = {value, cursor}, the return value of the @input processing function will not be reflected on the textarea    confirm-type valid value\n   value Description     send The button in the lower right corner is \u0026ldquo;Send\u0026rdquo;   search The bottom right button is \u0026ldquo;Search\u0026rdquo;   next The button in the lower right corner is \u0026ldquo;Next\u0026rdquo;   go The bottom right button is \u0026ldquo;Go\u0026rdquo;   done The button in the lower right corner is \u0026ldquo;Done\u0026rdquo;    Example\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view class=\u0026#34;uni-title uni-common-pl\u0026#34;\u0026gt;The input area is highly adaptive, no scroll bar appears\u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-textarea\u0026#34;\u0026gt; \u0026lt;textarea @blur=\u0026#34;bindTextAreaBlur\u0026#34; auto-height /\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-title uni-common-pl\u0026#34;\u0026gt;The placeholder font is red textarea\u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-textarea\u0026#34;\u0026gt; \u0026lt;textarea placeholder-style=\u0026#34;color:#F76260\u0026#34; placeholder=\u0026#34;The placeholder font is red\u0026#34;/\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; export default { data() { return {} }, methods: { bindTextAreaBlur: function (e) { console.log(e.detail.value) } } } "}),a.add({id:95,href:'/docs/%E7%BB%84%E4%BB%B6/%E8%A7%86%E5%9B%BE%E5%AE%B9%E5%99%A8/cover-image/cover-view/',title:"Cover View",section:"视图容器",content:"cover-image\r#\r\rThe image view overlaid on the native component. Native components that can be overridden are the same cover-view, and nesting is supported cover-view.\nProperty description\n   Attribute name Types of Defaults Description Platform difference description     src String  Icon path. Support local path and network path. The base64 format is not supported.    @load eventhandle  Triggered when the image is loaded successfully    @error eventhandle  Triggered when the image fails to load     may cover the native app-vue components: \u0026lt;video\u0026gt;,\u0026lt;map\u0026gt;\nSupported events:click\nUnsupported CSS\n position: fixed opacity overflow padding linebreak white-space  Note: nvue\u0026rsquo;s cover-view is not in the above restrictions, it only supports and fully supports all nvue\u0026rsquo;s css.\nTips\n App vue page end cover-view, cover-imagethe other does not support nested components, including nested again cover-view, only covered video, map. App-side nvue page does not have these restrictions since 2.1.5. App terminal cover-imageusing the local image then need to set the resource release mode Before packaging, the new node runmode app-plus in the manifest file, set the value liberate. AApp side can also use plus.nativeObj.view to draw native content App also provides more flexible and powerful subNvue On the App side, if video and map are heavily used, nvue page is recommended.  "}),a.add({id:96,href:'/docs/%E7%BB%84%E4%BB%B6/%E8%A7%86%E5%9B%BE%E5%AE%B9%E5%99%A8/match-media/match-media/',title:"Match Media",section:"视图容器",content:"match-media\r#\r\rThe media query matches the detection node.\nSimilar to the use of media queries to adapt to large and small screens in web development, match-media is a basic view component that can adapt to different screens. You can specify a set of media query media query rules, and this component will only be displayed when the query conditions are met.\nFor example, placing a sidebar in the match-media component and setting the media query rule to display on widescreen can achieve the effect of displaying the sidebar on the widescreen of the PC, but not displaying the sidebar on the narrow screen of the mobile phone.\nProperty description\n   Attribute name Types of Defaults Required Description     min-width number  no Minimum page width (in px)   max-width number  no Maximum page width (in px)   width number  no Page width (in px)   min-height number  no Minimum page height (in px)   max-height number  no Maximum page height (in px)   height number  no Page height (in px)   orientation string  no Screen orientation (landscape or portrait)    match-media example\nThe following sample code is recommended to use HBuilderX to create a new uni-app project and experience the complete sample directly.\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;match-media :min-width=\u0026#34;375\u0026#34; :max-width=\u0026#34;800\u0026#34; \u0026gt; \u0026lt;view\u0026gt;Display when the minimum page width is 375px and the maximum page width is 800px\u0026lt;/view\u0026gt; \u0026lt;/match-media\u0026gt; \u0026lt;match-media :min-height=\u0026#34;400\u0026#34; :orientation=\u0026#34;landscape\u0026#34;\u0026gt; \u0026lt;view\u0026gt;Show here when the page height is not less than 400px and the screen orientation is portrait\u0026lt;/view\u0026gt; \u0026lt;/match-media\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; "}),a.add({id:97,href:'/docs/%E7%BB%84%E4%BB%B6/%E8%A7%86%E5%9B%BE%E5%AE%B9%E5%99%A8/movable-view/movable-view/',title:"Movable View",section:"视图容器",content:"movable-view\r#\r\rMovable view container, you can drag and slide or pinch to zoom on the page.\nmovable-viewIt must be in the movable-areacomponent and must be a direct child node, otherwise it cannot be moved.\nProperty description\n   Attribute name Types of Defaults Description Platform difference description     direction String none The moving direction of movable-view, the attribute values are all, vertical, horizontal, none    inertia Boolean false Whether movable-view has inertia    out-of-bounds Boolean false After exceeding the movable area, can the movable-view still move?    x Number / String  Define the offset in the x-axis direction. If the value of x is not within the movable range, it will automatically move to the movable range; changing the value of x will trigger the animation    y Number / String  Define the offset in the y-axis direction. If the value of y is not within the movable range, it will automatically move to the movable range; changing the y value will trigger the animation    damping Number 20 Damping coefficient, used to control the animation when x or y changes and the animation of rebounding. The larger the value, the faster the movement    friction Number 2 Friction coefficient, used to control the animation of inertial sliding, the larger the value, the greater the friction, the faster the sliding will stop; it must be greater than 0, otherwise it will be set to the default value    disabled Boolean false Whether to disable    scale Boolean false Whether to support two-finger zoom, the default zoom gesture effective area is in the movable-view    scale-min Number 0.5 Define the minimum zoom factor    scale-max Number 10 Define the maximum zoom factor    scale-value Number 1 Define the zoom factor, the value range is 0.5-10    animation Boolean true Whether to use animation    @change EventHandle  Event triggered during dragging, event.detail = {x: x, y: y, source: source}, where source represents the reason for the movement, and the value can be touch (drag), touch-out-of-bounds (Beyond the range of movement), out-of-bounds (rebound after exceeding the range of movement), friction (inertia) and empty string (setData)    @scale EventHandle  Event triggered during zooming, event.detail = {x: x, y: y, scale: scale},     In addition to basic events, movable-view provides two special events\n   Types of Triggering conditions     htouchmove The movement after the first finger touch is a horizontal movement. If this event is caught, it means that the touchmove event is also caught   vtouchmove The movement after the first finger touch is a vertical movement. If this event is caught, it means that the touchmove event is also caught     Movable-view must set width and height attributes, if not set, the default is 10px\nMovable-view defaults to absolute positioning, top and left attributes are 0px\nWhen the movable-view is smaller than the movable-area, the moving range of the movable-view is within the movable-area; when the movable-view is larger than the movable-area, the moving range of the movable-view must include the movable-area (x-axis direction and y (Axial direction is considered separately)\n Tips\n Movable-view must be in the \u0026lt;movable-area/\u0026gt;component and must be a direct child node, otherwise it cannot be moved. Except for H5 and app-nvue, other platforms do not support embedded video, map and other native components.  Example\n\u0026lt;!-- This example does not include the complete css --\u0026gt; \u0026lt;template\u0026gt; \u0026lt;view class=\u0026#34;page-body\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-padding-wrap uni-common-mt\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-title uni-common-mt\u0026#34;\u0026gt; Example 1 \u0026lt;text\u0026gt;\\nmovable-view area is smaller than movable-area\u0026lt;/text\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;movable-area\u0026gt; \u0026lt;movable-view :x=\u0026#34;x\u0026#34; :y=\u0026#34;y\u0026#34; direction=\u0026#34;all\u0026#34; @change=\u0026#34;onChange\u0026#34;\u0026gt;text\u0026lt;/movable-view\u0026gt; \u0026lt;/movable-area\u0026gt; \u0026lt;view @tap=\u0026#34;tap\u0026#34; class=\u0026#34;uni-link uni-center uni-common-mt\u0026#34;\u0026gt; Click here to move to (30px, 30px) \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-title uni-common-mt\u0026#34;\u0026gt; Example 2 \u0026lt;text\u0026gt;\\nmovable-view area is larger than movable-area\u0026lt;/text\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;movable-area\u0026gt; \u0026lt;movable-view class=\u0026#34;max\u0026#34; direction=\u0026#34;all\u0026#34;\u0026gt;text\u0026lt;/movable-view\u0026gt; \u0026lt;/movable-area\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; export default { data() { return { x: 0, y: 0, old: { x: 0, y: 0 } } }, methods: { tap: function(e) { this.x = this.old.x this.y = this.old.y this.$nextTick(function() { this.x = 30 this.y = 30 }) }, onChange: function(e) { this.old.x = e.detail.x this.old.y = e.detail.y } } } "}),a.add({id:98,href:'/docs/%E7%BB%84%E4%BB%B6/%E8%A7%86%E5%9B%BE%E5%AE%B9%E5%99%A8/movavle-area/movable-view/',title:"Movable View",section:"视图容器",content:"movable-area\r#\r\rDraggable area components.\nSince the architecture of app and applet is separated from the logic layer and the view layer, using js to monitor the drag will cause frequent communication between the logic layer and the view layer and affect performance. In order to facilitate high-performance dragging, the platform specially encapsulates movable-areacomponents.\nmovable-areaRefers to the draggable range, in which embedded movable-viewcomponents are used to indicate the draggable area.\nThat is, the finger/mouse is held down and movable-viewdragged or two-finger zooming, but the drag cannot go out of the movable-areaspecified range.\nOf course, you can also use code instead of dragging to trigger movable-viewthe movable-areazoom in.\nProperty description\n   Attribute name Types of Defaults Description     scale-area Boolean false When the movable-view inside is set to support two-finger zoom, setting this value can modify the effective area of the zoom gesture to the entire movable-area    Note: The width and height properties of the movable-area must be set, and the default is 10px if it is not set\n The movable-area app-nvue platform does not support gesture zoom, and conflicts with scrolling.  "}),a.add({id:99,href:'/docs/%E7%BB%84%E4%BB%B6/%E8%A7%86%E5%9B%BE%E5%AE%B9%E5%99%A8/scroll-view/scroll-view/',title:"Scroll View",section:"视图容器",content:"scroll-view\r#\r\rScrollable view area. Used for area scrolling.\nIt should be noted that in the page rendered by webview, the performance of area scrolling is not as good as page scrolling.\nProperty description\n   Attribute name Types of Defaults Description Platform difference description     scroll-x Boolean false Allow horizontal scrolling    scroll-y Boolean false Allow vertical scrolling    upper-threshold Number 50 How far from the top/left (in px), the scrolltoupper event is triggered    lower-threshold Number 50 How far from the bottom/right side (in px), the scrolltolower event is triggered    scroll-top Number  Set the vertical scroll bar position    scroll-left Number  Set the horizontal scroll bar position    scroll-into-view String  The value should be a child element id (id cannot start with a number). Set which direction to scroll, then scroll to the element in which direction    scroll-with-animation Boolean false Use animated transitions when setting the scroll bar position    enable-back-to-top Boolean false When iOS clicks the top status bar, Android double-clicks the title bar, the scroll bar returns to the top, only supports vertical    show-scrollbar Boolean false Control whether the scroll bar appears    refresher-enabled Boolean false Turn on custom pull-down refresh    refresher-threshold number 45 Set a custom pull-down refresh threshold    refresher-default-style string \u0026ldquo;black\u0026rdquo; Set a custom pull-down refresh default style, support setting black, white, none, none means not to use the default style    refresher-background string \u0026ldquo;#FFF\u0026rdquo; Set a custom pull-down refresh area background color    refresher-triggered boolean false Set the current pull-down refresh state, true means pull-down refresh has been triggered, false means pull-down refresh has not been triggered    enable-flex boolean false Enable flexbox layout. After opening, the current node declared display: flex will become a flex container and act on its child nodes.    scroll-anchoring boolean false Turn on the scroll anchoring feature, that is, control the scroll position not to jitter with content changes. It only takes effect under iOS. For Android, you can refer to the CSS overflow-anchor property.    @scrolltoupper EventHandle  Scroll to the top/left, the scrolltoupper event will be triggered    @scrolltolower EventHandle  Scroll to the bottom/right, the scrolltolower event will be triggered    @scroll EventHandle  Triggered when scrolling, event.detail = {scrollLeft, scrollTop, scrollHeight, scrollWidth, deltaX, deltaY}    @refresherpulling EventHandle  Custom pull-down refresh control is pulled down    @refresherrefresh EventHandle  Custom pull-down refresh is triggered    @refresherrestore EventHandle  Custom pull-down refresh is reset    @refresherabort EventHandle  Custom pull-down refresh was aborted     When using vertical scrolling, you need to give \u0026lt;scroll-view\u0026gt;a fixed height, provided by the height css.\nExample\n\u0026lt;!-- This example does not include the complete css --\u0026gt; \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view class=\u0026#34;uni-padding-wrap uni-common-mt\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-title uni-common-mt\u0026#34;\u0026gt; Vertical Scroll \u0026lt;text\u0026gt;\\n Vertical scroll\u0026lt;/text\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view\u0026gt; \u0026lt;scroll-view :scroll-top=\u0026#34;scrollTop\u0026#34; scroll-y=\u0026#34;true\u0026#34; class=\u0026#34;scroll-Y\u0026#34; @scrolltoupper=\u0026#34;upper\u0026#34; @scrolltolower=\u0026#34;lower\u0026#34; @scroll=\u0026#34;scroll\u0026#34;\u0026gt; \u0026lt;view id=\u0026#34;demo1\u0026#34; class=\u0026#34;scroll-view-item uni-bg-red\u0026#34;\u0026gt;A\u0026lt;/view\u0026gt; \u0026lt;view id=\u0026#34;demo2\u0026#34; class=\u0026#34;scroll-view-item uni-bg-green\u0026#34;\u0026gt;B\u0026lt;/view\u0026gt; \u0026lt;view id=\u0026#34;demo3\u0026#34; class=\u0026#34;scroll-view-item uni-bg-blue\u0026#34;\u0026gt;C\u0026lt;/view\u0026gt; \u0026lt;/scroll-view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view @tap=\u0026#34;goTop\u0026#34; class=\u0026#34;uni-link uni-center uni-common-mt\u0026#34;\u0026gt; Click here to return to the top \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-title uni-common-mt\u0026#34;\u0026gt; Horizontal Scroll \u0026lt;text\u0026gt;\\n horizontal scroll\u0026lt;/text\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view\u0026gt; \u0026lt;scroll-view class=\u0026#34;scroll-view_H\u0026#34; scroll-x=\u0026#34;true\u0026#34; @scroll=\u0026#34;scroll\u0026#34; scroll-left=\u0026#34;120\u0026#34;\u0026gt; \u0026lt;view id=\u0026#34;demo1\u0026#34; class=\u0026#34;scroll-view-item_H uni-bg-red\u0026#34;\u0026gt;A\u0026lt;/view\u0026gt; \u0026lt;view id=\u0026#34;demo2\u0026#34; class=\u0026#34;scroll-view-item_H uni-bg-green\u0026#34;\u0026gt;B\u0026lt;/view\u0026gt; \u0026lt;view id=\u0026#34;demo3\u0026#34; class=\u0026#34;scroll-view-item_H uni-bg-blue\u0026#34;\u0026gt;C\u0026lt;/view\u0026gt; \u0026lt;/scroll-view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; export default { data() { return { scrollTop: 0, old: { scrollTop: 0 } } }, methods: { upper: function(e) { console.log(e) }, lower: function(e) { console.log(e) }, scroll: function(e) { console.log(e) this.old.scrollTop = e.detail.scrollTop }, goTop: function(e) { this.scrollTop = this.old.scrollTop this.$nextTick(function() { this.scrollTop = 0 }); uni.showToast({ icon:\u0026#34;none\u0026#34;, title:\u0026#34;Vertical scroll scrollTop value has been modified to 0\u0026#34; }) } } } Custom pull to refresh\nNote that the performance of custom pull-down refresh is not as good as the native pull-down refresh configured in pages.json.\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;scroll-view style=\u0026#34;height: 300px;\u0026#34; scroll-y=\u0026#34;true\u0026#34; refresher-enabled=\u0026#34;true\u0026#34; :refresher-triggered=\u0026#34;triggered\u0026#34; :refresher-threshold=\u0026#34;100\u0026#34; refresher-background=\u0026#34;lightgreen\u0026#34; @refresherpulling=\u0026#34;onPulling\u0026#34; @refresherrefresh=\u0026#34;onRefresh\u0026#34; @refresherrestore=\u0026#34;onRestore\u0026#34; @refresherabort=\u0026#34;onAbort\u0026#34;\u0026gt;\u0026lt;/scroll-view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script\u0026gt; export default { data() { return { triggered: false } }, onLoad() { this._freshing = false; setTimeout(() =\u0026gt; { this.triggered = true; }, 1000) }, methods: { onPulling(e) { console.log(\u0026#34;onpulling\u0026#34;, e); }, onRefresh() { if (this._freshing) return; this._freshing = true; setTimeout(() =\u0026gt; { this.triggered = false; this._freshing = false; }, 3000) }, onRestore() { this.triggered = \u0026#39;restore\u0026#39;; // Need to reset  console.log(\u0026#34;onRestore\u0026#34;); }, onAbort() { console.log(\u0026#34;onAbort\u0026#34;); } } } \u0026lt;/script\u0026gt; Tips\n Scroll-view is not suitable for long lists and has performance problems. Long list scrolling and pull-down refresh should be realized by using native navigation bar with page-level scrolling and pull-down refresh. Included in the app-nvue page, long lists should use list instead of scroll-view. The priority of scroll-into-view is higher than scroll-top. Scroll-view is area scrolling and will not trigger page scrolling. It cannot trigger the pull-down refresh configured in pages.json, the page bottoming onReachBottomDistance, and the transparent gradient of titleNView. To use pull-down refresh, it is recommended to use page scrolling instead of scroll-view. The plug-in market has a scroll-view-based pull-down refresh based on the front-end simulation, but the performance is not good. If you need to use the front-end pull-down refresh, it is recommended to use the wxs-based pull-down refresh, the performance will be higher than the js-based monitoring method. The scroll bar setting of scroll-view can be customized through -webkit-scrollbar of css, including hiding the scroll bar.  "}),a.add({id:100,href:'/docs/%E7%BB%84%E4%BB%B6/%E8%A7%86%E5%9B%BE%E5%AE%B9%E5%99%A8/swiper/swiper/',title:"Swiper",section:"视图容器",content:"swiper\r#\r\rSlider view container.\nGenerally used for sliding left and right or up and down, such as banner carousel.\nPay attention to the difference between sliding switch and scrolling, sliding switch is one screen one screen switch. Each swiper-item under swiper is a sliding switching area and cannot stay between 2 sliding areas.\nProperty description\n   Attribute name Types of Defaults Description Platform difference description     indicator-dots Boolean false Whether to display the panel indicator    indicator-color Color rgba(0, 0, 0, .3) Point color    indicator-active-color Color #000000 The currently selected indicator point color    active-class String  class when swiper-item is visible    changing-class String  When acceleration is set to {{true}} and in the sliding process, the class when several screens in the middle are visible    autoplay Boolean false Whether to switch automatically    current Number 0 The index of the current slider    current-item-id String  The item-id of the current slider cannot be specified at the same time as current    interval Number 5000 Automatic switching time interval    duration Number 500 Sliding animation duration    circular Boolean false Whether to use continuous sliding, that is, play back to the beginning after playing to the end    vertical Boolean false Whether the sliding direction is vertical    previous-margin String 0px Front margin, can be used to expose a small part of the previous item, accepts px and rpx values    next-margin String 0px Back margin, can be used to expose a small part of the latter item, accept px and rpx values    acceleration Boolean false When turned on, it will continuously slide multiple screens according to the sliding speed    disable-programmatic-animation Boolean false Whether to disable the use of animation when code changes trigger swiper switching.    display-multiple-items Number 1 Number of sliders displayed at the same time    skip-hidden-item-layout Boolean false Whether to skip the unshown slider layout, set to true to optimize the sliding performance in complex situations, but the layout information of the hidden state slider will be lost    disable-touch Boolean false Whether to prohibit user touch operation App 2.5.5+、H5 2.5.5+、   touchable Boolean true Whether to listen to the user\u0026rsquo;s touch event, it is only valid during initialization and cannot be changed dynamically    easing-function String default Specify swiper to switch the type of ease animation, valid values: default, linear, easeInCubic, easeOutCubic, easeInOutCubic    @change EventHandle  The change event will be triggered when current changes, event.detail = {current: current, source: source}    @transition EventHandle  The transition event will be triggered when the position of swiper-item changes, event.detail = {dx: dx, dy: dy}, Alipay applet does not support dx, dy App、H5、   @animationfinish EventHandle  The animationfinish event will be triggered when the animation ends, event.detail = {current: current, source: source}     The detail returned by the change event contains a source field, which indicates the cause of the change. The possible values are as follows:\n autoplay autoplay causes swiper to change. Touch user swipes to cause swiper changes. Other reasons will be indicated by an empty string.  Swiper does the special problem of dragging the long list left and right\n Swiper is a single page component, suitable for banner image carousel and simple list sliding left and right. Because of performance issues, using swiper to make complex long lists requires high optimization skills and accepts some limitations.  Tips\n When using vertical scrolling, you need to give \u0026lt;scroll-view\u0026gt;a fixed height, provided by the height css. Note: The only be placed where the \u0026lt;swiper-item\u0026gt;components, otherwise it will lead to undefined behavior. The switching effect of the banner picture and the style of the indicator, there are many styles that can be customized At the same time, monitor the change transition, trigger the transition when you start sliding, and after letting go, the trigger sequence on the ios platform is transition\u0026hellip; change, Android is transition\u0026hellip; change transition.  swiper-item\r#\r\rIt may be placed only in the \u0026lt;swiper\u0026gt;assembly, the width and height is automatically set to 100%. Note: 100% width and height are relative to the parent component, not to the child component, and cannot be automatically opened by the child component.\n   Attribute name Types of Defaults Description     item-id String  The identifier of the swiper-item    Example\n\u0026lt;!-- This example does not include the complete css --\u0026gt; \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view class=\u0026#34;uni-padding-wrap\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;page-section swiper\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;page-section-spacing\u0026#34;\u0026gt; \u0026lt;swiper class=\u0026#34;swiper\u0026#34; :indicator-dots=\u0026#34;indicatorDots\u0026#34; :autoplay=\u0026#34;autoplay\u0026#34; :interval=\u0026#34;interval\u0026#34; :duration=\u0026#34;duration\u0026#34;\u0026gt; \u0026lt;swiper-item\u0026gt; \u0026lt;view class=\u0026#34;swiper-item uni-bg-red\u0026#34;\u0026gt;A\u0026lt;/view\u0026gt; \u0026lt;/swiper-item\u0026gt; \u0026lt;swiper-item\u0026gt; \u0026lt;view class=\u0026#34;swiper-item uni-bg-green\u0026#34;\u0026gt;B\u0026lt;/view\u0026gt; \u0026lt;/swiper-item\u0026gt; \u0026lt;swiper-item\u0026gt; \u0026lt;view class=\u0026#34;swiper-item uni-bg-blue\u0026#34;\u0026gt;C\u0026lt;/view\u0026gt; \u0026lt;/swiper-item\u0026gt; \u0026lt;/swiper\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;swiper-list\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-list-cell uni-list-cell-pd\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-list-cell-db\u0026#34;\u0026gt;Indicator point\u0026lt;/view\u0026gt; \u0026lt;switch :checked=\u0026#34;indicatorDots\u0026#34; @change=\u0026#34;changeIndicatorDots\u0026#34; /\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-list-cell uni-list-cell-pd\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-list-cell-db\u0026#34;\u0026gt;Autoplay\u0026lt;/view\u0026gt; \u0026lt;switch :checked=\u0026#34;autoplay\u0026#34; @change=\u0026#34;changeAutoplay\u0026#34; /\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-padding-wrap\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-common-mt\u0026#34;\u0026gt; \u0026lt;text\u0026gt;Slideshow switching duration (ms)\u0026lt;/text\u0026gt; \u0026lt;text class=\u0026#34;info\u0026#34;\u0026gt;{{duration}}\u0026lt;/text\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;slider @change=\u0026#34;durationChange\u0026#34; :value=\u0026#34;duration\u0026#34; min=\u0026#34;500\u0026#34; max=\u0026#34;2000\u0026#34; /\u0026gt; \u0026lt;view class=\u0026#34;uni-common-mt\u0026#34;\u0026gt; \u0026lt;text\u0026gt;Auto play interval time (ms)\u0026lt;/text\u0026gt; \u0026lt;text class=\u0026#34;info\u0026#34;\u0026gt;{{interval}}\u0026lt;/text\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;slider @change=\u0026#34;intervalChange\u0026#34; :value=\u0026#34;interval\u0026#34; min=\u0026#34;2000\u0026#34; max=\u0026#34;10000\u0026#34; /\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; export default { data() { return { background: [\u0026#39;color1\u0026#39;, \u0026#39;color2\u0026#39;, \u0026#39;color3\u0026#39;], indicatorDots: true, autoplay: true, interval: 2000, duration: 500 } }, methods: { changeIndicatorDots(e) { this.indicatorDots = !this.indicatorDots }, changeAutoplay(e) { this.autoplay = !this.autoplay }, intervalChange(e) { this.interval = e.target.value }, durationChange(e) { this.duration = e.target.value } } } "}),a.add({id:101,href:'/docs/%E7%BB%84%E4%BB%B6/%E8%A7%86%E5%9B%BE%E5%AE%B9%E5%99%A8/view/view/',title:"View",section:"视图容器",content:"view\r#\r\rView container.\nIt is similar to the div in traditional html and is used to wrap the content of various elements.\nProperty description\n   Attribute name Types of Defaults Description     hover-class String none Specifies the style class to be pressed. When hover-class=\u0026ldquo;none\u0026rdquo;, there is no click state effect   hover-stop-propagation Boolean false Specify whether to prevent the click state of the ancestor node of this node   hover-start-time Number 50 How long does the click state appear after pressing, in milliseconds   hover-stay-time Number 400 Retention time of the click state after releasing the finger, in milliseconds    Example\nFor the following sample code, it is recommended to use HBuilderX to create a new uni-app project and select the hello uni-app template to quickly experience the complete example.\n\u0026lt;!-- This example does not include the complete css --\u0026gt; \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view class=\u0026#34;uni-padding-wrap uni-common-mt\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;uni-title uni-common-mt\u0026#34;\u0026gt; flex-direction: row \u0026lt;text\u0026gt;\\n Horizontal layout\u0026lt;/text\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-flex uni-row\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;flex-item uni-bg-red\u0026#34;\u0026gt;A\u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;flex-item uni-bg-green\u0026#34;\u0026gt;B\u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;flex-item uni-bg-blue\u0026#34;\u0026gt;C\u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-title uni-common-mt\u0026#34;\u0026gt; flex-direction: column \u0026lt;text\u0026gt;\\n Vertical layout\u0026lt;/text\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;uni-flex uni-column\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;flex-item flex-item-V uni-bg-red\u0026#34;\u0026gt;A\u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;flex-item flex-item-V uni-bg-green\u0026#34;\u0026gt;B\u0026lt;/view\u0026gt; \u0026lt;view class=\u0026#34;flex-item flex-item-V uni-bg-blue\u0026#34;\u0026gt;C\u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; Tips\n If used \u0026lt;div\u0026gt;, it will be converted to \u0026lt;view\u0026gt;.  "}),a.add({id:102,href:'/docs/%E7%BB%84%E4%BB%B6/%E8%B7%AF%E7%94%B1%E4%B8%8E%E9%A1%B5%E9%9D%A2%E8%B7%B3%E8%BD%AC/custom-tab-bar/custom-tab-bar/',title:"Custom Tab Bar",section:"路由与页面跳转",content:"custom-tab-bar\r#\r\rCustom tabBar component.\nto enhance performance, pages.jsonin a fixed configuration native tabBar.\nAt the same time, has more flexible requirements for the position and style of the tabBar. As a first-level navigation, the tabBar is more often at the top of the PC web page rather than the bottom.\nCustom tabBar components should be born, it still reads pages.jsontabBar information in configuration, but this component can customize its placement, the flexibility to configure various css.\nThe component supports pages.jsonthe tabBarconfiguration, which does not support borderStyleconfiguration.\nThe component supports all tabBarrelevant the API, such as setting tab logo, a red dot switchTab and the like.\nProperty description\n   Attribute name Types of Defaults Description     direction String horizontal The arrangement direction of the options can be selected: horizontal, vertical   show-icon Boolean false Whether to show icon   selected Number 0 Selected tabBar option index value   onTabItemTap EventHandle  Click event, the parameter is Object, see the table below for details    onTabItemTap Parameter Description：\n   Attributes Types of Description     index String The sequence number of the clicked tabItem, starting from 0   pagePath String The page path of the clicked tabItem   text String The button text of the tabItem that was clicked    This component requires no configuration list tabBar each tabItem still from pages.jsonreading. Avoid writing repetitive code at multiple ends.\nExample\nIn hello uni-app, place a custom tabBar component in topWindow, and place the page level navigation at the top of the page.\n\u0026lt;!-- This example does not include the complete css --\u0026gt; \u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;custom-tab-bar direction=\u0026#34;horizontal\u0026#34; :show-icon=\u0026#34;false\u0026#34; :selected=\u0026#34;selected\u0026#34; @onTabItemTap=\u0026#34;onTabItemTap\u0026#34; /\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; "}),a.add({id:103,href:'/docs/%E7%BB%84%E4%BB%B6/%E8%B7%AF%E7%94%B1%E4%B8%8E%E9%A1%B5%E9%9D%A2%E8%B7%B3%E8%BD%AC/navigator/navigator/',title:"Navigator",section:"路由与页面跳转",content:"navigator\r#\r\rPage jump.\nThis component is similar to the component in HTML \u0026lt;a\u0026gt;, but it can only jump to local pages. The target page must be registered in pages.json.\nThe function of this component has API method, see also: API\u0026gt;Routing and page jump\u0026gt;router.md\nProperty description\n   Attribute name Types of Defaults Description Platform difference description     url String  Hoplinks within the application, is a relative or absolute path, such as: \u0026ldquo;../ first / first\u0026rdquo;, \u0026ldquo;/ pages / first / first\u0026rdquo;, careful not to add .vuethe suffix    open-type String navigate Jump way    delta Number  Valid when open-type is\u0026rsquo;navigateBack', indicating the number of layers to fall back    animation-type String pop-in/out When open-type is navigate, navigateBack, it is valid, the window display/close animation effect App   animation-duration Number 300 Valid when open-type is navigate, navigateBack, the duration of the window display/close animation. App   hover-class String navigator-hover Specify the style class when clicking. When hover-class=\u0026ldquo;none\u0026rdquo;, there is no click state effect    hover-stop-propagation Boolean false Specify whether to prevent the click state of the ancestor node of this node    hover-start-time Number 50 How long does the click state appear after pressing, in milliseconds    hover-stay-time Number 600 Retention time of the click state after releasing the finger, in milliseconds    target String self On which mini program target the jump occurs, the current mini program is defaulted, and the value range is self/miniProgram     open-type valid value\n   value Description Platform difference description     navigate Corresponding to the function of uni.navigateTo    redirect Corresponding to the function of uni.redirectTo    switchTab Corresponding to the function of uni.switchTab    reLaunch Corresponding to the function of uni.reLaunch    navigateBack Corresponding to the function of uni.navigateBack    exit Exit the mini program, it takes effect when target=\u0026ldquo;miniProgram\u0026rdquo;     note\n  To jump to the tabbar page, open-type=\u0026ldquo;switchTab\u0026rdquo; must be set\n  The navigator-hover defaults to {background-color: rgba(0, 0, 0, 0.1); opacity: 0.7;}, and \u0026lt;navigator\u0026gt;the background color of the child nodes should be transparent.\n  The app-nvue platform is only supported by pure nvue projects (render is native) \u0026lt;navigator\u0026gt;. If the non-render is native, nvue does not support the navigator component, please use the API to jump.\n  Example\n\u0026lt;template\u0026gt; \u0026lt;view\u0026gt; \u0026lt;view class=\u0026#34;page-body\u0026#34;\u0026gt; \u0026lt;view class=\u0026#34;btn-area\u0026#34;\u0026gt; \u0026lt;navigator url=\u0026#34;navigate/navigate?title=navigate\u0026#34; hover-class=\u0026#34;navigator-hover\u0026#34;\u0026gt; \u0026lt;button type=\u0026#34;default\u0026#34;\u0026gt;Jump to new page\u0026lt;/button\u0026gt; \u0026lt;/navigator\u0026gt; \u0026lt;navigator url=\u0026#34;redirect/redirect?title=redirect\u0026#34; open-type=\u0026#34;redirect\u0026#34; hover-class=\u0026#34;other-navigator-hover\u0026#34;\u0026gt; \u0026lt;button type=\u0026#34;default\u0026#34;\u0026gt;Open on current page\u0026lt;/button\u0026gt; \u0026lt;/navigator\u0026gt; \u0026lt;navigator url=\u0026#34;/pages/tabBar/extUI/extUI\u0026#34; open-type=\u0026#34;switchTab\u0026#34; hover-class=\u0026#34;other-navigator-hover\u0026#34;\u0026gt; \u0026lt;button type=\u0026#34;default\u0026#34;\u0026gt;Jump to tab page\u0026lt;/button\u0026gt; \u0026lt;/navigator\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/view\u0026gt; \u0026lt;/template\u0026gt; // navigate.vue Page accepts parameters export default { onLoad: function (option) { //option is object type, it will serialize the parameters passed on the previous page 	console.log(option.id); //Print out the parameters passed on the previous page 	console.log(option.name); //Print out the parameters passed on the previous page 	} } The URL has a length limit. If the string is too long, it will fail to pass. You can use encodeURIComponentother methods to solve it. The following is encodeURIComponentan example.。\n\u0026lt;navigator :url=\u0026#34;\u0026#39;/pages/navigate/navigate?item=\u0026#39;+ encodeURIComponent(JSON.stringify(item))\u0026#34;\u0026gt;\u0026lt;/navigator\u0026gt; // navigate.vue Page accepts parameters onLoad: function (option) { const item = JSON.parse(decodeURIComponent(option.item)); } "})})()